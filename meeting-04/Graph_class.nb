(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    365993,       6900]
NotebookOptionsPosition[    362214,       6831]
NotebookOutlinePosition[    362609,       6847]
CellTagsIndexPosition[    362566,       6844]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "->", " ", "1100"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "->", " ", "1400"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], "->", " ", "2000"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], " ", "->", " ", "2600"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "->", " ", "1300"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "5"}], "}"}], " ", "->", "2000"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "->", " ", "780"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}], "->", "1000"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}], "->", " ", "900"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "6"}], "}"}], "->", " ", "1300"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "7"}], "}"}], " ", "->", " ", "800"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "7"}], "}"}], " ", "->", " ", "200"}]}], 
      "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"7", ",", "7"}], "}"}], ",", " ", "Infinity"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Normal", "[", "s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertex", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "->", "\"\<LA\>\""}], ",", 
     RowBox[{"2", "->", " ", "\"\<SE\>\""}], ",", 
     RowBox[{"3", "->", " ", "\"\<DE\>\""}], ",", " ", 
     RowBox[{"4", "->", "\"\<DA\>\""}], ",", 
     RowBox[{"5", "->", " ", "\"\<CH\>\""}], ",", " ", 
     RowBox[{"6", "->", "\"\<DC\>\""}], ",", 
     RowBox[{"7", "->", " ", "\"\<NY\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gr", " ", "=", " ", 
   RowBox[{"WeightedAdjacencyGraph", "[", 
    RowBox[{"S", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"VertexLabels", "\[Rule]", " ", "vertex"}], ",", " ", 
     RowBox[{"EdgeLabels", "\[Rule]", "\"\<EdgeWeight\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sps", " ", "=", " ", 
   RowBox[{"FindSpanningTree", "[", 
    RowBox[{"gr", ",", " ", 
     RowBox[{"EdgeLabels", " ", "->", " ", "\"\<EdgeWeight\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"gr", ",", " ", "sps"}], "]"}]}], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"5a9eb0fc-1727-4b7d-86f8-aa969deec0a9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
       SparseArray[
       Automatic, {7, 7}, 0, {
        1, {{0, 4, 7, 10, 14, 19, 22, 24}, {{2}, {4}, {5}, {6}, {1}, {3}, {
          5}, {2}, {4}, {5}, {1}, {3}, {5}, {6}, {1}, {2}, {3}, {4}, {7}, {
          1}, {4}, {7}, {5}, {6}}}, Pattern}]}, {
      EdgeLabels -> {"EdgeWeight"}, 
       VertexLabels -> {
        6 -> "DC", 4 -> "DA", 2 -> "SE", 1 -> "LA", 3 -> "DE", 5 -> "CH", 7 -> 
         "NY"}, GraphHighlight -> {
         UndirectedEdge[5, 7], 
         UndirectedEdge[2, 3], 1, 
         UndirectedEdge[4, 5], 
         UndirectedEdge[1, 2], 6, 
         UndirectedEdge[6, 7], 
         UndirectedEdge[3, 4], 2, 4, 7, 3, 5}, 
       EdgeWeight -> {1100, 1400, 2000, 2600, 1300, 2000, 780, 1000, 900, 
        1300, 800, 200}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
            2.0489463018297083`, 1.2416522616361885`}}, 
            0.023802741961610058`]}}, 
         InsetBox["1100", {1.5156295644317241, 0.9333050170647192}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.1831554652987484`, 0.}}, 0.023802741961610058`]}, 
         InsetBox["1400", {1.0827341461662443, 0.31247888624662495}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.1223507266805313, 0.8629120570977575}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           0.09855656536281132, 0.2759548016052554}}, 0.023802741961610058`]},
          InsetBox["2600", {0.5404346961982757, 0.45045628704925267}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
            2.14820487455907, 0.420375226069281}}, 0.023802741961610058`]}}, 
         InsetBox["1300", {2.098575588194389, 0.8310137438527347}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.6556674640785154, 1.1712593016692268}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.14820487455907, 0.420375226069281}, {
            1.1831554652987484`, 0.}}, 0.023802741961610058`]}}, 
         InsetBox["780", {1.6656801699289092, 0.2101876130346405}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.14820487455907, 0.420375226069281}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["1000", {1.7052967504431962, 0.760620783885773}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.1831554652987484`, 0.}, {1.2623886263273227`, 
            1.100866341702265}}, 0.023802741961610058`]}}, 
         InsetBox["900", {1.2227720458130356, 0.5504331708511325}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1831554652987484`, 0.}, {0.09855656536281132, 
           0.2759548016052554}}, 0.023802741961610058`]}, 
         InsetBox["1300", {0.6408560153307798, 0.1379774008026277}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.2623886263273227`, 1.100866341702265}, {0., 
            1.3009572153741233`}}, 0.023802741961610058`]}}, 
         InsetBox["800", {0.6311943131636614, 1.2009117785381942}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.09855656536281132, 0.2759548016052554}, {0., 
            1.3009572153741233`}}, 0.023802741961610058`]}}, 
         InsetBox["200", {0.04927828268140566, 0.7884560084896893}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0.98231282703374, 0.6249577724932499}, 
           0.023802741961610058]}, 
         InsetBox["\<\"LA\"\>", 
          Offset[{2, 2}, {1.00611556899535, 0.6487605144548599}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{2.0489463018297083, 1.2416522616361885}, 
           0.023802741961610058]}, 
         InsetBox["\<\"SE\"\>", 
          Offset[{2, 2}, {2.0727490437913185, 1.2654550035977985}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{2.14820487455907, 0.420375226069281}, 
           0.023802741961610058]}, 
         InsetBox["\<\"DE\"\>", 
          Offset[{2, 2}, {2.17200761652068, 0.44417796803089105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{1.1831554652987484, 0.}, 0.023802741961610058]}, 
         InsetBox["\<\"DA\"\>", 
          Offset[{2, 2}, {1.2069582072603584, 0.023802741961610058}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{1.2623886263273227, 1.100866341702265}, 
           0.023802741961610058]}, 
         InsetBox["\<\"CH\"\>", 
          Offset[{2, 2}, {1.2861913682889328, 1.124669083663875}], ImageScaled
          [{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0.09855656536281132, 0.2759548016052554}, 
           0.023802741961610058]}, 
         InsetBox["\<\"DC\"\>", 
          Offset[{2, 2}, {0.12235930732442138, 0.29975754356686546}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0., 1.3009572153741233}, 0.023802741961610058]}, 
         InsetBox["\<\"NY\"\>", 
          Offset[{2, 2}, {0.023802741961610058, 1.3247599573357334}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8454387037999573`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"026f677f-8f0a-4649-9631-fa5e01acfe02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"city", " ", "=", " ", 
  RowBox[{
   RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<LA\>\"", ",", "\"\<Seattle\>\"", ",", "\"\<Denver\>\"", ",", 
     "\"\<Dallas\>\"", ",", "\"\<Cicago\>\"", ",", "\"\<Washington DC\>\"", 
     ",", "\"\<NY\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845438760260405*^9, 3.845438762893518*^9}, {
   3.84543879289638*^9, 3.845438795493333*^9}, {3.845438908574073*^9, 
   3.8454389422520247`*^9}, 3.8454390123046227`*^9, {3.845439045780546*^9, 
   3.845439057332737*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"5863a114-0972-4e93-a695-e0e57e5f1242"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Los Angeles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seattle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Seattle\"", ",", "\"Washington\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denver\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Denver\"", ",", "\"Colorado\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Denver\\\", \\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dallas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \\\"UnitedStates\
\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chicago\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Chicago\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Washington\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Washington\\\", \\\"DistrictOfColumbia\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845438763674246*^9, 3.84543879761425*^9, {3.845438931670164*^9, 
   3.8454389439516993`*^9}, {3.845439022962351*^9, 3.845439048041511*^9}, 
   3.845439203012065*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"35789d0f-6ca5-470c-b7a6-d612c8cc76a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gcity", "=", " ", 
   RowBox[{"VertexReplace", "[", 
    RowBox[{"gr", " ", ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", "7", "]"}], "->", "city"}], "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sps", " ", "=", " ", 
   RowBox[{"FindSpanningTree", "[", 
    RowBox[{"gcity", ",", " ", 
     RowBox[{"EdgeLabels", " ", "->", " ", "\"\<EdgeWeight\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"hg", " ", "=", 
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"gcity", ",", " ", "sps", ",", 
    RowBox[{"EdgeStyle", "\[Rule]", "Green"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.845439072869616*^9, 3.8454391134224987`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"e3b5ddc1-f59b-4cb8-ae69-ba8893671d27"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["City", {"LosAngeles", "California", "UnitedStates"}], 
       Entity["City", {"Seattle", "Washington", "UnitedStates"}], 
       Entity["City", {"Denver", "Colorado", "UnitedStates"}], 
       Entity["City", {"Dallas", "Texas", "UnitedStates"}], 
       Entity["City", {"Chicago", "Illinois", "UnitedStates"}], 
       Entity["City", {"Washington", "DistrictOfColumbia", "UnitedStates"}], 
       Entity["City", {"NewYork", "NewYork", "UnitedStates"}]}, {Null, 
       SparseArray[
       Automatic, {7, 7}, 0, {
        1, {{0, 4, 7, 10, 14, 19, 22, 24}, {{2}, {4}, {5}, {6}, {1}, {3}, {
          5}, {2}, {4}, {5}, {1}, {3}, {5}, {6}, {1}, {2}, {3}, {4}, {7}, {
          1}, {4}, {7}, {5}, {6}}}, Pattern}]}, {
      EdgeLabels -> {"EdgeWeight"}, EdgeStyle -> {UndirectedEdge[
           Entity["City", {"Denver", "Colorado", "UnitedStates"}], 
           Entity["City", {"Dallas", "Texas", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0], UndirectedEdge[
           Entity["City", {"LosAngeles", "California", "UnitedStates"}], 
           Entity["City", {"Seattle", "Washington", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0], UndirectedEdge[
           Entity["City", {"Chicago", "Illinois", "UnitedStates"}], 
           Entity["City", {"NewYork", "NewYork", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0], UndirectedEdge[
           Entity["City", {"Dallas", "Texas", "UnitedStates"}], 
           Entity["City", {"Chicago", "Illinois", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0], UndirectedEdge[
           Entity["City", {"Seattle", "Washington", "UnitedStates"}], 
           Entity["City", {"Denver", "Colorado", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0], UndirectedEdge[
           Entity[
           "City", {"Washington", "DistrictOfColumbia", "UnitedStates"}], 
           Entity["City", {"NewYork", "NewYork", "UnitedStates"}]] -> 
         RGBColor[0, 1, 0]}, VertexLabels -> {"Name"}, GraphHighlight -> {
         Entity["City", {"Washington", "DistrictOfColumbia", "UnitedStates"}], 
         UndirectedEdge[
          Entity[
          "City", {"Washington", "DistrictOfColumbia", "UnitedStates"}], 
          Entity["City", {"NewYork", "NewYork", "UnitedStates"}]], 
         Entity["City", {"Chicago", "Illinois", "UnitedStates"}], 
         Entity["City", {"Denver", "Colorado", "UnitedStates"}], 
         UndirectedEdge[
          Entity["City", {"Denver", "Colorado", "UnitedStates"}], 
          Entity["City", {"Dallas", "Texas", "UnitedStates"}]], 
         Entity["City", {"Seattle", "Washington", "UnitedStates"}], 
         UndirectedEdge[
          Entity["City", {"LosAngeles", "California", "UnitedStates"}], 
          Entity["City", {"Seattle", "Washington", "UnitedStates"}]], 
         UndirectedEdge[
          Entity["City", {"Seattle", "Washington", "UnitedStates"}], 
          Entity["City", {"Denver", "Colorado", "UnitedStates"}]], 
         Entity["City", {"Dallas", "Texas", "UnitedStates"}], 
         Entity["City", {"LosAngeles", "California", "UnitedStates"}], 
         UndirectedEdge[
          Entity["City", {"Dallas", "Texas", "UnitedStates"}], 
          Entity["City", {"Chicago", "Illinois", "UnitedStates"}]], 
         Entity["City", {"NewYork", "NewYork", "UnitedStates"}], 
         UndirectedEdge[
          Entity["City", {"Chicago", "Illinois", "UnitedStates"}], 
          Entity["City", {"NewYork", "NewYork", "UnitedStates"}]]}, 
       EdgeWeight -> {1100, 1400, 2000, 2600, 1300, 2000, 780, 1000, 900, 
        1300, 800, 200}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
            2.0489463018297083`, 1.2416522616361885`}}, 
            0.023802741961610058`]}}, 
         InsetBox["1100", {1.5156295644317241, 0.9333050170647192}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.1831554652987484`, 0.}}, 0.023802741961610058`]}, 
         InsetBox["1400", {1.0827341461662443, 0.31247888624662495}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.1223507266805313, 0.8629120570977575}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           0.09855656536281132, 0.2759548016052554}}, 0.023802741961610058`]},
          InsetBox["2600", {0.5404346961982757, 0.45045628704925267}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
            2.14820487455907, 0.420375226069281}}, 0.023802741961610058`]}}, 
         InsetBox["1300", {2.098575588194389, 0.8310137438527347}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.6556674640785154, 1.1712593016692268}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.14820487455907, 0.420375226069281}, {
            1.1831554652987484`, 0.}}, 0.023802741961610058`]}}, 
         InsetBox["780", {1.6656801699289092, 0.2101876130346405}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.14820487455907, 0.420375226069281}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["1000", {1.7052967504431962, 0.760620783885773}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.1831554652987484`, 0.}, {1.2623886263273227`, 
            1.100866341702265}}, 0.023802741961610058`]}}, 
         InsetBox["900", {1.2227720458130356, 0.5504331708511325}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1831554652987484`, 0.}, {0.09855656536281132, 
           0.2759548016052554}}, 0.023802741961610058`]}, 
         InsetBox["1300", {0.6408560153307798, 0.1379774008026277}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.2623886263273227`, 1.100866341702265}, {0., 
            1.3009572153741233`}}, 0.023802741961610058`]}}, 
         InsetBox["800", {0.6311943131636614, 1.2009117785381942}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.09855656536281132, 0.2759548016052554}, {0., 
            1.3009572153741233`}}, 0.023802741961610058`]}}, 
         InsetBox["200", {0.04927828268140566, 0.7884560084896893}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0.98231282703374, 0.6249577724932499}, 
           0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Los Angeles\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"LosAngeles\"", ",", "\"California\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {1.00611556899535, 0.6487605144548599}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{2.0489463018297083, 1.2416522616361885}, 
           0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Seattle\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Seattle\"", ",", "\"Washington\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {2.0727490437913185, 1.2654550035977985}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{2.14820487455907, 0.420375226069281}, 
           0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Denver\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Denver\"", ",", "\"Colorado\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"Denver\\\", \\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {2.17200761652068, 0.44417796803089105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{1.1831554652987484, 0.}, 0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Dallas\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}], 
                  "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {1.2069582072603584, 0.023802741961610058}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{1.2623886263273227, 1.100866341702265}, 
           0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Chicago\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Chicago\"", ",", "\"Illinois\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {1.2861913682889328, 1.124669083663875}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0.09855656536281132, 0.2759548016052554}, 
           0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"Washington\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            "\"Entity[\\\"City\\\", {\\\"Washington\\\", \
\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {0.12235930732442138, 0.29975754356686546}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[{0., 1.3009572153741233}, 0.023802741961610058]}, InsetBox[
          TemplateBox[{"\"New York City\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"NewYork\"", ",", "\"NewYork\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
            
            "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\""},
           "EntityTraditionalFramed"], 
          Offset[{2, 2}, {0.023802741961610058, 1.3247599573357334}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.845439080304576*^9, 3.845439114067996*^9}, 
   3.845439206000505*^9, 3.8454396639627666`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"e6a11375-8943-4fec-b8e5-c7e836dc551a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GeoGraphPlot", "[", " ", 
   RowBox[{"hg", ",", "\[IndentingNewLine]", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<DehighlightGray\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"GeoRange", "->", 
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<Country\>\"", ",", " ", "\"\<UnitedStates\>\""}], 
      "]"}]}]}], "]"}], " "}]], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"86f1404d-62fd-4fd3-83f5-74ba2a70f094"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvdtyHEma5zc6XOhSr6C30K0udbsyPcCuaXZNNyOzWZnJdCMz2ZrtG8yF
Zne6p6uLNU2yqqZ5rCoCZDdxIAsEwANORRwSJDITKBIE2AWQVdU9tmap/Hnk
P/ILT/c4ZSYAsvLiAzIjIzwiPDzc/eff6X/4N//Hv/q3//Vf/dVf/fv/rvvn
X/3r/+t/+tu//df/9//y33e//K9/8+//93/3N3/9v/3Pf/N//vW/++u//R//
zX/T3fiX/+qv/uqb7of/tvv5Hx+2OhOZSEx+/SCR38w3Or+e3U6/83lxt915
ttfszO3sdJ6+aHU22u3utp3O1uu9zvt3+52bK0kZV5ZanS8et9My+X5zZanz
9Wqr88fvWp31ZrOzstd25R2+bXe2Xz/o3N/5stM4XOh+X+vsH690Tk+T8v7L
n/dTOT7Z76weHnQeHSTCZ/u7pHm03Lm7daVzdXGps9Rccvtuvjno/PTj4L5l
5C8/tTtvTzZzf49t55yx3xHueXrrurte+5/6uLMxnd5rnsy39jsHPxx0Hr/q
b7t55/POzMaKe1bf3L/pnpN/jP3+oLnamXs531lu3uk8enm7c/JuqzO/ez16
3dQH14qw3/2ta53727fd84vVycuDZrCs2a22axex41SH9rfDP21Xe4Y/J5K3
T1H7WFv+xpXhrseUFyqXbYdvy13b45dJO3n3PlbX/XOstO916/zqgHz59NvO
TONaesx6q525n4Oj/jXz2V6n9itTR7G6zbs33n/2ob846b7Xyws3Om8PNwbq
/acf97q/NztbB9tOOO7+ZtvVo67z90/anT88b3e+WWt3WkdJ+WXr2dbl9kHb
CeXRL3260HKf73XbIdcYOpbzNA/3O/tv2u5e7m4k/6ucW+cv0xbZl37VPkcd
a9ueytxvrrg2mlcu/S73QVur2x9eZOGeWkf99y9Wz3Xa+ajl/vzU2Mbxq0vb
6Xj+m/nd/jjuySd/eNaZnvoirQ/qT/0b30/Nu0CbKer3tJ0+BqFtUobdl8+0
64vwDKq2La5bn4vqwRfao95pfY/VH/vpfPQxtOk76y03Z9p91U73oz+6vNhK
t5UVPQM9bz7TH5Z5Pw6O+5+PTX/WPGwVnjP22/FJdhyyxyTvcrvTfpP02Xym
bX/ybSK07/OeNyfvWtNJnePy6ub1ccPd9/7hTmdp72s33jdeP8rUEXVvxwY7
T+H94/jG62Re4O/He6131PYDPBPqeu8wO5dQPxC6Vsbs33zb7lxaSO7r2pNW
eizl8QztuTnvz3q/3u25fQ+O+s/013Pdvuv+hpPzfr4T+XhEjPureytOxLhs
22j3GXdqfcf1uaenjbTfPn2fvE8wLu37d4tJmTAuQj/d7L4zYlzmspZxv31x
y3HTxqvlIOOevu+/g/779e59Iz0e+ezRepYH9xuuDHsMPJzHcqXGi5/a7l2l
P/B/gwVnDXvYY7hfXasVGBf58ulD933t1Voh57LOAMdbxr3dZdtb96474bN/
zPKrV5nvMC7XutK+6+qE+ozdM/f15ocNJ3Atkse4Ib6FafgvxlUbCs0tYs+8
ypgem1NwHbqW2LjMucUPYlF/rLD7w0nMTR5sleMg5jQ+4/pjPdfQOHwUZFwn
m1MD7MNnmCzGuLHz5dWj/91u07jKs+R+vlhO3vUY4zJ323vd6nz3qntfm7Od
y0trrr+4vjLjrvvktF8e+3Pt9Av0Mczv5rcSNi3bDizj0q/By5w/xrW+HPS4
mn4NLoa1mV+Wneeq7rkOPnOPof2oO7UHro375zqn1pO1Rb9NWcZ99za+/iPG
tWsbZYRjytbReYplXP8e7TOK9TVnLeMYvy/Nb3Z+Ot3t3FpcyzBubH84d39v
OXh9p6f9d9n/LZeDeozLnFprKvZ32u/bk+Hq7qzblWVc3X8VTqcenvTW5JL1
/eJj6FvEuJzfcuhcd2yhXi8vtSszru5JbFmlPxDj+mujsTVae77Yb0WMm9Rf
2zHtec+PY+Les7nqvH1reTOtf7+/4juMu9b6zsn05nXHufwX51J3tAvtr3UH
+3z5XfshPCvaFc9S46E/n9Gx/nUh9ln350hNx7hfrybr2o73Z3c615c20+N/
9o4R487v3ujs7K854bfple2Ucx2DTBh3ImMQxsWUcXvcC+P2+6y9lHG13guD
wiyWb9GnXnv83M2v4Fv1V/AufTM6Q5hI+lfxrc9Jp+/z+0uYzHJijHFVrnSQ
CLpjvzyui2sqP4a1s31/9zwwI/+1JnZw3Ex/E1+HGPfW2nTKt9w3x6OrzdPl
inHnttc63yw+cGsRfBfjos+1+tsM43br5v7O7ZRxOff6/v1Et9ath/CYlbCh
GBehLfh1EB/z9lL97GnB/NlfZ64jVfR9IfEZ167l+32+eADGtecVe/q8EJrv
2fGlDOOix9W5fMb98nHLsVmd+y6ax5VhXMtyzZ2Fzu7mfKpLdGvU3ffvq43b
XW7ccZz7+k/r7vphSObJlnG5l7qMa9sCfdfBUfU5nv+Mq4j09dJj+ef09Sua
b6g+dd/MT1zfebrvdN/b6/edFJ2f48ver21/PEP/fm05F0kn5+syzvt68qSx
Ne+YdJTjNuWhxy1iW4R9Ln19b4BxZUegPqSIX0Ii/ZGvT6fMD41xfcGeRsIa
fZljuF8xLutjvFOlztXdD10t7719PtQpnAtTYFNS5x3UM6pyDH0Rc5nQOlFe
O8l7F62uX591jzObzBWTMeyiM27d47Zb25k6srrSH/700uk/YVzpcWFc6VWO
T7J6WMqw3z971O4sNloZ/hXjcjzjq98GrB7Xt1vj+97hYJuBl2mLsC3/Ly80
UsaVnvln7xi2vfnTVudZ9z365rub3XnAqtt25dvtjE7c6XJrrB9MZCIxcVxL
u5pNbJ7g26tLid6WOZX0XoleINvek9/3U13HjWc7namN1VR3y7uFfaAYV32l
GBce3jpYrdxfo1v8/ocVx4g3VrK6z7VuH8J8Vt/RP1qu3Px+LvvudbkL3TLX
JBvq0Dl9BrZMJ37jvPQ5CIwLOz7ane2stledbXBIlyvGteeNMS7c6tseO9bt
MS4sC/N+futScD+fcTkv9srcf56OM/ZbkX22X0+xMc/fNizjDivWDtS3B4rp
iOx+2tdnhdhcPMS4bsx3zyjMuDH7OY5lLBtHvYTmVmJsy/PiXPSNO9uP0vtx
+swCxlUZ9BeaG8LsMC5lPNxJtqHrrMI19EV1eOgiMK7jkMONzvKjbzpvDlYG
ygnZBlS9Viv+/XIdXJfdbudBF4l7z1tidfGX9y86V2eWRj5+i3HX1h/l7sc+
l7/6prO9vTiWZ0Z5jPlqx3yG89SOz/u5VBHLtRL63eOT8BpwXp3cfJbMjcqM
afSBcHHIZ4G6pB5hCsqUvU7Za8H+daOdb2PsC+980Zp0lfdA27ANFG9RPnoS
2J7+Hs497zlxfK7cTGxqazKYZVyJWJTPMO63u390IsZFnnfnrFbnqjmmZVzq
VIzLNlhZ9sLJfLQ7jnbrl/00b/H1wb6dGsejs6XdyC7S2Rj3GBcd7t2NlmPc
ZJ2t6dYnkv2aA/MmdLjwLcJ9vX/XcL/DuWkdT/S4Eykh0seW3h9/3Fnr19Nw
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
Vfb3rXrvsbaifLCcK8ZqjcNHKeNWPe/s1roTayMWE3yCz6v95Y07di1CMXf1
fMTDfIfPpzwbXxgXQW+LKFfpw0YrzQ9znoyLKHYUsZF1veJWa7NMTOV7m7Op
bhpdMIw8Cq7NvjujY9y3b6vFR8trf43XSTu4vtxwPr5zq+uZfD2OXWFO6Uml
M1VO256NsW+zTM4ge3642eqzpcfN1BHM6nwce/GjdE6xtT6nOtutPnNPdLcT
OQeBb9O8V7Pbjm81LhE3ilhsfp4fMZv8K5gHHp+YeddPiV+vfIvIoQDfUhZ6
4usrsynfyi/T6l9DjPegFY5JnNHb9jhY27Db1RhSFB+YcZZ4w3n7wLhFsR3F
uDovdUXZvm4YrrfXLj/bPMaFb4+9WDKUGfLjxXY5xslWjyupOo8oY7sem9+k
c6qf4jk06kjRPCWWNyiW8yJ27aH4U6Ft9jjN70O6kiLWQPxYMOOQovIPAvkb
Y764XC/6WpUL1zKvRTfLu8/vyh9EHwHn8h3mgYFGybjI50+WStlE5gn93I/v
y89dyE1Km8vzV6ZuYD1xX9myQ+0wVLYfW9vaJUs3F9MXWcbVZ/lUKubzqSmb
ZyU9rX+tYlyeL/vRjhSHTO1B7Xycbfy8hLWOPz6872JCVdHLlhXKvTS/OcC4
mf2689L17fVoW/EZN9RXVe2v/dhn2ibGpR3FGHfJ5a8Pt/28WAo/vmumjHt1
abt7rnzWPS/G9ddWY7YT2s+3xdC7ovrzOdfX5z7rxe467zlnpt32bJnhXL7z
WYwrlhXjan9tH8f1jIJzYURiDVflXNsG9g+b6ToG5WH3JMa1ulirG005V9L9
jk/tP5pYUbrH1sGOE8u5SIaDe/mDBupI5zM5hSzHOpndyV7bRHc7kXMSF2NZ
sad6caim1rtjYbOZMm4o10/jcKHzoLnqGJf8q+hn03VHp+tNfHI5B4xLzgRs
Dr96/sgxLnpe9msetgcYNxQ7yec+vnMMekx0wOI8tqEXRWxs4Nh6qWyOYdci
xiU+U57eEp03+lhrxyzGdZ+74yyxn9xcIeB/m5cfSLbKa6+ycZCtbph7Jj8R
fHvr3vWo7ps8QtLhYsNdh3HLiJ2fqP6pZ98fkM+jijuTN1eBN/K4u4p+yp8H
xs5LTGHZRMf0ttLD5el+LePa+LZV7n9Y8RmXHDjS43J9VlcHV2FfzDvPXPt3
i0kfQH9QhnHZDudyP9g405cMy7m31qeG5tyy+UXwvy3re0udTvXyhnPPlvNs
u6R+3r0Px+6JtQUxrvWn1PuntZ1Q/CDNr5Rz1mdccS+sIh0T2/yYfLI7V+5P
y7g6Ht9N2kRVfsqzg7iosrY652yXRz2OfzIXznsiziVP7vSjxdx+Qs9P7U7P
eJj7zesb1b7yGFftxD9W6yv+uDG1nnDt54/X3H8x7rXunGNht3z+pLOQWB3b
MUXvJu+xXS+wjMvnWCwn6UPX92c7izsbaX970cXlvhlR3tuq5x0F49ZtE9ge
k78WxsXeWXpVGNfm/FH8p5Qprf7UxokyzKtrQwcM39p+gDy5mbjMYthYv2Lz
C/n2zMYnd8K2EzlvcfO/XmxlxZ6Cb9G3Tq0turkH3AZDMR7J/xO+FTNhd+yP
NYw/OgfzV/7Dt8qzq9y5YrQivl1782Zgm7hWeXAtC/K/jB2tdNKwV8hfV9tg
wKLy9o7z7aLEuKEYyjYvUJHEyrf5d7FXJp9QyC+XZ+f04l3Gxb+4TM6kYcX5
aUd04O/enx3jhvaNxQjNm5+FdLchEeMWsfCoZBzl+/UkgeOww+V3dK7qQ5K2
nvjRhhgXe2S28R9uC60X0D9QBr/r3PAfjAQXwUn0H/ye9mMfKONaBqWP/a7d
dPfF/XKv8C86ceqEOWrVZ2zXSCzj2jhT0vX6+YbEutS3dEnUO2sO6OFijMs2
zcs5ls/ENVH+OK2XKMdqVca1az62PnQd43zHhhF8dK/OLJ3J2I7NBHap+g7n
5vUXoXory7h23dJf44g9P/KF+bpIxUVCYFIx7tuT/rqI/LpD7aXxattx7qdd
PkKPy2d49yIzLm0/tB4s2wjeGf3u25ZTL2rza/szwT4Lvn3/ruH+n/d880OR
upyLnhle/Cni42Vlo93XHf1+cSfN9WP9ZZV/h9y9qd7WxDjOxHKS7XBPb8u1
uHvpbiMHkOyV7TUsbDx3bEv+Wq47vf+J7nUiH4Gk8z+TR8jqddFbinHRUaKf
FONaHoNxG4c7zh8Wvar6Yj8PJrGm0NtShhjX2t6q3LvbiZThPTEu1+czLjyd
Z6MMv/rxlpTvNhmf252tg4TJYVz2r5snnvtuvF7N1eMiZfySuZYQL8Kq1qY7
yrjdfe7v3HZrv7ONa4nPYc8Pebxj+l5av1bX/S4TizrRB4763D7fhvwL7Zp6
lXlyEeuWiR1lf7PXY32Gi67jLBjaSoxxlb+GObb8bZnPilnFutr/i+W2Wwtw
+bnN9XPvo2Tcy0trmXijRRKy/cOnN/cZvH/h9Nv435atx3ExrjjixPAn205O
B3XyMcYVX+jdoF9X3y29rMpVLCnxsM+4vn21YiVUtaEIvV+xd+miybgYl3cM
uwnWHbRN7x/zWsW9qnvdITta/xlorcPqF2XTbm1u2Vdtk99oT6uttQHG5XOS
z6ffXmPMjH0yPJvURSNl3KuPlzPvMf5VyfWeb44guz5j/dFVj/Z3Ma5do9Jv
vIeKWx1jXJV13vPND0nq5tmFK6u0g1tPGk6vCuMm45hnh5yXXxbONf6ysi+2
14K/YKqb7dkVb77Ycvpi/G/FuJnyjU/veT+HiUykrgzMAXtcq99gXdnmwnZw
FeMCPDngL0re1c3VlHFtDGb/XGLcuZ1Fp9f08/uwrQrfRm19u9dEuWLKkMTi
LDsb6u79kl8IxkUevJx2TJin88T+GoGNkzlgX++70Z232hzAtRm3d29iXJ6R
yoS/fcad2VgZsFl2NuZb1xznWsZNYu/cdeXYckclxH3qz4n2XP2G5rZVGbfM
nFaMm6e7xSa2aK4d+73MHLDsnCcUA6ZKXQzDC1Xk3dttx3NJO9xP7VGlc7H2
xXCsmApOs31CHuMOnLP73sCA0xs7ufmEQn3cl0+/HYlPbqw+lPu2KF+wRPmV
xLjo+2FGy4uqM8WmqmLvII5w+caO+szBZ7a3jrJ5yf22Khv6GOP67Y65tpjW
j1cVY9xxxA6/6Pl2qQvfR25Yod3oucluqj+W73be/xCO8VpVQv2mnq9ynFjG
tbpW/xmrnYtxsbPwbS1Wej6kRSLG/afF9c71Z5ud1pttx7k+4841bjid8Xkz
rhWtC/n1pP+8V1o/8N8fMS6/W1049q7obpEJ49aTqpwLK8rP1b4rvsCYq7s7
jjNhXD+3j3xoU71szy82E08qkl820e/2Offr1Wbn88Vmv6yuoLMV41qGTu2d
e/Gjzrv+JzKRUQnjoMv33LNZhm9hIOyVsX+F9xJ/jysZG+UQW8KUYsdne9n1
J8Ze5reUifi2RsRdYqzmf5lcOn6eIHsdsKIYVxxXNg8s+9r8uWlO2x7fivv9
4/BbVmwpMS6CHpy6sPNJxY/iv+yPy8SOFuM2jpupz/Hp+73Ur9Y9n145+OR+
s/ggWG6ix00YF5tlG3+K+6zCuGVjK1vGpY5jPsCtHH/TuuIzrl9+KF+D5vdl
8mVoTIvplPK4M8bD1nZXc0H7m9V/27KKGHdUcX1gXPS4+m7tHPIYFxtlGEt9
guyZ2Y6O96THUegx/XuB1+r6414UxmU+Sl3Q1/n6mlG2e+bNZRiX9YUyMaz8
tum3OzGufZ90TrbrXZL+Vp8t447i/uW3eJH1ucjVqel0PWYYUVxyPZvM7905
76d3F0fGuHpGoXUE2W9YW1sbFzj2PGQDj9+sz7hL5n1jXTdkv0S/s9raSvW3
cC4Mi31y7D0++iEce+s8RH7Jfh3rM++V4rbpN/990W/UDzmQYFs4V20C/877
m+c/1/yQpCrjwoo3l9acjoM6D8dLazrGRSxfMv/Gntj9Zy7uxUfOxEzOsaP2
9a/ocmFcPftMTCrpiW08ZNlAT2yVJ/KRibNRll9u9/+ns2uJvXKXRee211ys
ozsb032GMtzk+5Fa/mMOZc+DvfI/P227cmWDpDERthUvldJnBthP17LUnO3k
5YB9F8mFJ8bVWCpmVSwtO65m+669zP42vjJ8m4mf+FPb8Z4YV3pv6rjMfcL2
2GPzH77V/WCHZfdLGfdgMC41axizjdkkV8rL25k8UJKynFs1fxD3jr54HHGu
YqJ4U3ZuYOcRfv6VWKzZom2h73l6qiIdlq75Z3OdOi7GuPY4/3dyB+cxbhUd
cIhxFV9NtrHY3KJvffqirzchN5By4c5vZTmUtSH06fJh9s85DON+urAzNOPG
2iztC/9bbJWL6u2sGNeeT+2B9QPWDngusO3M81Ylxs17FzJtw2Nc5unMw+WL
qxxzefHW6op4mvu2+rGLJnDn7KO5zo25xc6nM2tD8S5xHWFdq8NNxvVdVzbn
KHtdPj/5a3eyDxDTarts1Pns5+Etc176jpB/AMwmvvUZl998xkWfy3g89XzZ
MXIoHlNZ/fBZyGkv5rz8jFX3Yl/ZKtu1X+kH/DUi6kdrC4l/Wfe5HE90uPXn
xeU5zzLudiu+poSPLexpdatiXOlhbW5bm+tWNsy519FjVn2/tNDqr2/YOFTW
r9fm1R2xjclEJnIRJI2tbHx04dwbK2vOjxS+hYPgojz+Ir6y+t8Y38J8zHUU
rwS2ZV98BzjO8q1vF/3s+2Y5W+WDJH6wGJfP6Cw1RxXjxlg3He9r5n91PjY9
xiVPrsr58cftlHEZm3Wt/FaWcRExLseJ3xnP7D744mKvTPwp6iGtp70lp8MV
y4pxpauXfP9DOZvLUvOmP79IfXHFuOOwh45JKN6U5gVW96Tfrf9T7Ljgff6c
FW3L29+eU9dgdSEhxkVHasvw55IxVoVxmUuSe/Jf/lzMY3kC4yrnsKvj/RlX
bt4x3Jd0tXyvyrhIVbZ1/Vvv843VR+mc186n8f9Dh3R9JezTJonVWSwvVej+
9bz4LDtlsR6ccHJaba2hSPw43K2eX6N8cGFt6lvz61GdW/o5yrWMy5x9lDnD
Qu+UZdyLqs+1jIufbmNrvnN7+vZI7Jht7kwYt2492jU16d/FuLIvkT+2jXNc
p85j8ZV9sT616H6JKZWsYSWMC+/+89NnSV5Yw7jKdSjGraPLHXVb0toW8QyY
D+FTTf9o1wrkv2DjxtnxRWsQem/9tdyzZlxiAJ/3fHZk8+Iasad450KMe21x
q/PFo51MvORMLtkebw57/hDjss4sUbkp507skyfyCxA/vrK2od+FcWd7/nI2
tlNI7PyIvtuuK8O48C3jI9spD2ENGvYV48p+N8S4eYIvsM+4sFz/+7UBPUwR
42osHRibCtgXxsV2Gf9i6swyrvax14oPsvS5Zey0xcX2WnzGRSzjsj4B3yKW
ZWFcxv753esp546Sb9PrHJKpRj23sJ99PrTbpI+oyx4x/a+/3cZTyZsrxjg7
xLg+Z9/fuu3mfsprTfsfZt4G29n8q7xfeToSn3FtrCrFZJbEcgL7/rxV5V6v
n4FXYf6zZFzVk+I5nXj6mLw2U1dijOufT/aSsXejrJ9rPE/boJ/xMO+Q/7uN
z8a56IN53r4d6EUUy7jEhrr0xye1496k8+eeL+7db6vFSfTtW2L1r7rmWdo1
wbqxrcsy7sOXN02b2jN2GgnjEj+DfghZcvZJfTZG78t5vv/hqftc9RpHHetA
+lr+0xfCuMyJ6Ptot8opbdeE7Pgk3a8fi8rv/x82Rjtf/OxR27GT3eb00Y0+
4/L+Mbc777nt8HPjapzJ/tgi63kR1wkhZ67/nlof2JFesxePyl93sDrkSWyp
ifxSJI2vbHS6MO7NlSWnzxXjujlTl6uwi8kw1e7swBiwuDu4Ji3GRdD7Ui6M
qxhNit1cVl8rvaafj8eKcvly3VV1t9YOGZ0pY2QR4ypHsIsl3NtX/qgqz79G
+J/tlnGpC3tfPvNLJ6x7wpfW6rqxUYZz73x7L/XBtYx7f/u2Y9uHL29l9Ljn
ybijjgdSxB8hu2X/d/7nMe5JBb1UjFHFBpRVVF6RfXPoPHa7GLeorLxzU09i
XDGTz7j0FTCprTfxDcejZ3N9j2FcdIoHPZ2ffRY676gZFx9i6qK/xhOOqzzT
uFa7jfnPvirjVn1GlM1aAjrxkO7HLzPGuGqXodhBMd/c84j5FLKfkA0osYYv
qi534D7ev0gZF979ZLb63Fdse/kPj9x/ykBXXCb+dJl6sj7VcIyed6w9VBHL
uay9Svdq30viRiXnS/S4eq/R58K3xFO+ubLi+iLKgIk5Tn4UddhWMo54fvbd
Ym4kxtWajc+4dt3SxqHy1zNtvCnlkRlW4Fr4Vowbuw/Exh95fdxI81iN6lrO
SuquNaGvJR8PfDvwjhbEjhp+Lr8TtTm2NskT3e1Efmni63N5Dz97tO70uHc3
Wkk8qKPE78Pl7PnTtounjCTxDvp9HHyLTeWNZzvOF47yKQP9JutKlE9/To4f
9iU2E/21H0tKDJvHveuvG4X7iJ3K6G5jY5sY140lBZwrxrXbklxJe+lnn3H9
MovuiTUH5UeCdX3GdTbL22uGcbP2yIgYl8/8h29juWzPQs6Dcf1t1j/X/o/x
aYhJ8+aQZfRS/rb9N8Ppo2LsW9aW2t9GHS0/+ibXLhtOZS1L5+Y7/UCf7fY6
ny2u9/Qw5RgXkY6ujnD+MvW1/6ZvI1g0ty3LuMqBZHVf3KPvD27v+aSiXkw6
TOUeFueqvCKbBL99+Ixr7Q1iuvazFvuMfMY972urI4cHq7UY99cz246P5589
dozLNul017fXg2sBRSIdueImi3GtTt5fF9TvVe4Z22F8HeBSK2JUq5NNztFn
XPS3YtzD4x03fsHCOl5j9jCiejiLtsz8CBswce7padj2Qv9DYxX/l/a+7hyd
fOc+j4ItKYO4SUiV9561Cp7b9PrSB8e4yby4us2wctumIl/bErGjRnLNc/18
Qe67iSel+FYTxp3IL01Sxu2+G8qVC+NeX5lNbY01P6PvYq1UjAtvwa+2b2Ou
BeeKcfmPT4AYl8+wGZwrxhW3hWxv8xg3xMYhxq0qdddu4dXG4ULyuafD5L7E
sTZ/EPWnuhOzFvGttc9OxsbNVFesY+Fb9Lg3pz/t3Lz7952vHn0ywLiMP9hx
y6/3vBl31BLjDz+Gsv0eYw47f/C3+fO8ULwbe2yerjbG3XXrgPKsv6W1Qcy7
z2H5hePLMC42wux3YvQS/hzZv3/2tbGbU5/bZzuFnFvmvk4C88qqbazo+f4c
ea7y1xXri+HK9EVlGNdeQyjelPRIoXi4eYyb52fLfnWYuOieQ/mPZP95Efh7
GFlbnet8YnKBFI7fM31fmJsz884X9xOXeyRhXbbJ98K2AfuMQmKfgfqPPLvz
MowL0/oC41rbCdZkfcZlm/K5039w31eXtp0wbolxnQ3Vz9lYeMMK5Slm2rie
udbV5PMsxo3l1Mtr5zAudba+PzvUvNDV9bu9Xp0njFv2fk5Pmm6OcX250e3n
n3W+eFy+PV8UGYZH09hOaTyp3VKxo4a+ZjGu9fft2TDDuOddpxOZyHmJ2Fa2
yghsCt/KLxe7ZPgWplLcYQRO478YSYxry4drpzZWu2NSwr1iXHS8W6/3Ogsv
7qSM61htvzHga+vLgH1z95jFVj+GU93YUX7+3ujYl1M+fOtyC5t8uaH8uMo5
yb0gRcwuQZ+uOM7iVJ+PXfypLud+ef3vMvrb717NOVtNa0dMOeLsUYq12z5L
yeOP0Ny/8FmXtCP1Gddfg69jIzyqOXsZxi1zj8SdKjoOdhWHUCf0K4kP2V5n
+vmSy+lDP1BW52bjQn8MjBuKc23jIPu2xmWuJ8SmeXmt/Dg1/j4x/ZV/7aG5
/8FRn4e+Xk1sh1tH2Twzdd8D/vuMKyb4GBgXuXp/LrU/KBLsnP3j9/eWHev6
jOszbF77stssv8oXtOge4MwQ0yJlY5qLcZl36DrhWe4bvkXv6V9z3XXtvHZD
Ox6XfYDq1TKurkdxlRXHzT/Wf/fY91n7nqszfEHrMJUtD8ad372R2o1XyYvA
fOLBdttxLvO/D1GXWzmXUC8ecoZvc2yIxyXuOhSfeRIzeSIT6TNuzy9XjIsu
987GrOMUGNf6gco/B8bVui6c63QRx4nPLWUz37281I9DMLW+48ampy92Xbnw
rc1DC/eKcYviXfkixsWeuqp9ssbtMuu1IW7TOrPt46kHfYdFE/+/22keJhiX
uFvKrxbyS86LwYUfr82RpPufezmfYVzyCT14Oe3yKxHfGL5184aej3VIh+ti
E42BT4vm0OOWornMKM/j641j547Vxajn7EVz2aI6IqZyGcZ1cXTf7ablUK+w
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
EfgZWyTsbh3f7s46noXBptYWnc5RHGhtlGFcqy+tPHYFdL/oqWP7w+zMBcS4
oTJs3OLQueBbfz4WYtyifEoaBy3fyq6L3yzjwubod5fd3ONKyrhJLrsrjn9j
9RET68dcpl7HLTH2yMsNNEqxjFvkQziMPbNlXHxTYTj/HcizF61yLgmM+3zl
Xu26oS9RDjH1Gw+6c8YrS8X86dehYjNJT0s/EmLcL5bbHyzjXkSJxb2Be+w2
+AcG8X2K89rkMO30Y6xr5FXrScq4fCeP7tWpace+/Od3tq9G2qNlXMabPNYN
rRHYdRbWN3i3WFsS4xatKRyfbHXHlXtB/S12yfgZiHH5bjlXjGvtZE/fN90c
gWtN7MrWz/TZlzkXfXKrF4uZ/iI0Nymyp1fMCr0/3PPa/oz7r2fImsPlxWp8
y/6Pe/Zj8CjcKp5VPVM2nKp4U1XqRozLf1tXsGUew1T1fx1WLhXUWe61zm5l
fk9z9UwYt5JM2PbjlwvPuIq13NPrcr3YB4pxc/u7AOdyHOOS5p/ZumhlGPdR
Y6n7fzH1M00Ydyq1T7aMiw50tsBuquha/W1WN0v+WH3Gvlh+yKHjlDeo6JyW
cdFdJ7x5O+tb/D7hZJe7KcC3+O+qPJgY/1rmATq/i33dnY/Dtt/cv+lY1+mE
DeNav1z73KzNeFF9heY5slM/q7kHUoY7him/SBcc4uiy83bNacrooWTnzjtT
tN8o7lsyDOPC5FPrrTQuMu8818Vcr4z/WiyGl2Vc5t7Ks8FnX5fLtmHuX3or
nlFRWxMbcD20m3HYEZyVWL2Rv92u41i7STGu2nOIi6vqdvPWjPxjh8ktfZFF
jMt/+FXbN55NFx4rxrXsZOtJjEsblx6SbTCbOFf6elumPYf/bGBc/fc5F4b9
52cP3GdY1zKuuDfEuDqnGJfYzWf5LhTtI8alrhm75Udb93xiXNlM6F2j3Kpz
OxiXuFLoWbFDFuPKRhk+te9nlev2c+jCuTv7ay7+FXO/kA7V6Ut7+WPPYm7L
NRD3Jca4Yq7Y9bDdMq5y0p73nP1DkgnbTuQiiPS30ufCvfBtkT+KJJZ7BjZm
bh5jXNY8GWOxSxbjOg7bne3c37qWMq5bHz1ObJPFuDHfNRdLvzmYR9D14zl8
63LcerZQLoddhG3RM5fNz5fEqk7KIVaVz7gbrxJWjfGtz7jsy/hnGVfCvmLc
6a3rqd4WtlX8KTFuVcnjsrNm3DLzvDpSZpz354plj6tyjqr7ys5C89lhnwdr
LpbtXv9ppfNTxF7BlyqMa3mw6F7vb/btlR/3dIm8o3Pbqy6Wmu+fS+ypUHvl
XuQvH9Mx7vfiBTN3XX6Uz7i0h5PTfm7LD13PqHm1ZdYQ38iOQZwbYlyfrSq3
w5+zbdqy9nnX01kI72EdxvWflY31Jn9mrePYXN/wWvtN3yfC6uxDzzZ0vjzG
hW8l11Zm3X/pcvnuMy52u9gqbR086o5bc0MxLm3m4cubzq56FM+GumEuI7ti
xm/Vadm5U+ga9V+25MrNWEX6zyhhXGubLJvk4naTn6+J38k5RFxm+BnGHZhb
9phWwjb7eVzym28TW2n+5899C/TN5AXqMRqxa1z8mkks5UKxbDvh24mct1g7
ZUS63WuPnzt/3H6ftpeJfa+YCwP5yXtMp1io9hzoh9da22l58K1y33EcYxt8
q/hSKlO+t83D/PijYlziH1cZW/w4yYrhH9u/LOO6uNSHO+k5xPHYBfmMy/mK
Yk6FnoPE5cslV+6dz53cune9Mz3z2+RcPcaV/3OZMa6u+H6r45AycYCKOM/3
f/R9r2Lz6GHn7GXOcVIQ68cvw/pC1mWADEcYxl32fO2KymGOh90wa1is6cOj
up6ydRfTJTIfx9dhbX8pvW+eI/ufJ+Pqmek5fMi6XEmMcalvxSfifhGxrJ6b
GMoybh0bZKvLFXdrm7XF1bWcd52dhQy7vmdjdknPG9rPsq999rF61prHybtG
2ldYfS3/LeP6frliXMYqCbbP4lx+I9dO3fvm+tL8rzVZmXunXiiL9QDpunkf
+O3gqD+usK3xajvVb1c9p/o3/FPQyZaZyyk3ELZjcKf8bRVPSp+tv22MZfMY
Fx2w8uqiwyXOVGZOOdfX2cbseuvmpS1bD/BtjHGlv42d37GZx+fw7XnP1T8E
mbDtRC6qWMblO/9hXPmKwpchtspj3N8t9nW5YtwbK2uO92A1+bIS70g5zbHn
5beQ/yfxjfMYF70szFw1HpUYlzjKC42Vzr3NnWjeefgWVs0rT9duGdfqhC3j
KjcQMa1jjIueW8fGrovntOfyFe907q8uu+PEuLJXhnO5/nExbohvx6FzGQXj
+qL5uq45prO2OXCGlTzGrVveMHquH9/vuvYixqUcn3GtMP8MlUNsKdgWzlTc
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
M9em3RHD5l8i8aG5r5A9tq2LMtcyDl9ZMa78YZP1rP7nOuXltQX//RG7Wr2t
8tOEGDcUi1nlsm+Iq6q8CxPGHd5WWblp1Jfm7atnLx/sKrp2PyY229Q27Da1
iYOjpmNbMS4cF8o7W+ueu32Z1uskIZtkie+363xpezpp/16tXYI4Xoxr9xPj
Wj9lMS778J7TZxXN0+SPkdhN7zkuVxk/vUt8vFwMTsO46Hbx0R2VHhfGFdeK
TxH185ceNCrNPW0Zw8xhbz1tOJ/cUDl5PsBsv7t5r7f2kDDuH1cX+4z7C86N
O2HbiXws4uIq9/KA+ayLxBg37ce7c0gxLnntiDPFcSnjmhxjMK491nKuBL51
46zHt62jbcdqxHRabK2lLImU0VXCiTCqfH6LGNcXMbW13y5iXGyVXY73V2ud
9deNdLxnDhGLNxXyObaMi4648Xo1sw91k47rx1uOcZU3iPy6ZfMexSQv7pc/
xxm1hGIAlfX3G/barG5qWMYN6eXGKVWYP2Sf6+slrW40T6QzFKOp/Tzu5d5Q
/h/mbNgw83sov23etXNdlMWcxK2lnPaZi238pmfHO0D7x/eY+W5eTK06jMv5
6UdG6ZPrdEdvhmdcMWbZtmI5Rb7Udptvu6pt+m85l3vwdbtV6sbPu1tWT37R
ebWujDJ/mniMtkHb9WNL8dx4f6W/L9vWVKY++3kZ+M3aapz23lsEOwzmD6Nk
3GTMvjrAuKH3lO3EivL9e8Snbg35dDfNZ2vzt8XaNmts8om1wnnkn/tpiXhJ
iJ2riHHvbc45HaQYV2wrgXHL8G2SJ9n6aGV/lw+uWNzqcMWp/P6PNXSeNiZz
nfnrl0u7jnGj5Uf8f9mO/hnG9WN1fb641s+TC+f+gjhvwrYT+ZhEfKvYpHxH
5/Lp7FrKuOhh6Ydh2ODY1mVc5jbOF67ZTBnXis6HXSFxpGJ6RRj3P/2n/8cJ
ul7+w33wIX46jC9woxhXetWYHVKRhGyAY+LH4MJG2b8Py91r7cV0nBXjJnmD
kjEDvW6Mc/OuI8S4sreGb7FV1jUwLluuryNl+DY03xlVTqGycW7tuTUfrqNn
s3M6O0eXzym/V7X/Zg75+KWdo1yMuTjcx1wrto6guoMNixgXzrRzU3t/Koc+
Agb9rt10fYHsA0LPaBSMy28XiXF9XRfXKHtn29YQ5SexdtBldWr+Myy6Ln9O
K92Uz7hibPEKDGRzDvV1c2HGtTbRZeq2zLZfioyScRP/i3aGce3vyokjzs2L
VeWXa23abR9i2wyiHMuyCWAbdmDYZtg2EnvmIa709/UZF96MrZWIcfHbteVa
HSzjqRjXsm3ITgEGhXGXAv0NuYDZXzl38+Zo/E6MA8u4jD/4EMO4th7EuLJd
Jt/P85IxpTkXcaTurLc7i42WeybEcdpo9+NMyf/W2hhzzOO95Pe6XGT9YEct
ebz25cIfOwu7U65diHP5nmFcNz/++HlvkuN2Ih+jpPGPe3EOYFtslPmfxqPq
CnxLHKq/ROz+sMeFbykD3S3H0zc7u2cTBx+/iRjfsh1/XhgPjhXnWmE7+tG7
W1Od+b2lxN63y7fM06twB3bW0guX2d/lKOqWbxk3L5+u1bsyzqa+ud1xiXFd
jLv5Jsy4HBOKdxUTMe6bg5XOnZv/0B1vfp/GnJKfcV3OpY6K5jgaZ8U458m4
vgzDuMr7wH1pvr51sNa5vjLj/DxL1+HPWT3uh8C4VYXnbWOhDMu4Rc+UchQP
Rrpj9MFar9P7yXvE+6R3SrmDRsG4EpsTlnUQn1f9OinDuFx/Xh9Tpa6qtLd3
vZh49pplbxxjXFt+ns7VZ9yia/L7naJ2ksdD9jv3cZHj7IVklIzrtzNbz3q+
4lvaQ1XGpf2Ica3Nu2VcfVfbF+Pad0RrPLHnGWo//v6WMRV3yrZP1q5dH9iz
abaMSwyphy+zulFiQVvGtW3evxbK1vnl/898RYxbdp5Wpt7td+xuyfEjzo0d
R57bJy+bbn7HeeBVaz9sYxWLQ/FhRf8pH1x+++JxuzO7vu1+q8tHNmbVqBkr
xM+cQ4xrn8/+4U7WFhufXMO5v+7lFxrHdZ4LA0zYdiIfsSi+FJ/R4Ypx3Tzg
T9sZztW+to9Mck4uOMaFsxRPWYzLPFRzNc6h2ADkH6J8W5a1TYZlEX33Wdfx
bo9x4V3FIbblwZlcn43/bKUO42bGkTfxsccyLp8VQ1mMyzwYv2LumbjI1h83
Fgs5xqi+rnJ3cy5lXHS+RXmPJHnzGP83P4YN54/p8IaRUfBt2XlvbB/fnt1n
3LLlnLWtchnhHmC+udlyvrZ54jNuqK7vfZfwJ3UB4+bZ3sZ8PGNCDCrl5Ebo
Z2LvTCw3kpOZyxkb4by1mpPT/vWLc/n+c2BfywqaE3MO2Qf47awu46qupR/T
ucvanLKvuER6NulwrU2zzV0bY1z+x+z7y9guW94Zpm3acvhcFCP3PKTI/6Iu
4xb539LufL1pKEdU2fNpLURrNvrs358YV3nbfG6Uj2uo3YbWbPyYaZJQbGV7
LXAoYnW16F91XurH+tKqHJs/uui5sqbOXMTGVUaK5mfMp+qsxWCfLMYN5cO9
s7zW2W5tp4xr7YUzulpj46t9YFtYFl1v4/W++w/jjkoPO4o4VOk1G5tq/7cr
M1kdP/X15k9bbn1AnJvMkXf6c2Dslv3vHygbTth2Ih+7+Hz72aP1bt+9lPaD
6ESYK6a63t7+9LustzIvE+PCUccnSZxf9iV+Mp/R22iuxvyXeDScT4wrm1sX
a/iHsE7TFzGub9OsOMQIfjOKRwXjMq7YeMoa26rqSxHFS+Qeyow/6Kq4bmyX
qRPLgmJcZO843266rJ7aMe7679P9Y3bcPt9XYVx/vsFcf+Z5uZhBVWQU+kXL
If7co+jYEOMixOdVLKOy9tCUUyZ216ikrP8iwvz5L+/DNhpVBMbknY/F8YUX
v1iGbxPGJdZUjCE/dMZlDsyxvO/KFyw/SNk5WF3WyWmWR/KeXVEs8P/y536Z
yu3DNt9n1j9OUsS4Ygxdu/XHDTEun62u+yxsGCxzc+26jiLGPS/2Vb2ojYR+
r8O5IcaVXl7f/T7OcqVslnPjM/auG/tnm0/Znt+KytW+7CNbGT8es+3H/LUK
fc+zD5DNMHbI2CPb6wjZEbOP2orqxt9HjOvXY147dNfZnWuIcbnfojla3bYE
18LT2C7DbD7nzq2udzZf9HWx4tdL8708scYe2fIux+H7yzxGjLu6u9O5Mr8+
UlvjvDhRhcd67BbjOL7DuduvHzi/ZTHu6UnT3Zu9H3c94ll97uXP/dA4d8K2
E/mliLPp68WD0tzw1lp/DIX96CfhwIw+tyvwLbGo4FQ+Uwb9HqyMffIndxcd
C+NHwhofcVT5z35TG6uJbbGZ72d0mT09bh7n3t3eT3WjYlyr45U/qhXOA/fl
xSjOE46Fb6UXZYziHmKMLIZkH/xwk1wc7Yw+T3Giy56f/9+avEL+sdgqz05d
yuRcgHFDuXV9xo3N7VI9TYHOexRzQ38uNgrGHebaDo6K9V9Vyh6V/XaV+ixz
faNgXM6jvgSGDXFuFcatIjwjyruxmvihfba43vn8yVLny6ffRjl3xcUcvT6Q
QwhbZXGb5rExXY24jXdbeXllg1yHccWCPpdI38VvlJenO1JsKvatwrih52m5
NMQq1h7VtjnFEtI5bX2dNeOOa/9RitrPzWetIOOqLn3GzatL2359O3ifyzIc
Fnhvy9ihhGKE6d7UJux2talWz05ZjJu0W+LdTjm7YNn1Wu4MXXfe84MtFefJ
bs9jXMZNPq+2tgb2UZ4AxV3OuxZ95lx+3Oa8+Rnzp7z6Vuys8LNIGNePNzX7
eKkztfg4w7ji1SvfbjvGZb+FjecZxhUPwbIca++NZ8j2UfNSmn9XNsIF5eex
bZBv59cd/8O41BOSrn3sfZ3abdtz+2Upr5Dj3Asem2rCthP5JYn4Vr5rlnGt
Da8Y99le4j+XxqjyeJcy0dPqdzEuuYdknyzGDfnkWlvdkK1yHv/OvZxPOdbX
8SI2/hLsR8yZUC6bIj0pv6sscW0R46Kf1jH4xYpx6/qCcd1idDGurUt0uD7j
ury53X68zvnsvYybcd95+QKRUTKu1v6Xm7Pd+c60m/+HOEw+YzCIzWczijnw
eTBumf2YOzNXKcqjWlTH6ltCjGtjAzOXZT/6CN/3k/ds+9W8a+vkNVru2Rfm
3RdlzG4vOhty+BbhM8yr2M1FZaS5gHt6XO3j20XyDHVvmnfLVt/yI1xLfiPu
EZ8NxRxTbC6ru7V5dsswrs+K4k364vubbWdTQZ3oPDa/Uohx7btrfw+1H//4
EOP67OXfT513aVwMautw2HMNs5b29WrbxSAKlePsXd81azFu6H40/oTO49v8
YoOl+GFF9RLy/daz17XYtRL7m1hcjKv3kfGLuE9612A7eBH/2VNv7C2y11nb
X0zjGes3n3PFrJQF55Lrluux+7Gd/dARP97bcJ9djj6vDcnXl+vneIT7oczL
i/l63FD9Uhb9Iv9drqUcuyDy4opxd7aXOsurSynj+vsqpjLH2Hy60s/CRIsb
a8Hnf3DUGhvjppzb42w/p24Vrg2VD9tTR+LcpH02HOOSi+g3s/28v7LR1veM
/3CXb/0cIhdFJmw7kV+i+IwLm371/JHLTev3p7z/6A0dv/bsldOYy9ZXt/vf
MrDOJcbFZ5fYBk9fhONOpYzblQet7agO1zLubGO2O2bcDuptEcu60vWKcdFB
O66SvrUE4yYxWfuMy9iw1GUm37c4c1/d8RC+ld8yMZb5HJxvlfAPFuOKb7F3
1m9iXH2XH9AoGHeY48sIderr3EbFuJl76Y7T2MiLcaWnU3zRPP/BYc+tXBPj
rsuq16y588FRUv9145PBf7CcYkH5Ql2zxsN+sBh1vrC71Gm/2Un3wT94pnHN
2YOja73IjJvUVSJWX6o2BGOyXXGXZZfJfqyfKP6OtW9WvB7r0ysuVjlFjKtz
Wd1Y2WdYxLghubfRGrgen3N8v13V3Vm8Bzr/qN+bUYrPkP5ny7h16s3ZOrfj
tjvSp1p7A7ZzzOWe73yZc+id0fO2v1u79wOz7mLtAZDWm+30fUT/qv/f//A0
ZVyrT/VtmGPPkvy7jIm2nfIdRlWOH+mMYWiuQYzLdsZyrkOMm/YZXRHjwr3s
w3GWcWUvIsYNzcs+XWg4Xb61HeJYrgWhLBsjmutC7Jp26JkcHW52To633f+8
tq2yicvMd9iVnLf8jzEuQrwpeHA8c9Vm5rNlzDpsq3LgZjGu5XrJ16tNx7nM
8aZXtlPGRf99c2mtz7gmX5KzXa6RP2lc9TZh27z6aaWxdifycYrjUsO4V5dX
M30l4wd2uWJcOA0d79bB6mAe3d4aVmwdS/pc+LZoLkKfkmenXIVxfd6Fcf18
vNJROj/e7tw+xnNJXIormZhQRezHMYyHzNMfdsckrpc5vhjXZ4mqLOnsIg3j
ylbZPsO6ttnnLcPwbd44XjR/DfFAVR1PzEZY86dR3cuoxNcP0S7d3Ox14leA
iDcVo4W2xX7Kw1ymnYlxyTMxDOOGZHZnxvU15Bi7urTr+rUkF+deem3Sl4b0
LbzXHAvjyhdXuqOfvXuQr7DWSeDesoyrubxl3BPDfyE9qL1WMQFlSceGzTd8
i71r6yirW67KuMO8c/41i/2VD8YyiOowFvN53HrbiyI8H/k9c22tSExu+55W
ZVzKZx3CZ1zZR9N2aCutXl5c9uNaaFv411vGjdWfYm1bP9VYLDLKUq5crsGW
3Tbv0vZBEu8YZlTcYz/+k2yQfZ/d0PP2P4txEfGo+mixNTl6dB+M5TAs56av
0DWwXWWLcdnOZ7em2mNc+iL1rdRraK4E5/bfn2R+oPulP1ScZ8758OXN1D4t
9EyajUed7Y3ZznfddiPGjbUR5RtCMm2u3U7zNsQExj1LjvLjSFU9N/t/vphI
8n7061y8i5/x8stdNx+9v9lycah29tec8EyJ1SV75kx8qnNm3Anblq2nrJz3
9UxkxM/X5AwS46qv5/2WzhLGhW0fvrzl1g3FuMwZn77YdfmCUsbtxa/yxcWV
7zGuxli/T2Z84TxiXPIDhfh2+dWrrF9uCbZF4HQXG/m0mfKsGNf68Ypx8U1M
pcedXCPjmo3hVIVJKVuMS/1xbNXcvtwzTJvwuFf+6W7nD7f/cSQ6V8puvznf
uV9Zxi07Zx2Vzqjs+UJ2v5o/lfHxPTmtdr5hhLmzmJXvVl9QJFUYVwLjwoWw
7eUlYrmvDOhbYVbKZ15XVB51iq/EnfUZV5b6Nc2dxenk+EX4fNRlaLGfcuey
XkaMadlRto72B3T7zp76tK/7h1X5L1aVLkr7W39ePX/xs9i2DOOq/YoPpHeT
HbLdV+yYZ5cwarF20PacYp92z/9Y91LEuB+C1NWn2u8hO+/YcYxHzne+Rn3p
OfjvjV3z4b9iTNnz8n1uq51en/wL7HWofLUDXx980ONnrfOIcbVmJN2vGNfn
ZMu48J5lXOl1D493CteHYuuPmpPoOji/9LHNQy9mU3c7bGn1uElOoIbrrxDl
1ZVdNd/FuNSDP09iHWFpdzu9jiWznmiZXmWKcafmPnXC+O+u/91eqrcV4/K5
TBuB71yMqnf9tffEPjy/PROn+UPjKfS4Ylwrb47W3ZoPjIueFx8C2iOci5+z
/HZh3EsLjb79MvbUsmucG0+u39z7mbBtzXqbsO7HKpZznR53ccnxK+/5svpQ
lxv7uuPb6a3rTujbXd7VLt8SXxlfMyS2LgnjutiEG0ls5XubO4m9kGExsTQs
ym8wduNwpzDG8v2ta4V8iw7a2iGLcZnT8xvn8/MSpTreHuOKe4mzVTc2D2Mb
sZ/oMzUXLMu47K97FuMOlD9Cxq0jo55LFzFu1Xle2f2rxPJVuX5MF8uo9dpK
cjwMKL/NcbJKcydrOy/dZlnOtbFY4MWBZ9mb4/GZOS4xkDWPPTreCT4f2fiF
fOdDbe+sGVc8IPtjtQPN44vanrVd/vnPWf9Je5zlD9VfHuOKHavmfKkr/vX5
n2UjbPPE+HGIRnUtVZgzxjpl46RXPZ9/jJ5PXhylgbZgGLdqvfn5gcSglktD
7SZ0HsVZbgXWcuBWMazskfWZ43TPrHc/edlnXGufIMa09s68n87Oosd7X20M
5rkW4+Y9n9DztXGZ7ZoLcwPLuGxXjGbNg3Tuhd07jnEth9J38Z9+zM5BfMal
r4Jx9Tu22mJc5kR8lm7Y3X+XaefnP0/49vFl9592sdXt/+BbGBW2hXHhW0lR
GwnZ7JaRvcN2pZw/o4zBXEc4P3xq9bfUmR1rmoetlHHVZmFcrcMgd9bbSRxq
+QfP7Z45307YdlT1OGHdj1F8Xa4YF52M09/2GHe2ca1np3s77dvZjtAPK0cQ
fTdzTYTy0d0qFyZrY/BtZtzu8pjsoa3OFb7FnhfBP9fX31Zl3OCcoXtuMa7u
WTaYvj2z/HnFuKmut8eTZebhGkvnttfS81PHZY6zjKtYyr6dM3x75+Y/dLbX
y5VZd452VpLHuGX5saqNseq6StkhxpVsfr/kpK5/q3/P43he2LfHGNfKgxc3
S7OueFZl2bofB+NS/6Fxij4ndgy20MRuZe7s7Cp697y8cMO1AfTMWmsI5Yce
lnGL2pZYumxblw75rBk37/rtNp9x69ZNnoyCccdRF1WuM7RmkP42hB7XP79f
hl17yDuO95Y2Tjy1lqeDFj/6+mG4F5G/r5ja+pbb+FPK0cz7q3dJelzpcEOM
y/vbtxUI97niZtsGtYbl655Dz0SMy7q/GJd+Cv9cf11QMTv5HRFHz26tD8zF
FG8MgYfhefS0zE+YE+lcd5Z+mzLu6fFW5/D75+6/ixv4Q6K7fbxwK2Xccbdv
6hLGLZvvh33w8R0H51bhPM7vMy46bH2HbWFYvy/TegjvwZdLuynjpvmEzohx
J2w7rnqdsO7HIqH8uMpX+5c/v0gZN+lbxbdZ31cxLnNEbIERMS72yWJdMS76
3szY8VPfdvm7V3Mp4zK/pWzZJ5dh3IcuZkQ4Z9DAXOGntrtWcuZyn9yjYlFp
7ZR7Qu+KntXGrJL4Ol7+//gun2XEuKfvi5mniLX8MfxV80nn29nPO9dv/N3A
ftwLkhebYtxSVa8J44byRZwEbO5iUmcuqHmc5RQ+Mz+z2+y8p9j2+OIyLu3G
Z9yQwITOb3X72oDtXBXGRahfjR/MlVkjszGnB595M9cWmmP9sQm5912+/z/X
+c3GHRdn++HLXtzU7vzRzrVPIrpGO6e3Nri6X+l/fTtl3Wfe+1CHcXWcdM9i
CcsTZ8V08gW2TGPfGX//cV/TRRZbNyG9fWbfHuOO4rx1/KDVN+qZ2thS9rvV
zXJc4hff9z22duo2P5X+i3GtHbM7t1sLH/TJDeWvhTnpdxuvVwbaPdcIp+Oj
fG9zzuUoEperL897V+BcfmeeIn9g+pKp58tuvkA/Kb0rnxl3VTccH5qP2fOJ
cVUnlC/GvT3/605jaz5lW3tdYtyzbL/Y8uGXipThu2uLW53t1uj9dy3vkfcW
iZ1DcZJhXNW7GHdlr+XskBPbxMTmrv0ma7vv4ngetDNxnh3j4487Zt6csO3Z
yIR1P3yx+XFhXHIH3VxZSt7jLuOKbcW3sXw9Np8Ogq5z91XCtGJc2TOTJ3dg
TIUNe4xLzGF8fulDxLh5gn+rZVyXn6d7rL0utiunrS/sz5gkxoVpxdn8LsaV
TTF6Zd+e2caugnEt+4bOyVw9dj2Z8aqizaz4ljGV67TnHwfjVp0v17Hd1Tw/
7/e86xjVnD7EuKOWUXBwHYnpcf25rhhX88o8xk3ireS3cfqHsnpX5o+8n1xD
Mt/dKyxrFIzrc4fasWzHFdPJbxdse7CV9TW0tqni5pjNqWJcVeW/AxNvSnyu
azir9uQzrvwrZZvcb+/ZNYEq56ibey12vWdVN3nn921OYnr4UTGuX+9iy7x9
JZZx1dbEAtYvVzbRaoOKHR165tYWX58tKzN2wZZV/SfEuHoHKFM2ZzAu8xP8
Mvmc5qo27CORzQZxMxVDDva8uZLIN+vLKePeXF3qPNpddiLGdWUc77iYUnYe
pnhe9nyn77cyOY6c72/P7xaBbYfNZz7K9uvupSTfiXFfH45Wl0teJPIjrW2t
uM9518Jv5FB6+3bXtdnkWSb6HTEufHt80p+H2f5qcWfD2TqnjIv+Fj3uGONN
Tdj2/GTCuh+miHFdvp+erTKMKxtky4n0sUWMK5G+hfU96XP33yR8O5B7vsth
G6+WM2XDqMhia60zv7c0wLXEo2I7+YUs46Y5aD3GZcwpYlyuWTpd5tJiXMan
b3v6YTEu/7Fx5jNjlx+7SjpfMSblWn1vGb6t41NL3qCbd/8+ZXKbb74fT6M+
R/lzk3HOm2WnXMS4Z6WbGvf9DvtsJH48qzL2mG8PN0oxrhXy1+o9X2uvOj9Y
35bZ6nJtufb7uBmX2M1l6w7Ghdtv/eEfXFxnfHTHwbh6JmKK0Ptkn6HNsVJ0
D3mMa89bpj6GseVVO4QFfMa192x1zHnMX9SOPlRJdUgBn9xYvqNR6nL9c9p8
z/5v1l5F18ez5d3T/qHcybYstQP/Wds2YXlP/8W4842p0myreYRf19wDXGnn
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
3HGCn60fQ9nlLeoxLt91PXmMq3hSvoSuwxefdZkL+YzLNfssjF7XxukS4661
F90xsp8W49pjfcb1JZSfV2LtmyXkEyUPr9Yn8uZzeeOVP56Ng8VUj/hyutwQ
cwmX870/59gYWeysUUnIhrZuOVXrbJT7IY9mv8j1A7fljboNsD7wMTGujd/a
OupzJvfDb/KxRX/NtX6x3HZ1gH5X7Eg5cK7sJP2YVkVtRvv4safy9rf5Xiw7
+IyLzyJ8znXatUtbL3ltxdpB+/bAoVhc4xAxLv2ktvkxyUMSineXp2+NvUcS
PRu/LDFubO3xvBg3dC+6dus3rnsQ4wZjZ/3cbwvyARfjupgdP2fbUajd6zzW
BiJ0DzbnEGOz7JdDMbIoz+dhX2BY5wf8rpkyrvyBYWIxLttPejpC9vX5q4wP
OvuIcZce3XRS1Ff7zy9WL3XsEPLq2e6z3JzpfL641plbXc9wpf4jYlxiGaND
FefGyhXjomP153LNw5YTONfnRuldLeMilGU5l+vm/IlPStsxLrbJ9NOOY2Fa
x7VbSa6gijrcCdv+8mTCumdXv34925hTfL661NfjwhNJXvMFx27S2WZy8vQY
l1y4W6/3Uq6kf3i210xzB4lxmQPavLFiQfmrwrfkAlJMqeT321Hug2+Jf5rE
QE3Y0sZ0HoXfKSLGtduoH7EZ59R9yNbZMu5CI6kXy7jKXyvOhXGLbMGn1hbd
MZzbMq6v6xXfXr91yR2THD81cA9VxzWuNU8PlDfHqxL3OMS4yr08iudpr3mY
4/25wzjn5KO87pCUYdxxXWeIcWEn7JO1Txm/Z+bFyv0R24c+yOaiYl9iKt9a
n0r59vrKjNuHc7I//ylXrKn8PPBJ66jPr9qususyrnxwZets7TytX+OJsSmO
xf5R/KoixrXHiaf1H67lmXCtjBsxxg09d8rgeF2f7sUyruxcVY5sVVVOHndW
fRekM6RPx0fSsryYM1a+7Kr9Os67Dvt7TGerz258NKx/URjX1lvo/rQuIcZV
O7UMa9dL7LH6nTZCPlL+U44Y17dL9a8hT49uv1tWld2y2qN/TXyPsa0tQ7bJ
+s7xcC6fEel2ZbMME//TYj8WUx2+FOPOz3/u/r//Ybv0sbHnV3bfKqL2Tjli
3Jh/7q3lZM4mva/smX1pvN53MV3Ewaxn2nVPzknMZumO7TkoGz3v3Y3BOTL9
mv+uSq+csvhCq8/IYtwKutsJ105kwrpnW8fiWj+ucqhvgXHxzyV2gnSVm98v
dk674z3628bhjuM38SVrbYgYl36p/WZ/gHHlNyvGzeqMp1JWLGI/Ma44l2vl
HHB13b7a8jF+uPY3GFO+uKoPa6PM/cC3MPiNlWT9lbqzOlz5CSHfzn5eeI+U
Jb0351fcZOXuLdL1inGxHa87ZkmnbecCsflFaI5U9lwxu9mLxrihecFZ5TAa
tYwzTmuR0C+Ic3+32O6+MysuhlWdc+j7+x8Hdf78dpLhmYazD3A5cbuMSz+i
/EFHxzupza9yqnDcyWniG8w1izf334T9w+wcXrpgtmGzTJkcwxwev1nKYL5N
uWJcxayKMa49p2UjjucapSOiTJVR1D7FttIjKrct/ThsC9dKV87zCtkr61q4
R5hF16p7kP+t4neFGJf/0s+F2LJqG5PEWK1Km7ZcV3T+PMb1f/fzJ+Vd51kz
btF9+rp7n33bPfsGO27I91v273O9NSXZMvAdhhHn2phu/rliaw3p7936ErfC
pnafkF8138vm4UWYv4htJdgs6zNlwriai/E+5T3f6VufDGzbWp/prHbHRuyU
YVs497e/+Y/dMf8/uM/sU8WGOZa3bNi2INH7y2diOSlOU3ZOmvCn8vAobjLP
XOVgN4zeFttlOFfHxhg3pMNFYOcQ49JXUq7aCuWSB4kcQo5ze7bIyoPr9Lc9
G+XiOfeEbSeSlYkd89nV86/urWT8cZEi3afiCCc5z5P1VhgXXaXsnPkPXzIP
Yp2fMpN5VjJW8V08e3/rWprDJ8R2NtYV8YoVs9iX1faq042KcWN5R0r34z/1
562PGln9J+eBMS1fItLJMt75jKv7U/2Jcbm/6bmruXzLPYtx4WfpjmWH3Of7
2wOxqH3Wtfre2H0rz7C+Mz/QWC4fyip1ylwXhil7TIhxL1IMmpicJeNW9eEN
7as6Za48ah2uPW+IN0MCV6513+Mf35e/ltCcljWg82Jc+FVsKvY7OOrrf20c
Kl2H+EZ+ucojCxsov5BlZT37IsbVNs6JPlnnL1OvIcZl3LjXmyPiK8w2Yi1c
Xmpn7MolMca1bS/0XmubZdxQPps6fPv/s/fmT1Yb2b7vP/7Oi3eH6Bv39Xkd
98WJPsdtH9ttg93GYHebyTYUtKkBqAEwNWDYRRXUQJnRNgW0fe55EfvtT2p/
tZfWzpS0hxoA/bBC2tpSKpVKSfnJNQ1z3LiegzKfEPWDgXIE1+DcUa51kLkE
78PtGdf2d3s/sH9GFEfcMy7b6VtiXG+LEJtzqLJXTjEuMaZCjObOu5D1QRk3
Gw9k5fMOEuNS9kXHVjw3sWeA2FIfffDf2+++80+Bc5eXprN+8ePtwLiTE39p
nzjxL4FtJXAvy0+O/n7geFTPnpc/i8OK9/9n7Hfm+7Uk41oWFJMG9p3NfGPh
yo+mWvnx4f+r27lulnOoTG+PzG/soEMf2Mi2HZvf7kqWA5d6wrnEk4JxdY9C
Dt9pU78a9smNPXIjdaRh3X1o46nVnj9uZ51vCX60g7wfOeZZGJttBp5lO+u3
tjfD94k8lXDSzrPM7+nVq9XAUDnjdvW0Yld0o3ViOKcYFz2jzSUwLONa8Ywr
sYwrXbdlXK4N/s++/Wv5fvCpzb1bh3Et26MTtoxb5Nwv++J1XXv4sD2z9SCI
t2u2el9yGolvbZspj1IWL3L42E917kOKb4eN+byfYhlqr2VQxi27H6Mw7jhz
FQ/LuFX2olZ2nm5kNoZ3svza3946F7iWsan8Hk7cWAj5g/TuEHuiM1C77zzt
Cf/LTtkyrvpCXcblt/yOZRvNuF/n/el50UcYjvX6RH5P3t7KdcEqk3K2BmBc
KxzLuA9hrC6bZTEuOX/F4bH7ojp6n2L7n3R6tj+JcTV3NIr+dthj6j5H6gNV
+/q4S/5ZHOh6xqjLjdXJ8mLsfWP7rf7THIzunfW3/f9+K+aXYv5EjAvb7naf
C/q1GFf9VXm01Mb+ubfPQeo+w508+/Z/xgr4y8K0YtxB2FZCzGOEMQFcu/uy
Vagnc7x27MVzE6vjZ5/+PvCtBMaFYeFbOFeMe/b0e2Eb7SHGpT+QUwFGXmvN
1LrvsVwX43ombD+BcZWbh7y2YlXPg/jSSqebx3Xq6k5h3LBf1y82lNFdiiXZ
hxxD9ve5a8tBepy73T63kjGuvUcwLu3x8dWtID0W6flRh7ok9LcN2zYyjDSs
u4dt22Vc1lliUzwo4yL43so/C99bYk1NdedgYVy9R0MM4C7j8r2BCcW6MFyI
LWXiJlcJLJn5tt4NttCUP3D8ngq9dWsnnTfOcipsLcblOyfGld8PjMs+iiFt
Ob7MFzfGt9IXqzy1g2y7ictl+ZalGJf/ZC/OXARLy7gxfa9l3P5v2Ubttk7H
veiV8brkxbXfby2HjTlV1T51zj+K3F68uOeMu9dxsWkHxq+D9EeEd45i1yHo
c0Mcu8ljObuwZFyETbHsjTWutqxrx/SU7WNa2TG4+EBxjqoYV/GVbS4gy8sw
gnIFWdtoyyaD9k8xB37CfCN4v8MfQa9yOWNcljHG1TXb2MCWP6y+zzKuPV5t
GmPbVL/3z1BZjt9xyTie23Eybix/9Liu74ftzTzHoO6bZUybE8rOBem50P70
V/qN1d/uGpsJ+NfaHVg9eIxlfR8r6ydsC/GijGiei+WV+9+Edd4D2j4I61rG
lYhxeWZsjkYr2B+LcbE9Zgm/SmSXDMPCuIie0dD+XcZlO/uNI8fQuAXGvfjD
doFN528tB+79YrYVGPfSjZtBAqs6nWnOuFe2ioxr7IkDC3d1r4GVp1oh/69y
JS1ubBf6Bdt3n/diz+lc6IlZhjxD04ZxY3Vq2LaRMUjDu2NsS2yUjZ0yfKv/
4NWqGKYI/riWcb/rxlCBb5nzZ5vlW5awXsgR5PxvFTtZbEZeXuyYPfNZ3anY
jpy44rY6YwX28fWyMZMl+K/u7hZ9QLU/30XVX/E5ZXtNXlzZLj/pju1tPkPp
X1kqLpW3e075G3McrCmdMGN6tYPlXOlzxbg+D1Oma9rsi82l9YKu992e/Pn9
/9b+oMPAvbbcCLlPmbMYlC9sGVqvYtxx6C8Pq9Tpuyl/s1HOC+Ou35nZs+tC
L/vo5+o8LaPaVR4E4yr2lJhSXCn+tD7r9j87Bre5fcQD8stFWCfGMvvrXFWM
a+uoWFmjMi6CT67Y1grj9phPo2XcXaO/Zp1rsyzk7Uyl+47xyjCMu9/vjbp1
HLr8ARl3WD8Kex02Dpz1zbCcK8ZVP1Wf1m/lVqXPylecviC9rZ3bsLYL6kMp
fvWxuGPvSi19/CjLuLI5rsu4Nj4V32Z/Xp4NjVfLGHf3WStw7OfH/hDKgXNh
VVgXO2QxbuwZtdtgXPZFz7uf/b2uwLj/eLHR3t5aCvL08Z3Aufr/8aM7gXEH
4UVYlhjI+M+KeeHmizczfoVxU/UR45IX9y8LvTJXHkwFWd76IXBuGDfLJ7fh
2kb2UBrWHVMbmpjKCFyKHreKb5XDZbdrL8d7Bb61jPvwx1aQnCU7HIQfKswn
xr18f6LHqy4vbpHZzoYlLGtZEMaENcN3r2YcZfmfPAsxT1eDjTNi7ZHhWrah
w/WMK7GMK/0m+1rGhX1zJn7RG3vD+Rwrm2Yxbip3EIwb80MW4/ocT5ZxxbkF
1u0ybqy9qtpQjItY9tW2umMlK8Si1PogeVoPSg7y/IMyrtiqbJ+9Zty9blcd
x3uJ+ZZBjr20+lUeT1ljXOS76U/D/7JTRo+qXLbe96+KcbVvGeNaHbB8cmXr
7P1vdS7Fqbp+P9OvxmLxDMO4KoP3Od8CuFbf2RTj4p+r48Xr4hGr2/OMKz2f
eMnndPL9ItVHvH5c20e1rTiI/lz32EFtlVN20jbucZkt++5ukXEl9EfdQ6vb
VV/QOdhPsXYVN02MK59b62+uZ8LOE8XaxtoGVL0Lw/PwbLnAt2JaPfv81rY6
MrN2PrdVjtk7cV64VmMv28b4CKvOYly+hyE/7/mjBcblXrOPjqXNrU+Cl8PI
ufAk8vLFWuBc//+nE5cz/e30epIdrR0xoneJGJclOXgROFdl/+PVZrROtzv3
i/rAuE+ernTGffNBqOeX3y+G+nhb5YZtG9kPaVh3xPbrMi7rlnHL3lHSI2Kn
Sz5J3i1iWwS/C0SMy3d49+VG4D0xLmwG39mYyTYvLjpcvw3xjBtiOw/g/wjX
wt9+uxiX61HcYTFuWXnofrkm6pWNAdbCtoXZU4FjLXfDuHznOL/Y3jIuNsi0
ayz21rlbE33blIcP/2XOBefa//K5g66dsmVcfpflEariXO4p52OJWMaVwMJe
58u3WLbb9rts4yUPaqs8yDjS64mGEcrwOpLDrluuqtuTncX25t3Zsbd3mcCi
ddjFCzrhYY5LSbD7v3O+MGYNvDt5rGAbzHlsHiCNvxmja8xudVZi1ee7abtR
y591Gdf6/lqO0HhXdVbbqDwbr6qqTcSILLk+crp4ruU39peyW/aMW9WHrN7a
M+4w95Rj0AOKadW2ydw7h/h5LRP8oQv5yhOcG8tnm+J9y7hlEos/bO+n+mgq
PpjmOSyzqk9axrWcHIuDnbJTrrqv/Md3lm8XPGoZV/lwrb1ylQ432Hs4fe6P
v3yfn4/+x/OheG0S/U9dxLiPO2MNmBRfWzGutmObjMC5OlbzBbH2kFjGPQz9
HY4U3/r6PH+22l5enAwC58K/MKfaDF/a4Mu7kDEu7yRiTWHTbvsu/UXx7+p+
623fEeN+OrcddLpi3FxnSzzlAXPiNtLIOKTh3QHbq/OcWl/curlkra4RblWM
d9jO2gkG/jF2vehxWfJbfriWxWbvnQu6Ssu4PkYwDKg8qWLcVL1j2x88iefX
1L6Wb+HWmP2yf3eKb1UGjGavnWUWZ3o5lMs7Ove1nTwS2oBrV2zp5e353N82
mpPY2CVj68y+lm91HMszyxOBZ/tslTvCvMOg3yj7XbKMawW/ToT1lM5X0vte
r+Xl5+3XlTp1GSTO06iMq3GePaeNLzTu8+3H2ATG3Us9bpZney5ImPtJ6GGw
Zx423tSwUpdxpQcV0/oYx7rXykVrc+miZ/V5OKWHxb44b6fub/WvX38r6oIV
y9nrbzzjSjfMuuoSY22V69knxbgwJNyELpd1/Cn1PYnFVY49C7YNxLf6z9o1
1ynL9wF7LTEu2u/napzC/Cg6dc+4m483g6+m3z/m3zyO67c5cMWjlnG9PXHs
vtn7pTkhf/+tDbTvo95Gukp/q7bI+Hojj2kBXyqfrXiXd5Xy3lYxrmyUtR+/
7XnFuHY8Ot3qjYmk+0VgWjEu9UOsfZOXwjxHhR7X2jgcdD/OYvLFvwEzFz9v
b67NtR9uXs91vOhLVrZ6jKv9ye3De6nsXGXf3lhbqI02H28Fyf17Ffc56HBb
jf62kQOVhnVrtlPXH5d16XCx8yh7Z6B/tflglSu1906Jc1Ng3C6vwHxiXHTB
MBtMBt/KJjew7v1e/CniJCGcU4xLrKVB+IGxWtU+MC66W9ktK99vmYjbJZZx
pV+lnSzjsrS+uGJcmP7y1mpgedkue8blOMWrEuOq7nwXKccyboxvh2XcOmIZ
NybevtlysCR17KvdjSCef8cRy3iU779lXK0PE7923PWqK1WMm8VbL9eVlMWU
op9Ohj6Z+av55+ogGTfcsxetwtg1+L93/XGtffGojGvPyfEwi3IEpexIEcVp
1j2wdtH6bc9Xxrj+HLqWWNtKrwZfVTFuGdPYMi3nWn1zHT1cnefDjv3Lvg91
7X8sT3kZ1zNedj0I9xRWIr6FfJ/1H4x7duJsnlvXXrO9Rn+9wzw3lC3G9WVZ
H3DPvL4ve54V59p9vb2zndPwcbZjvGTvmRg32GI8WQ3PuBgXthTnrj1azBlX
et4U20rsNj8eQqTD1VjU/sfYgWOox7mFIznjcn7q9/LVat91Ddp/KXM/8yiX
iWI+xXTz25vXcsYd9PnQGGiYZwuR7aH6Fvl5/9zNfxukmy9IjHvQY/dGGkEa
1i1pG8WbMox7dPZuYNxzK+WcK7Z69Squ40y+X4xek3ectVmGya6FnOnzIf+P
GDeWN1e5bQaNnzFMvA3G4oHPu3WPcWGMcYOOM8SQXs8Z9+TiVPv4/EJYTq1N
hfeyGFf62cC4HZYX49LOaodgG95pG8u4irsc4lx0zifGRa50fYpYh5tjnLtf
37YqnSziOdfbPIuFLeOmyqwavz39eSWMS2ibuscMI+PwBTwMjCtbjWGlinEP
uo1emFyYyo8L48o2GA5FYAjy8lxuZb/Fs5rTEFeyRCersTm/L93ZDscpv9qg
jAsHKLaydL26dpvzt0xibZViXAlMK7al7ozZYVv8Uux31Y+/xd6yv7bcLf5R
3FzPQoPMXfrj6vaFuvtKbx7bdy8YNyaWcYn/xW/5xp6YLzJu6jsXY6JBn5vU
ffE6VknsvsYYV37aKd2aZ1zb132/12/ZTOt5VH3EuM+et8I3WIy7+XQrL4N+
W8a49j/LuZTpr0FjUT0nvbbYCLmKxLjYIkuHK8at6vN17p/8ePejn1aJ6st9
yd6nve/KqYlv2mfOfBZss4cpuw7n4o+bmhelLox/ec4KjAvfduSgx+yNNFIm
De+69ojwLWOXOvbKYjrPdtF3muHaWw+v9WIgddhCjKv5UMu46FJZwnVWbyxf
U46tw6zW5q5OXa1fKCKd8X9049jAuMQituMFtQPH854NetyuH67+47v16dxK
4FHLuFenThT0tGJcrpFrZwkP6Ddtglh7Zcu4qjP7yA78MDBu3e9faqxtGZdl
md2zyvI+w1ayOYIi4/Z/DzdqsZiPIbSX7bNXZf/0+Fb72uyp0mdoFJHdBWO5
unPuBync04lL34RYxtxbxmPob2HUL65tB85ANyu9KEvZ9Yp3rQ0l5Sk3rcbr
dkyv/CnhXrixvliwDuOq7n4MrH1snhe2U58qfZDKYD/0h7At7THd5XXFf47F
vrWMq3Na9vGxt6zerm7/TzGub8PY2NZzU6zflzGu9S1N9aNxPrfUg3sgzmWu
gTE5jMt8CeKf17ocH7s2306x9vLv7Vjf0zlse1nGTbVTao7G38ui/ngjtycT
4/r9eQ+JSbWNbzWcy7dU3Mk31PrpxhjXsq4tD5Gdg/zXrQ03deRcGv/cWrsU
OJdtK4+n2r+8TNvF2GupmkcV4+4V5w47H4XwHiFP8E6n3cW4w9YD++dB9pdO
GXnRzQ+imMy5bXJHPrh488DH6400Ulca1s0ErrWMS94g2mMQfU0V40qXyfrO
Lzvt+a3lAuNKFykW4zfrMC3jYOwHxbiWhcW48oMtG4PXHZ8rPpRn3PBejsRp
jdkkMYa3fJv7527PB5thHxcZX1yuU4y7sDlV0FlL38X1sg+xrTjvDw97calg
Xcth0uWqTYkrBTPT9jZnLiLf4+i3qKZv9kFLLK5zTGI+w9jWhvhFnd/M42vd
9t+6+sb9YNyYfdc4Jca4jKPrPkM8rzF75UF0DodF9pJxbX/RfzZXSszuUr62
lCG9sY3XhM441taece1y0DYRoyhHLozLuRVnV5yyu1u0mZb9doxxbd+2fCsb
6Vg/KnsGrI9yGbdW+epqX+6nnRNI9ZXU/6OM/8uENifeFwyFvHqxOTLDyA5B
v208I8U+9nX1nFl2Heo/z4mn+6rY31Nt7HMrq09ZP2Cd0/K3fGt1HT4GFt/R
K/dP50yaxb84HrhWjKuxRoxn/TbspbxN0ff3iuNOlv39I+Pch1s3Mj3uyXdy
xi27V4P6WcteeS/ewYN+kzIdexZTmXUY96uL37WXW53xzeNNV/ZmW7GQUzGR
e31lLerna8uyv8klZJ/dTy6v5XyLwLaSgx6vN9LIMPK28m7MTnkYxq1+9/Xs
epkj8zrEwFzrU4W4UxIxro5nXd8cWFh5d2Dg0vdpJO9rTGBbyuK8dfTTdRiX
bXyvxLh9+YDmPs4ZVxyr6xLjcq0wq3gftreMa/1xdV72V76hr2/PZTmZOuIZ
lzLg5nF/8w6LWMatYmHLuJLdF+vBZuzRzyvBtlk+xv484/AFriOjMG6d4waN
Zx3r/6EfRhgttjxMEqvT1cvfBt0L8YIZ44srJPAuvCmG0xicWCjarnjB/jzy
j63DuPK1le5XolhY/fch25fYLvLflT/vKIwby+mTYlx/vy3TW12v7dtl3GR/
p1hI+lb/nHiW5l7GfEpjZdZ5bgaNazOOff1xlnGVU7msvRR/SXYB6pOpeQXd
L9tPtb1OveHax8/uhu9m9m1fy/tlrA2t7teeJ/VuUf/iO2njJXt/ed8Ged/u
1InjFEvZzqfzeyGPj1nkWqvD5bc/B5yrsSUsl2ofGPerv/4x51vsp6v6RKrf
7SfjEpdpmG+SGJc2IUYyAueiWyUfreppda2WdyU7z6qfzd7c2Gaetwi+1ZJn
hXy9MK4dJzds28ibIm8b63q+Je/PV9dv53lsxyHk4FHcZDgqZicrxo3lg0Ww
t+19IzPfmUJOnC7jpmIfF977xmY69T96Yfnf1inP70duIM8JskWK5rztMK7y
6MK3V7q+s8qppOuDWSlbjKtroD1oI8+4iDg5+DV3GZdzYAuNiJFjjPu66HBH
Ec+4Yt8UC4txC+2UiIuV8hG2eWWGqXOZTV+V7DfjHiaOHcb398VPq+2/fvFu
u3U381PGhs3GbhIryj5UDLxl9EwIsbrK2sJyrmJCMebS2FzlDMK4vs9oSR2x
cVbdh+l/svu0MXs9m6a2e32n+nKZbW2q7XzZlnFT/U9zEJ5xU3MvdRh3lH5u
j5V+fJBjiv0oY1zlCbVz1TGbY7bRDpxT+lvWbX+iPW3sYsu4qbjJqfaCacWI
sGSw8fq1WL7Xxcaut4pxdQ6+f3wXvf1AiP34bDlvA45Ze7haiG/MN5ul7Jnl
oy+dLhwsxmUO1OcLUtvxXlC+LcZaqXuqnEEwrjhXjDtoH1Mf99uxV7Z+ueN6
P9PPeO8NU17g3A534vNKbp7Lt5fyvELapxejai0Xjrl0J9PHVDGu7ruOE+Oq
XDGuHyPvF982HN3IfsvbwLsxxiXO7zjeeeF79rIV9IvwWBnjIvzvbXhjjJu/
wzv8ZfPjcDx60nHUe9g4OIErf8viKFtOgL2z/Hlxhg+cO/lBiDslxmVp8/9a
xoXBib8sHbIY90nXPlSxvBDLuCG2cjeuV4hjZRhXcwVPjI2pZdxx+GK+jmIZ
V37AZbrgWPznGOtWMUmt/vZrea4iL/vBt15sjlZf9/2w6y7W5eAZ19pWWuZT
zCX7v+ydvQ7L+/DWaUPPeyn28/yZ2i/GuLFcqNrfvj9SNr2WU3X9sbqn6uZ5
K3Uc5ZN3x9sq1dEf75XY8+w83Wyn8hJUltN51yh/kL/+GI8qPrgYl7ZRu+gd
ZRnX1pf+XodxFWtRrGjz7PDt8nr9snudeofJDzw8R8/uBhGLcl5EeXl0beQJ
g03tnGGIo96pG/wqxuVbKbbVvDPbw5ijczxlinF9vcS4+K7j10A7aw7D++wi
MO7Z0+8FVvaMO0qfsgLjXr95bqz9m/b3c1p15Kef1gOfYvMixr3ZuVeMdcSy
dv+1R3MhVy72huQLgnFv3N8sPad9rimP3EO7zzdDWTDu7Qdb7anWZhA7Pt4v
+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
+tmMcdU2VuduOcS2i+fd2FyBvqGwJd8wy4piXM3lWr4U48KY2AnLRld607L7
m9kxbISy9e2ENSnz+sat/DngWbScix2yZWrqJDtj6XQpUyy79mjR9I2NwMIc
y3VpH9koi7HFuMSy9vVWvWw+6JiIcUMbd8YwYlzm9/nP62sp076n/LNo71tZ
P7OMa/ulfw6Zp38WuQafX1t2yor9VMW6n8+s5PpbGBfJ/G8zm+SQn/Zq9m7V
mJXYy9gmDxK/Ga59+PNSYFzk3O3T7dbDy4F1YVw/Lt5LthzE57Zh3EYOm7xu
rOvjTSHhPffbvW4O9IxHkbOXTrevXL/anr/Zbzecet+IK/kmSZeo8rwPqGU9
8djVLmvVeY/xPlUs6NhYnP9ubgymbyq8ywfgPdkpBx3Qk61wLHzry+AbZm2R
Z1b+1j556o95u8C3lj3Fohwrxo3F0LGMO9XaDm3oy5EtNOdF/P/Ugfs2THu9
TlI11kR/SzuVsdteyeNHK+3Vlfg8yjBSli/J+g6nxPoZW39jyhyEcfdKwlhx
yGNTdWZ8+uH5ufZ77//PwrsdXS6cCdOi04U7GSdKl2v5U0zLc6n4PuLbsnwp
Gj/K37qKcWN92fJrzK5Y+1DesM9IbH/puT3jwiDYHXI+xThif9XNtomPqRVj
dnGq1TXa/WJ8rBhJdq5hUL9wzzKp86XmD1L+pGXr3u7Y5ou15Uj3iq2yGNfr
1zzjeg5TG3m+Yh/41jJuTF9qGVc+rXChGJfy4XjFcY7Zt7If59A9wk92dj3j
05nOu4bjxLnS1dvrgHGtjbEYV3616GPFvHwDM7/h7LofPNnMGVexlxHLuHlb
vdwMOmlxroS5rbrz6roPczMnA+Nm19/K7Yg8x3obc7WR2rHMvt32GTj3xIl/
6eu/di5EjFvnvSCdru1jXra3loJ8PXs9cG42/lxvf7c0Hxj3y5s9vS2Me3m1
qMdV3iUfiyp2jf/ZXb/RGXP+9Hw75CKCcVO62722Tx6k7IZxGznM8jrwLr64
cK31xxWHKV4UtsAwz/zymc57aTHocxHWkfx9m2BAeBaeEuOmcueIu/jWhBw3
XfYq88X1IpvJfLzbrRO8Dt8OGys5+g4tYV4bs0eMm3/3um2qbxj8yTWyje+5
ZVyEdmM7DIFgl535CsVjTWvMx9wnY0jZcctX1/v3xvhWeYvG1VaHWeqMa8mJ
+yYwru0jgx5Txbjel9jvl/q/iqtTMbxi8atHkdR1lzHux8feTTKujpd9sZhK
Y3AfV5gxaczeQT6MYgFsf23+II3lUnlu7ViYshT/RrFeq56NOr6gYgNyByte
LPWEZWVPzTmlZ/OMCwcfm+99l/SbdmYf/EG/WSrqbuw4PaXnTTGu9PViaJsH
x1+bjaHj9aixfcvaX2L19Yi3/031Q79vGctk17QZdLl2DqHMVzKmb6SusKi/
NpjuzMr5bq6A41ERC4ox2Vc6W7GQtXX21271qDCtGFc5b6UfVv+iLfRcwMfe
j1b6XMu4tq7qx7Z90e1yrDj3ecg7s9GuinntfcAHETiXvEGxZ5E6yS7E938x
btU3zf7/3nv/LWfc2LNj+0FsHi7W39FtBD+1knoE3a0Zi/L7k9ksNy6Mi+Bv
q3cInIsvLrGpU2X+Z+jD22EptkVXC9eKcfmt+Mkxzj1MfNswbiOvg3jWPSy8
Kx2u+JacQYjeFzAuDCX/TDFueLd1xoQxfW7hHf/zavC1FeOWsW2mJ5vNGVfb
6+pwQ53+sd3nF6h8rzAurMfvUWMr53FYajKu9WOTblyMq1jHXLcYl2+bbJUl
YlzNjyvOVorZs+/gds64fI9Z0s6UY22fY/elYdyiwLgHUTdslQ8L45a1k7X9
HKRdR2Vcn8e4TDcd4/CquF+2fGyTYVnGWLwz//3MRODeL65tB75NXe+ojKvj
bCwdlWm5VzpdXw/tz3oV4/p+IT/jbcft/efoZ1xEx2FTgh7384WtwKvHFrI8
KuhjaNMY48a+mzb2kR+Dp9o/Nl4X41pdudXjentNSVl/176xesQY1/72ttSp
ayh7jn2cLzGucqBa3XjZ8+/tlbmH0gvbNhCz+phMCNttbGL4VPv7+2BZTczO
b76V4lIEnqYc5f9R2XxP0Q3vmmdC9zOzZz6Xn1/Hqc78Zxmd72KqX6ldYNzW
Tv98J//zbP2wvZk/Y8MwLrbD777zT32Mq3Po2myMLltfy7mxa/HvCM6FPNy6
EX1mrB3yINcB4z573n/c1k7md+sZF/HbYFwdx5y9GBdbZftMWp0tHIttMsJv
mHb1wb0gS1s/dOrVPxaGJd8/P39gMaZS2xrGbeR1k8PEutZOGX0uvrd6n/B9
gWNhK3jnirMZFuNav73i93Utj5U8s/WgfXlzKRozWbbLYlyEc6LXHIRxFdup
957P2A+mpXy+g/LrHYZx0aVanqzLt16U9wf9LULdrN3wuYWjQY+LxNoKLqUu
dRmXbwDtybc75MI1jFvlm2vjWb2psvxgodM+Cwdej5S8Low7jv2HPSa/l53n
LvbsPfp5McSdetqd62G+gvxBsvPX+Cjla03cmCz2yVY+/kanyPsb7q2ql/Ld
MiaVrTE6TLhUrKXtsdiyKcaV7krxpWQfLXZGn6ycQ+I3xeVBuCaNmcVcKcat
018oW9811dUzboxbraCzgZPL9rE5avw8QVlfF3PE7DHVRuI4sYly6Pz0PM64
/j7FWLROPC/lFy7TO+te1XlOdE30dzEuIjvwKjvW3d1ejiExLrbJNm+OZVz4
U2zrGferxan8t/LQ+vsnHbnVS/Pdkq+rzqG2zMYHx/O68OyyD/vDwGsPszhU
4l3V39pOWz2z2FexMmw+H8+InMsyrvq62tXPXwz6ThNzPtiIv4+kT+Ue8b5I
+R+k+pG3ncb/V+ckHrbP/SW/8EEYF39cy7i2PBg3xrcfXt4sbE8915RFudLV
Sl+rdcu4a48WAuOKc1N62/3kyYZbG3lb5KB51/viwriwG1wI34hxy/wyn+ws
VjJuKi/QtYcPA+PZGE76tvENGyTWlN7BHMO4VQwnH99RbZSt7rVKYuPsGBOL
b71YvtX8gmfcbHywUZnjR3bKYlzupbdLTsnbwLiHmW+R/WDcUbhyWNmLc774
abV9/tQHfdv3mnEv36xnwy4bQ3Q8xKZCWNcYX7GpGLNuJXz4YnxiY1GVMa7X
32lsnLLRRagTutMqjhRTsS96Wfkaw7X8rmLbQcQyrm2X1DVYxrXj/hgDWH2l
Zc46caI8n4rHYjalVj+m+nsW8PfZMm6t5+FlNhcdY9wyXlEdNL+hPNBiXDEi
zCmOFeOyhGn/evNy+A8R4/IfwnfI2itbwR5YjE0dFJuZMQFl8IyqPTNb49MF
bt192bNP1r5iXMrD5tnbUlO+4iTDup5x64hsIpi7isXNrvu+Q3eLwJuxfqBn
XP1T+bkHlcI8w+56zrirq/Ph3uw+79nDWV/cunppGJf2sM8PvrPLrcXgg1vG
uOhpke/v9WxabL6i/3QCv/rfsk+GcdHbim3LGHc/x95lcZSb3LiNvGlyELbM
wQfX5MX98vtbgeEQxSFCT8i64hjqHQMDw1bw7fc3vuu9Nx3HoYP1nOsZV9tH
tR9GxLh8t6g7daRcz7jDnGsQxl2YPWXGGWu5r23fd6abMxix9tkhrvLpd8PS
2xKH2I+dduVb7ecGvNAW0sd6H9zDxrhhXPNiPczZ21wvb6vAYvRZGHev2ns/
j9sPSTEuwrtA9v6hXWvOeaWuF07efnI32DHXzSVcl3EDbz/u6Wt8/CTlENJ/
lr+kM1YsVzveLmPcKl/ejEfS/oeecWF0dLLj5lsEO2Z/fs+4nhVjOtIYd/Ib
hhbnqk219Nzq9aqWX62Nq3RhZXpa71vrmTbF8SnuTTGujQmEUDd4xOZ4QhS7
V7p48a14En4Vt/IbltVv1hGxsLaJhaVH5TvGeXStsh9WjGYxqGJW8X2Q/bFn
XJvjB3nejc9r9ZyUaWMrK9YUjGvtn1XHqmeaPiE9f5Vve533zO6zVs6bsf0s
4/q5qUHmP+xx0uMS5wrGRY58/s/to8f+NbCu9KbsC3fW+QZIf7vzdCs/nxi3
f/y7mYtiLPtYUvRBsav3tRXXytdWwv9sg3Fj9snIQfKkPW/Dto28LbIfrBvK
RodrGBfBfxam5TvBUnpG6VX1vhHjsj57+dswDxjeY//YzuNZYKciO+Ww3Fjo
ZyjDvuNgXAll840U43o99DjPFRMYl/NRB9kGe8aVDTXfV8+4CDbLnnGtfXFd
xlXcrkEYVzGo6nwfRxE4A65FVC75efby3hxmgSGw5ZPv7zh0uKl598PMqqPI
1PlPk7mWAkf8dq/9v39Lx5caROi/Z069F3x+P/vLP7c//+z/aR///F/y92FK
FC8KvTDxqpSPxeZ2rcu4jHl/eDjXGZ9PZDFkO3JuZbLLBGeD3aY9r9WrWJ1x
GeOW9RnGnsrVwhhf+YL3knH5htXJHWt/S+/lfVZtu4ozxUT+2i3jxs7j2dfm
VaFtUjGidW98GWp/7ed52sdGSj3TMc719qq058VbWwVfals3/tf8cYxz9fv4
9Wu5rbIYl3X0uvz+y/xKgXEVx283/wZmjKu4UrCncuqKcfn2ybfW1scyKt9K
MS66YdoH3SzCb5/XyB4vnS7LKvvcWH8aRaoY186PyJ5cdawTDyp5HR3OJfaU
zi3G/csnvy/sZ3Wr9tny56Ld59e2csY9P5/pbsWy2Th0syDkDSLG8o3NhcC4
4lg4FVFsMtklBzv6p6s567LPi5frYT/JQeS9HUYarm3kbZS94l3ZKH8wMZ+V
3Y2tDON6P1nFg+I9FbMdRo8bG9OFmHr/yDiXHLhlfLv78kGQcXwj+OYV8qV3
c9TyTRvntyglslNmTkD5kZQDF2Gb4j+JcWOcGRh38oMQe4qltbsW93J8Fa+H
3PaGjWWvXMW4Ze0l28dR2gk+CHMQbowI49b9NnOfVx/OHEi843GLdNeWv/aS
cUeRQcZOw/j9jiJzU18E8duZR1J+zXExrmR5bbI9cf5IkI8/+l0hfhW/YV/r
z4HetxA76+j/CLGrsHuenvk25OMVw9o2t/dSLJZiXOnW4FxbhnS72DErvpWN
JTXofef7gX0mvo/Ek4JvWSom8l4I37AqxvXibY9j+9g8Ql7Xm/KDjZXlbZst
46oOsdjF9h6Jba0OOlaH1HqhPhHGlb234iXzO8W4khjjwq/ywRXz2rhTlnGl
y7V+u3p3i23ZH7YU45KLh7jGbIdPsaMV4/I8k7OH/cXCbFfeXOlmxbgX70wH
mb5bzHUk3lZcKjEufdo/d2pj+jzCPFHWb6rjLNcRy5mWc1P3FsZF/+59clP9
MvXf4x9v5+dGn8vyT+/8H32MGzveMq6d37l484cgH021gn0ynNvHtflYt8e4
0tPCq2JZK9LbBp7tMK72py+zDbn/7PprxbiNNPK2yzh518ea+qwzHlneng8C
z4p1FAeJpb5x9t0G367fTfOF+K2McbFXHvQ7UPYtsfwm3S28No7vTx3xjKvY
WfKDFd9KxxtiVt8vj//0zcUe44qX9V8s3y7n+o/uOF6Me6XLtrP3ziX9cZWb
6ErXd7fsOssYN8uH1N8v/DfWMy5y5X48368V/pe9AWMTq6t6XSXGuNje7oUv
7qhSl3E1F7KfnFuHccl33Nf+P68Ev91hzjkOxp25+m3QAYt1ieNsdcJqc8WZ
Quc7dXcyj+UjltC6jXVLzmKVEWPcWE6QMmFM/e1yT0frGTd8oyZX94xxEWJY
DdpXrd21/U+6ce0ne2+7j9elW6aI5T/1elWbL9TqasXDu7u9eLiWcf25Ys9f
jJmtwInKHyQbAcu4ts5lbWlzzVo2lMj/thhfObNvtvbKOlbHK3+PYhzDp+Ql
gjfhWXEu3xR7/8S44lMbQ4oyZIvMOICxixiXeFHsZ/MIsQz7dc4FR1M+fRqJ
xZC60bW/6LXdeBiX90SMccv6txg3Fvt7YX21r9+U2ba3ViaDwLkwb4pzU/1c
fTzYKj/fDIyb4tqYYFMsvsWX9lk3XkIsthTrrYeXcxbm+PXH3wc/XBgXva4v
v7EFbqSRwy3j8N31sabw7+ebZ/lWXCb9o3Sj/2HG4HOd7wi2yrF3X5Wu0MY5
HkTqfkcUnzl8qzostfV0NbmvOJFleGeX6Ear4nj6eFMvQpzHCznjss53e+Px
lZxbyxgXvrV5hKS/lU4Wv2OY2dbZMq7KF9uWMa5slGFczWsMY9edYlz/rY1J
HV9JdLcaz7wpjBuTw8q4MUnFw9lvxr149qNSH2b6FvMIvEe0pL+yXf2I7XCw
/DF4XjX/gy2579v+N+NU7h31wG4ajoVzJfArts23Fy+2l5emA98Ow7jiBLGF
xI7d+T29NhG1JRQblTGuf98yfrXfHr4d8Af6P8u9e824khhf2rqm/vOsG8tP
K/vk2HFlNsTaFtO9ep2X1fnauNn2fDavrT+PftdhXFsv6XLt9VXZfHimLcuL
61nY6nzFvbY82QmLcYnvq/7O87e602Nc1QcWlX2zGNeKGFd5b5e2lkO8ZTFu
rK6MGTzT+t+0mWdcdMxlObbrimXcIx/9rlCmjfdt66Z5Ea3Lhpk+LcZVe/r+
5cXGuhPjfvXXD0vr7Mvj/OQGOjq5UpttERs3Soz78OelID7OlLVVRqerMmDc
K6t3w/bbO5f7OLfh20YaeX1kGN7Nc+IaxtX8+5OfbxRi/Sreww8Pp8M34j+c
jR+2zXUY94rLU8M5iu/ptbHqWZWDyNryesYN1+PYNvX+ftaNRWkZOLV/inGZ
Pwhz0q+ysbNlXNkzyw/as6dsli3jqn3lb8vvvrFN51zKGySutfmHFVtM5agu
sbIGlTr3MzY2gzUYy2CzTHuhW4MrqJf8VMW4EmLksj+Mslf6eu5jTP+3l/Im
MK5lgv2oBzGnUm0mHTl9jL4lW3fWl7eX2tc25kLfo7+xnf6knNXqayEviWHa
Ov0NvS1+uwjrD+4v5G2TlZHFH0Yfw7gZfbBy837yyT8HO1Ob80bMU4dxM36Y
6GMuqycsuzd1GBeu/feTX7ffPfpO+08f/L7D6P81CGPk9z7/y57yLt+uMpaN
/Wf7pBjTcoxnX8Vatm2fmuvUnEHMvlixrfWs+OMt41o9r8qJMW7K/lS/0dOe
m5lqX71xNS/bs7V9hrW+0I3FH56TxxnDsU6fsrGnYvpcz7T2t41P5XW+Onb6
bpFxVTd/jfY4sW5MLOeGa+9wo82Vy3/B1/dRZsdRlfunyrZ/t2ZsythcL8da
xrW6XOtTTmw39Vvbx9VPYFXy9DI38OMv3wdRm6bmmDnWMi55esW412f77brU
l/IY2DdutqdWVtt37rVyxq0zjp1dnA0sanP/qI/CqdYv13MuLItYm2QY159D
+W+Rgx63N9JII4NLXd6N8S3vJ3gIYdxnfTf5dvz0j+t9Yx34dmr6VPvBxkKI
k+Dff4qzJMYVkymWlfYbRpc7qMTmpy3jxv6XH68tw+s0/fgp5Ap2+yg+rmJT
i3E1l6AY0IohKRtcm+/HMq6OgeE94xKDCp2u9E+Wce2cg8r3jKt9yuJNjVNS
Y2tYxI5RxLehbVa7cwIbvTmBcfNtbAwgxiWWLiw0ai6qOvI6MW7q3qb8GMvu
/yjyOjJuf7tshP0QdMDoc2dmTod1uBc75wuTx3rscOtcvi7ekG1oFeOK2ZK+
nM7eFt6BaWHbFON+8t2NEF+GbWLef/3gD+F3FndmfxhX4+8Y/3lOTPm6inP1
jbBsmLLFlw+nP69l3Kwf9sfFtnl0vB+iyvB+2faepmyxz06cLdit+mtRnXkm
+BaIcbEZnlu/VtC3+vjKKb2t1fdKxLgpPkUfy/m4Tvqars22v+rPc6g6BZ+c
+0W9Mtu5Bp7ZLI9QxriKxajYzGLcsmdY8xvKYV3Hhz0171DnOOuXa69ffQDG
LZu/Ub+Fc4m9VeddG5u7OXv6vcC5Ylx4l/hUtu9l+uW1wLiIYiMPMn5VHGSx
rF1an1wbM1n2yUgdv9tGh9tII2+GlPGuZ1zyPBLjV2M+q2vFl1SM68f0/9G1
88Mf1+YPkvAdYXwIbyGw8PzymcAkT0xumL2OcYz05TzvsKBiQI9Sbh3G1TUy
TqaNla/W+ucGvm31fGztHIPmGYLN8ul3Qywq/hPjik+5d8plLMaFna2vrWdc
cS332vr48h/HVsVtHlVSOiTPuLIP9TmaLeP6WGOj1sv/hq1P3FgIz82xheV9
yav7ujKu15OlGGqvGDcVV9n6Osd0YdqHuQzZD9Dv4F36mJ1zUb+jzz0180rj
kCrGlXx07H+0z1/7pI8vrE9u4Ik7Ha6Y+Kp9+sKREMsKmx0xWBXjWmFf/GDJ
3XPh1nbQz6KnDfpaxuQdxn33ryejjOv3e//C4tg4F8bGdtvXV7Gq4QH05N/9
kNVbOnN7/2Pxo7XMcnv2ttn41DFeTjGuzmMZyfvesk3n8j7AviztYzlQHK3f
OhbGRV78fL+vrlqHBb0tsmVc+hIMau0EvM1AjHF5hqwu1zOxfGgRyke+uL6d
x7/y94PrpV7sh35ZjCsfW+loxbiZz+/pnM/FuDzfSCwuREx2nm5280bUm0uN
zX0EX/hn5X7/7Afb8qwQC8r2J+4t7eLz46of2Xuq+R0YN5azNyY+d7IYF5/c
P3/wu8C4xFs+Mb8ZhLzhnJe5piPTrbbN/1NnrAqbKi+QuNXqbb2tcmYPsdXH
uGXS5ORppJE3VwrjAcO3CIx7fuVugXGxoWUpxn31Kpv7TbGoGBebZfS61+Yy
HSDfkeuL59sT08fbpyeOBr7lN2N29hcX7wfjxr4944o3a/W73k45/2Z1/pd9
seyWLeNqv5SfrOIsnzz1x5xprZ5XulwxLveNc8KpslNW2dxntsO00tt6xrXz
HIwBxt3+8APjHnGBHzOwfbZT7+w7l9aXUjeNkeAN6Xer9NCcr67dMXWAcRg7
HZ3NbKD2i3Ff/lKPcWEW4rZqSQyg2Jh/vyTGuHY768p/o/jBdXUcVULuoGsm
P3UdIXfVoxBzaiX0N+X58uviW/qDcpPpP6/frWqfOvvQLvjpwrPiW7i2LuOe
+OadPi6GlxkX7zzdKPCt7of8+FL1Euf+6cP/FdiVJSx78uad9rcrM50x72J/
vqAIC8O48C9MPC7dLv7A9H3GzLIxtoyr/Y4vrOYMJG6I9d/Y/bL5Vsvmb1L3
1B5rv0OecW2ZnpX4X8dJxywOEuNKx5zzzrNWlHHFXNjpesb1DCvGjfniaj9i
GOPziq8ssvVkNTwXCPGhOA9lyIbZ8y4xj5mLsIzLd03Xp/aAcfHb5TmEWylf
jGvrrHpKx8v3UDmEgv1G5xsSfPJ3Nyvn3MS4w7yXZK9Wh3Glw2UZ60Pcc971
9Gsxbuz9oj5Ana09fmxOh7blWRHjyiYaP24Y9+rkF+333/2/gsC4CPFKiZ8O
34pxBx2fwrhWX+v9bVnCuJaBxbjS6aosz7BNztlGGnm7JPfFvZzx7RTvyG58
X82DinFZFt6b8l2N5N2QnbMYd+HyyfbE5JH2mekjOeOS63V6/lT74eaNPB7z
5trsvjEuPrXbTzpctLWajxPGUa7l2xTjInAluloxLgyJvbfdpy7j+jhR8qWV
vy/3j9/WD1f6WzEw5/M+06qXZd9xMy7xa71tsWdc+NPrbKNl/XKroOu1jGuF
/xS3mLI949JeQR/380rY72lX107cWs+4F+5MtT+dX8lt3/ayz8K4xCXy2xmf
oIdiTGLH5+Lcg2DcqvFhbExl8+PY8fgo8jowbkpitoJsE6cePf7/hn54euFY
gVuRr+c/7uOFKsa1260dtM0zU+iPL7I+BsP++etLUc6tyodbOG7MjFtXxLi0
kZ59mEftXca4vo8OMj9jGddu88fHdMD+f2+7C5Nwb6yvr56p/BnbWWp/d+VS
4dzBn7PDnooDJTv3nFvvnA+xmlo7q6GNYEtrf4yPJywL24prxbm2LsGm1TBu
zzem2Gdl+807THmBxLi2DYiPLMbN7sNGKJP76vXIXvguLpj5ZTFu2ZiA66rr
Z1sm+MeiFy/b55Ojv8/tlBVzSn1C8ze855kLoJ3KyrLvE+vP7e3hKV95iCSa
P6HPinH/8WIjlPPRl0dzxh2VH+twrhiXpdfpyk5Z9Wi4tpFG3k5RHlzLuPBO
li+9FTgMhn3+Mm13ZxlX65qjZEyuXLTwLQLXTd+fCWNDMS5zyuudbxQiRrR+
uZQz6rckJqdu3t2TcpEyvuUaaQdkYXMhxDZe2Jzq01GWMS6CTy72yrRr7H84
1TJuyEvU9cXl/gb/wy7fIrIlh40ZR8iGWvbK8OJexFnyjBsbzw3DuBxDuYh4
njbwjBv+X/0q8Cq5ihjH4dOIsG4Z9+TiZNDbYqfMeogZ/Wip/eX3V/c0L2+K
b9VeMca1wnbGvM9HtMcfRjR2Sp17LxhXxzK/9mRnsBxA9P8XZvzKetBtde5v
mDd6ud6NHZf1rexZmWpPry61p1ut9vz63a7uKh3Pue41lDGu5l/Uz+n3py5/
XGBVOPjI57/Pcu522fXM398PfVvlKGdRGePa/CXKmfnen/856GAVU4r1z6cX
g+4WHW7g76WFSs4t6HY7Zea63W+vjI1jw/cu8d+J68s5X4lx4aNYf0rZCOfP
qbEHHqb/6lmQPXQqdltVv7exdbOxf39MMdhz/tp0/oyyhGNgSYT3pPedDbzb
5VxdI2Wjn0XEuLF+rGvRcbKdVXuHXHbr53JbZZ41y7i9+qfnEm2bw6leFy3h
u6i8t55xLeftxfvQ1pHzTrt8i77fiHEvnD9a0NH7axXjeh9tW671abZ91s49
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
oRj3irGzjl9vL/6x7IrFt7Pd2CI+Z65EtgLeB5nv1NvEuKPqTlOMO2yc8v2Q
OryWkjqMW2Z3mRIY9+LZjwauT8w+NBWzRnFxptcmOmPlVofzlgPbPe2+G6ZD
TOXJ8Ftcq7YalnHL+hq/FzeyMUI+Nj0/l3ErtsjTdyv5bxjGlW++JMa4hTod
kFAH+E6Cn65lXOypLeNUibdplo+n5R7Lq4P6jsbiWtnzxRgsxPZ6nMXRJhcx
wrXauQZ+c89kl7vjdI/M2ZAXSDzLUoyrfEEx4X+bEwhZXplrL8xPBM5lCffC
nXMzvRiFqX7tY4t72+S11kwoB0F3jN00bBtrSzGufc5pJzFu6h7YGG9VAsvC
tcjZ0+/l6/ArMn3x8x7jhm9jxqmWcaVfLesLeTu9utdW/h+v1071VzHu329n
xyk3EHmBiKF88fZyWMrvNuTogG/FuO55GlU8v/Ib1hXjxmIoN364b67Iz7Jh
3UasMLfmGffMzSLjMpYchjmtwEeKW0UOIsUlngr58z7PfUmlN0XGxTViXPEa
Qh1s3Ct/LnLRYtMq5hPjWvHnsf6s1qbY72cZl3OTPwifXDGuZUerl1Xs5FQu
XJiU/71fLvwM33IesSt861lZ5VrG1b3R9RfaqNMnKIfrxrbY5r5VnoKyHD7o
udmPPuZ13mJcZC/8aA8bM9N+tAXjvFQ+pCopY1zNQex13PFBOX0UxkXPWdVW
w+QuerKz2P76y3+PXpvtx3Ck4lA93y3q4sp0bey7+3KzPb9+tz1x627ww/1s
fjvkY/rx+VL+/KHfVYyp57vp+LoxKYuPFTveMi5MC6/CuHZcCt9QV/ZhiS9x
ruuFgyeu1eJF/G7hWMVkDRz3shVi0fKdIB+PdMnEUg7fqQNmXGxpQ1619WtB
qJPiL7NOfS3nhj6Q8Oe08y6+r+i34iVZxlW82kGeNeW6LfMTVn1gN3Eu27SO
wLTEuxbj6lirMwz54LqMq+8A+W7PrGQ5cssY19r52Lqhv4VBxbi0KVy6eXe2
7zo4lnmh4BP8bDnZPuhtxbhV7UcMLfa126THpk3Qm6bOU8W46GYt24b100fa
F873RIzL/neWLrbnpr4oMK7kyuxE515s5owbbD+6ee+KfaZ3nGJGKV9yaBvD
yLHYynAucx/43X73w2b4LcZlm8aQ4ZmFcTts+/63M9n6iHxbxaXS7S7cz/i7
0eG+ndKwbiNW5CcRfndtTGBc+AUuhEnHwbjwjvSEYlyxmI2XBM/x/+6LvRmL
w5yqg7VttswjH1zLezBeiAPZrWeMu2K2w0Fn+mipsJ/iTynelBj3apf1bA4g
y7hi6BhLa5tlXJ3j9Ol38/NYdvV8a9m5l7fnQhi7WK6HwRHmAcK3sLP0jMtv
2R97Nsjb62U3/26CvcJcfmfMorjee9EfDoOMg2+RFOPSjtxDxaA+6Ov1dSv7
v04sqzK7QLHnIHU6jIyr4xlbqw6DcKz0xrF6bTzaah9b6MZ1mmxVMi5sy5Lf
YfvkSrBjrsuLKcZlHZ0d+jGYEZYiZ9CDJ5thCVNgI8q4etwMy/kk6C2Pda8P
xv777VZ77eFqgXMD13e+lSFn6dF3wr425lCMcX0eW8QzkvpQiL1t8gqJb2P6
NtkNe/9OBE4WK6dsd61NM8dLByrGVX5cbbPH8pt3NO/8r2+d7WNZGLcO22qf
VCwLfHVXV+crGTfEe1i7FGJWUSY6ZPqU9sH2GF0w7FrnXcB+6HFhbdummg8o
O9bHSJbN8Wef/j5fh2snz38SePbbcx/kjKv778tkX8ZS2Cnb7SuLHcZ93ouX
wrEpuyl772RzbH9n/XCrj3HxuUWPy1hRjJuxbfa8si1wLjmCZM9hGHcc49Uq
RlUMqoZvG2lYt5HQD5hf0/un816aamW+FrAgfIvE7H+xCbn3qH4cQcbWYlyf
E1fbGNdx3mEZd6fz3i+zX6Rs6W11TZbdd7r+LWJwb8MrjlQZ3j+5jHH5D47m
mCv3e3yLnJk+kl875XjGvdqNeRxj3BiX2vxEiBiX42zZxFr2jCuhLnxLxbhw
ueIgs79tZxj3adA99+JNKeeJH2t7EeOm9KqWcffK//KgRXGgRy2nyh83xbij
2kjvpeCzWrVPFeMOek7aw9sqp1g7+PD92uPPjEF75VimKMSj7bx36NvESkaw
V+Y9cefHheCTS5xl+gTPh+Z/hmXcMMcRYq0W/6cuefzkDtvCqQj+t5ZrGb+e
XszYlvVhGfebpa081pza7sdfvg/sqBjsnnGL7beRtyOMPM58uXz/LONiO8v9
4Z0ZbFJ2N8P5eYamWnf7GPe9P/9z4C7p4z764L+H/0K84K6dq2fc3d0if2q7
ZVz51dr4wlWiPKvSNfpz+L7h+6vvx5ZxY5zsGTfGr2JYdLr2t92Hvh6YNJGn
QYyNTbHiCbMd/tU+9CPLuNy7MD/buTfK3wvjDvI+EON+d+VSmF+Rr3IV48Ky
9IVPjv4+iLj26vyXQR+LoKMV4/pn08auZvnkwWLOuHyXbTvBuL88HiyOovqj
z5vd6w9b+ZJtYty/fp8xA20R7Jdnuz4O0yYPrskVVBhjjih1ObVh3EYklnUb
3n27JMRRRgzjfn9vM7w7pe8sizM1KOPG7GvFYZxPstOdoxwkJxEixmVcMqze
WYzr7X0t4yIxvSP1rfKVtYyLXlV8qXYmTjMivSltI8a1elrZXafsltW22CmT
l0iMTLwpy7j46Vr25ZyWcVUH5dpjuxgXLuWaldtHtsm0DQK7ck1Pf15Jjs98
TvqYcB7KeFMZdxzypsabqsO4XkZldtgLxv1pgDGjbD01Drc6nBBH56eeT23u
b9jl28C6DxbCOrGi4Vx+c+2M2dHzKw+WbCU074NUPUN1GVdxpPgWEEsGJt3Y
Wcvri84ZviWO8GfGRzPofCMxqGKMa9sYvuWdgl0pov/Q1dp4RjHGzfpGZpMo
1h6UaWHpx532hl/lE6F5Bc+4dg6K41TO+xcWg72yZ1z468hHvwtMpba2Pp2W
cXU96Gut/at0s7E4xvY++t82Rpni++2W2DN4frXxv7z/boqVaUfPuOhwJdom
xo2xsBi3lwO3N68U01/DntgRi3Hxo0fHe/uHufbMbLYuxsXWedD8ZvY6OZcY
N7W/bI7VB8S4E+ePty9PnQxMy1KMW3X+GOPik7sc8mRf6Bsf3b01GTg32KdF
7Iy1rRhveyuPB2r/ix0nPS0C58o++cT8/Ww8Od1l2stbhZy40ufq/1Ellue2
av/GB7eRhnXfLsljKYd3UBYngPGCGBfOgxNHtVHmeHTB3hY2Z8f7MyHWlJh6
x9ngpMTqWbXt4U+L4XjFbPLHVDEzukjplH28YW8fbBkXPSaCrrOMb63fMXrV
ickjBcalDKtnpQ5iduW1lY23GLfqfCdP/THIzMrfcr7l3NoOAyPan/GAxgLy
yY4xLuPqXu6h4wXG5dg67DqoNIybljeVcUeRYX2uDwPj2uOxX4exeMYmO++H
yfCO6LEBHJzS6SqWbsiftZtxA8uZVvYdCDGT0d2evVSLcfE5zb4fmZAT19s0
wwHTd+eCb+bS1nKuk4RpbRtbxiXvDDpStqVYDP6hHSyrjINxQ+x/c078OXm3
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
oBf7I5Lnd7U3T//1ytn2Ryc7Y5ClpajuNBX72G6TbbJEjKvzBX3CamZzxXNB
bGXGHPAtEuqO3XHnnuyaORh/Phh3eWst6G8/X8hiKMfiTElnG9h2use4Bz3O
baSR/ZCGdQ+fBL7VHFvnPXXq+mqQcY4JLUeJAz1Xnbzx9/AenujaL2U2TD2d
pM3Zw34wa4pDKV/ciU2wGNfvp28R+/J+17nEuIzVsF/29tliT43RfG5WbPXq
MC7csdaaCt9G6mnbSGzObzu+TPnlKvdSiltjfJv637LqwuypPBaV9LRi3Ced
66Q+XP/jn9LXGuz0uuNhfXtlC4iN5UHrdN90OeyMCwOm9Lh7LcPOc6DLfbKz
GLX/RTTGhknhjAdd3rA+jFX10nMPR8G3sjuw43hxTebP273fnXcdEtPLphjX
cy7Mpxj4sfrxPPv8ahJizGV6o4tZjL4Sxj0/fbQ9f+tMzrfEgoJTxZfZe+p4
Ht9Y9qUxxr1y/3S+r95xKkfxnxQDynNuluusxyJ6r1Onq935Vc7rGdf7w2If
PPnDWmBe9MSecYnvhNhjpFcV44pzsVcmBhXb2Q8f22+WMp61jKs4ysr5w3XR
X6TvFeOyDqcOwrcSz7hwqnJdwYy0ie6/jwPl+5/6Kc8981vWB1uMy7IqZkNM
96mcwl6XO+xzjn3y3NQX3Wtudc+7EbiP33d2prt27xdM/r5+tvWci05XjPv1
lcF9sBDqJcalTnA2/Zj4Vl5/HHy9uoy7sjiRP9viXO4tcaOk19U56Fv416Nr
hnERjRVt/OR8yXhSjMuyK/sZV6qRRg5aGt3u4ZDQ/o5xec+Nexwp5sJeOMVf
YlzWpceVD66+H55xY+fivS19LWMwjk+NxeBQxmDwrWyPdQ7lSBLj8j/15xj+
UzyRWD0U7yplr4zNm3S3ujb5/bKUfbIYl3PpPD7Pks+TJMalrimbZeXdjf1H
7p81l/vIMi52gJSrfZRHMsW4Icek0fdQf8rQ9QT7zQTjKn8T98jfY+zE3iaf
2mHlsPMtMgjjHhbdO/a92ODSvql9xBv0cZjD67XqiHS4Vi8lTth5uhG4BebB
JlXHaJy9+nCm2Bdexs9P/zh/7ZPCuLgO46auQ/anPOcwKMwc5t8WT7Vv3Zxo
z82czHOtpBj3/PVjhThOlCUu5f3JeyeU/3A1j//kGReBhRUbijG+9LrUS/El
kBjjojdW3hzp/cTI03en+mx+s29qJifmN9tz65k9Ntu1r2fclPzrB38oMO6/
n/y6oFe17OkZl1hR1l9dulvLuBoDDGK3TKxtyqAdxLg2R67EM65iUe3u9uKm
6bmXrUMeh/zZ3QLjsk/Kjjd7BorbxLh6bmy/l2TxzrcLMYS9MBeD761l3N47
aKvAuFVMm5Jvb50O8vG3M0NzLnGU4VwxLuVaPa4VdLzI06etwLn2esS4tq3R
3SKfzG3nOttTN3tjRa/DZRnyAmETqDhTjQ63kbdYGtY9wHbvxlAO9iTT63ms
qWEYt8r3VDpKMa5iEsd8btHfWsbl+JjOUT6wqXPCR8QwZozGfql9Gb94xhXf
5jEJDSuKcW28qUHyBYtvrX2ymFai34pFrPPqunRem6tXNtZl+llri53i38zv
t+d7TT4jhNxC1j5bMbWCT9o/0jnsFY809T/jH/ZRnRgPa2xuGdfmH7I2z/3j
nrWGfW17vCaMO2rMlf2W14Fx5edQdY5ge91hXKtDIwaVmJJ9FMdH5y+zuxbj
9vwAs1yyIQ5Op+xMnzof9KC31i61J+dPBu6Fd5HAviWMq3cPnJXl4Wnlsajk
0wuzcr4U4yLKf9vvN3k62B97xlVO3ewbWi5iXB/PmFjHdY5//8Ji+92j7wTO
/dMHv+9jXJvf19sVW8alXyjnrfS6nJ/9tBxEn4uemueVuQW42TKu5UrbT8S4
qg+/5aMuxrX9i/bmN/so3pQtr/gMZP1t+8ndvJ/a58Y+R7aPinPtNqu/VHwp
WNfvgyh+WR29bZWc+PZkXv8yidktr9+ZDowLu6o8Ma71yUX4Lob6v7oX/Hht
OZwfX1vND7ANvmU+Roxr/W/VH2BaL/J7G5eEmFaHYNzcSCPDSsO6B9De8G3I
wddt9+n1fN5u0PFeinGtDY+1g/V8BdOKa7U+e28qL0fcZv10FQPK86EX8S11
iP2v8RLXoNjLinkse2jPgZYjxbh1YkyF83QZ98HmQh67OXWsbTfrY+xtv1WP
lJ9uzBY5xrghZ3xn3GgZlzZBjwvnorsV36rd0N+WjaODvuflve6YtH+/kBNz
o+eTZxkXrrV2zRLLuKHtO+Uz5rnWHQ83ts89+enxrZDnhjyoXg66bghjTemG
XjchjhJ6ydT/Vp+EnsTaKafsUKwPrh3P2/bSb7hZY03YKb/nnWdW/vyDMi7v
EJ5HxrxVfvLPK+LcVjGucsfI7xZmhStXV+fb12+eC7lIWcLB/Kdz2Zj14lze
ASxld6y4x9k+rTyusto4xrj4gFIP2g7+xmYYPSnfTNrXMy58yPYyTuQ/cS77
wpr0hSq2hHHDuTrf6Pc+/0sv5nJnnW0pxvXCfuJczsm54e9h7JXFuMSuWlhf
DYIdPSwqRlWMNWyo6e/Sk8qe3s7FBBvnn3q6X7GVj4us/YvrW93nqMi4GsPs
7vbiPdvnUbrb1QfLfYwrwV9VjKtt9Kd8rNBlXGyCJ+6k/W7rMu5Xp49EGRcd
cSyPT/HZzRj3WvBj7/Vlq19mHQYW43KcZ9xY+bQjfJnbKXQZ98PpVtDPWq4d
9xi1l4+oYdxG3ixpeHeP27ebdzuPMdXl2zM3xx9nCm6ynBazr0W3axmXMdGP
vywVdKMp3WSwMavIJyS+9RwJy2ELLAa2jIugO3za9TfVuWYj9r1sq+Ls/JzP
7rSvz58LYutXxbhiNukjYvbesTaKxa4u89UV43rdsmXc1Ji8TCzjypc3/44T
G8YwLuPf7D4cD9uRvm+/i9HMPWAc3TBuPzuhZ5yeOh5lXAk+0UjZPnvFxXCS
Hfe+ToJ+3MYLRmTDKxZ9bvKr+OPj8V16OrGyuDjS7eLnKe6yMZtt2b92l9YW
wgqMi28xz05dxrVMUiawwez6QsjZO9uNOwzfwpMpxtV1Uz6xYicn/tKeOPNx
ENZl50zeHRgYJo4xrtpBuV0UB5lt7EvMJ3w2xLmWcemTVbxnGdczK7+/+2Gr
/f29rRBjanGjn3F178pEjMs6ulx0urAuOt4PJ1cH4tNxMK5EnEt5lnH1W4xb
1ufFuNauWvl1e/7svdhIxeekx2PX/3/23uxLaiPd1/7Pz8X51vou+tx8N/v0
cu927zbY7Ta07W0mN1WATU1AVYFNDQw1QVFUGbDpbWM87H2TXz4h/ZRvRkZI
IaWysgBd/FZOGkIhpRRPvNOTJacf/+vASZzLMlnM+tPiesr2OYhn9rdLzdv3
+v2LYrnTyTXFaxnjIvtb2XI+4/72+2P3DPQZN6TrX552It+z8kvJL1l5r9iO
lrdcTz7mWJ+6+8Kzg4Jxi5pAjBlzxs38/9obm/pc27Ftp7dZHetOqF+Jv10Y
1OiWn3Jd+y3jhZCNAF4Ts8U4Sj61ihtVnim+494uxuU9nFnmf5tSM9dnSNot
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
fEc+KuWTCjGuzclL/irV7uEzxxfiXQR7co2k5mB2mtt2rFvFuNLs5mbBuDAl
8w4cTxPGRXALeXnlA6zr3TKuy732fKn3/U+b/XOdzU/6jFtcF8/XCzsojCse
rYpPlTSPmm0zq2dLrC45h8W48k9mGfzhyTElxhVba3uWccv4tg7bWl/lXz3f
Llv/p8wnCcY92F0u5gYG94+D4pX5ATEu5wK9/vmJ+w3GjW1bfFvYcWvYbztb
badO46tj3QZ9JsbNcyoTZ7FxsD2U/9hyTt26OGV8Kx9UdOXhcE0ebLJiXLu8
GNePixHjskxqTmPXxnxZMa5l2Ow5vFv47IoFVXfI30+THNRu3/3nGYz7/bMN
p9hymmMQ49q5Ac0PiHH9OGcxrnjX1ac0Nl/Lt/gqi6/sOWF5HbNq/opxYVvZ
e8ts/bbdPuP+1n8m63rTuERMBeMiampeXf2kd2PtnJNfx7Ng3O0vHN+uPtnp
P8OfFoyr2Nxx7bmWwduQ+l++2qhtxuX8sI8qliuT6hlbO/nFzdmk8VddMc4O
5akpE/mUJsG+qYrlpfFrhtrvsvjDwTFbJg1xbZlvs+IKmjIu3zHOV/4dux8/
5rGM+WF1zUPFGFec6/KiP5zN5gD693X8imFPxQJrLqDKXsd9cTWv3aL7hqv7
Pfuh82H2/ZPZl2XckF2WXEqpbBf7jfhc7Jg+44bOYegYba0crhXid1NsrNh0
sed+YGq7lAk7HXb1cRhXsoyreFfZF8WnYlyuD+5NPMNUs9XvAzEu59bFVNdk
XBhu4OOcMa7zHc9jdWmjZVzlmcJP+cWLe268YRlXNXf8ergXN2aHPqfmmfJ1
ael0b3drcC+FcVWXyI1xzHHLD5njyubKl0f6xeaW4lwg5QTLGDf7bfbC+yN9
p5xdnE/Lt4wZy8aWHdd26jQ5vW28O4njKPpHdtyccc8u77hxUohP22BcW9dG
LDa/O1twJAxp1xNnyY6JrdSOV6ztyOa4SmpjvizPWeVV9o+R38RulnFDz4LU
/Vrh7xsbG1uJcVW/N8S4/rkS49o6uDbOWMsWtX/6fQD/DsaBWyN2Yb4X487e
/ntvZuY/ijrBsZpMbqyW28FjYu5i8+j6EOPy/ouZ/1sw7szqaSfLuFbwL4KF
LeMi3iPNlVTZw+Qfh3z/ABcvW+M6i4lxiezRPuO2VdcXnme7a3tXnMZhXPrC
+pmrFswkGBf58YpVgnHr+ClT9xWGqKp7Uyat8/jRty4mNPa7//mnPI+srYti
4wZDXNxUdv2fTI4e7jsbu3PuHMoPM5VxY3VcEP8vfI65tp/nMYQ6DuaZlAu9
jHFD9WLKbLmsE2NcbLl2XkrLIvJEjcO4g+fpqP62tNM7d/eh83devHun9+K7
B0Xct/IH1zmHYtxU/2kE56bmoIJz1cfkga7LtvAS2zh/d8fZCeEiy7hsdxCP
fODucRL3Eltfa+i+kzMusbpsDx/jLI/bKONq3dhvuo7FuMo9pTzM+ApTKwjG
1XZUH2hwLg4cn1fF4Ya4NqWOkM+48LQYF95FPufuby+5vFGW1ePX0sHQsen/
Tk7mZwd3nLQs58td43auJGLD7bi2U6fj1dvCuv5xtHEslm+tHwrxuGJca8cT
m1Y9i8m5hFyuBC8+1Npm/RzFfm1ZrUsbVNNH8a+hXEasp3hQOBDV9asOMS4S
49bJJ5UqagilMC7Hpno+MGYZL4oPFb+s2OVQ/SAkm6EY184TyMao9W3/33/0
de/chT8OMW4o/tbn21AbxLgsq2cu+7lw9U/udzGueDcky7jfrC9ln+983bv2
7a1CfK5iXI2RfcZ9+N1q74eX7dTVEt+KcWVnla91m7HDYtxUvsXuG/rvxBhX
Yj9ttrsu49bRxuGqE+/HYciTzLjOphvxcb69fNnNE7k4C2/f/nZkZ6amlLWt
xo5RjOtfQ3a5QZ76s65eDz7Grrat58sdYlz/N+4Ttr4t1yLf84rPshjXci7P
F2JP5dsLB6IPZxZ6H15d6X04/yCJb/Ehjv0uxkXYSKlrNM41y32ROZlJMi52
Z9k1YdZPbz91mt1MZ9wsD/jAJ9bO/yr2Fe7VZ/3mMy5t4L3Lv3C0XDCuXVZ2
Rv8aKeNfX+Jc/JPfe+9/Oc7F9hvbDrZmGNfFfifwrX1fxbj8fmml/wxfGR2H
ZLX8Ms7N+mDf+UvzXozr7i2Kn4rE5ZbZv+FcfJa/P1wrzk82XszHjco11VeI
aTuu7dRpOup4N7AdY8MlFhe+1f0xVMu2zE4n4evq863Y0TIu/MXr2dXVoX3Y
MYh4SPGwNv41tG+xF0zC+Eo5go9bMGJKPmr3DOkz7sLCmcrlZMNlbJiSy6ss
n7Ifu2v9YuWbLZ9j379Y8w38Jsb94eW94hzRripb+n//epDH3w7PcXBeN+5c
7r042ux9++jJEOPGFGJdWPjq7f42+2N4NLd+e4hxWYY6oDDJ4ePVIWV9MOA4
7E6a32nTR1k8GxJ+nm3nx4rF4oYUY1y3nby+kXLf2t/IceT8rCvyfwaviZxZ
jvK8w9S+Ofx+lHHbyieVwrgpnIm/ysb6gmPGsu2EXhHH669nY2Jj2wzV8/RV
h3Gr+jarF/TELROy89rr2tq3/Nzeei+/d82PYMN9kc8fsS941/cLUF7cGONq
n2xPMR0IzuXaV/6r3/tcEGLc8wsrveXN9d5HX3/TO31htnf63EX3fczfl+do
iHFVI3dt/6nL33RwuD3EuGX9XHkOmL/t90GoDm9I5J5STd0Uwbji3MF1dOgY
F34tWxcWJv+uZdzQcchfVtexbLLkN35q/vN8Jzsw29N6dq4jnsu73I9ZftNs
n/1+efXLgnGrtsE1lcXSXI3yrbg2xUfZxu2KcTfXrjj5+4av9Z+yMbfL8586
+bG89hjK+kT9SB5MMa6L4er3jY3DdePHPO9Ux7SdOp08vS2sGzqWusfj5uSI
rcgZd/3J01IboRi3KreM4nmVgwmJE8RmlnGph8tv1j+TdsgeKX6K+Qn7kv9T
yrKTEPtOYdzdrfkij2mVFIurHFtl3Gf7V+9t/LN97+rymLbKb8zG1dp6wfYc
kHcKzc39zZ2v1fWLI4wLA+zcm+u9fH7Pxdy673LGVa5uXRvn/vP/DjHuT6/2
Kxk3JLe9tXNDjCt9vbno+Jf4Q+QzrhUcTI0c7MHi3/B4qf414nje+G1avm07
3lfnQeN8PpcxdJa7p3488DiMq36EC5CNxbU1UttiXM2Tabz806vRZYhLVL6j
UAwq8az4YGDDrXOM9n2IcUPLj+NHLcES7lj67ab+E9efavhW7cMybtk+lX+M
7Vb585cxLnwLh2Yxk+XzDco7bxlXnPvs4JvelYunXJ7l1eULxX6pyetyxfaf
gbAsttsQ4/I9r64Oz1x6DiryC7Mv4nAPv38y5JtcmTcsMqei64/5H3yJU/JQ
/fuZv/X+dPqPye22NtniOn+dcSm+xynrwsModGzUt+XeLoa2jCubrGJkVddH
nBvi2ZS8yuE+zhjX+ZHPn3W+yTBuiCt9ZXWbH7p8WVW+yik1g/xlvty8lNly
l8+7+Fp7jDBuqE4vx8PysWOtOib2QU3dX37Zcjm3sAkj/kMf3TK+fowdYdyK
eNxOnTpNX28z71aus5jVDirW7zPu8u5BKeOKRVJ8ln2pnivsC3NZBtO2lZ8f
jlJuZ1vfhvc2XvQkyM536zhpe0ps8MbtfxZ1UVLEs5XjT2Vc+tT2s2Vc2JLz
MZo762HR72JfXu22j/K8IGzD8u3s/Kkh3br1eW/x2pkhxn327Jvegwdf9Rbv
XXFivcWlM45vFxcu9G5+leWGRIyHiMdtwriKQZ7fXegtHx46LeznPgOGcdnP
Uf+ZHpLPuGWqe934jKs+11i9zZxTbpwTYNzQXBVsodxuda5NlLHDXNTPorKN
OeP6uaYs447VB7/FtxvyKZYdFf61cazSSWDcULs1fxFiJWeH/XG7t9Af15Nr
imMojud1+bbL2mEF49Y9N6/yHM6/5PmBYowb8zfFNouUV46YW74PMa7zD7mb
5WVyttr+K5+RtVViv/UZtyyHE89R2XUt4zadp4gxvWXcSl/lhoyLfU42U2IG
LOPyzIOBq+zBoWMS47LMF99ky+h/ZRlX9lzZcOVPbLclO25q7ikkdqb9HKNl
XNmJnwb8RyTubYpfqWLcy/dmKm24vj8zrzDu7PzpgnGHr4k8d9fPo/Zan3H9
sUmorlDWj/vuPwHjop9+vufqJy3Nn+s9uH+rYNzi/OY5pzrO7dTpzdDbxLrJ
x2MZt/+eXFPyg620keFXWiM2VfEyYtzYdrH7sn8xrmrfyq9WjKu8QW37Ijcd
mw8f60PX1pT+mQTj+jWC/D72WdVnXBs7axkXnpWvuXylxLjkV5659H7v9U/b
LocWdZBu98eTlnGZE8aXis+w1rWZD4cYd+b8+72D/tjixxf3e/OzH/V+eL7e
iG/941zdn+8t7F4p+LYq97PPuRsPrjjfZ7Ewn/F1LuNd30asnLXTlBh3MN6J
j7mb8G1r7fwts59OIhZ3HMYNraO8xPiBx7ZT1gZbqyeFf1KYsw7j/uvFvaH2
iyVj+6rOZdPu+Qn9XlVDCLbFRlvk0Xu50ZtbOdfb3Vp0cblwcIhxmWsoY0YY
99Rn/+kU41xq/ChWlnzN/nE1tcW/8nwM+G+ksur7lxd7f3zvfzdi3EHsa5aL
GMZd2RswLuIzPspljDucI/JJ0Ucwbogpuc5svG7snItvZQv2r1HVGlb8L+0W
43J8tAH+Vx7lmbkZtxzH5fPh8Dk5KI4rm/8N86rPuCl+y1rm9saMe+bcvDYc
x8T+iAP224RvccyO67d70H8DX2fGPsQ782wX4/L7R4tbI77KjnEXtorPnTp1
enP0LvGuY9z8/gXjimVijOTb8ZrI+r0i1bhlmzCtfJT1O7/5dV/JbyTGFZeO
Y/eC82hX6LiopXT+Tr1cU9QDCjGun3sZxk3dps1HXca4Ift4yL6r8xjyqday
ITu0ZVwJn2vieNyz1jDuw7Vro+sbxl26nvEv4rPG2mLcJn7K0s08HlmMe+Xh
efe5yTwG/wmuN8u4yvGML/Tew4UhezDvQ8wr0Ue+ml67ydd4n1kfBM5HbNlJ
+EunCO6DN44a1A6KHk9NthDbKsew7LjBZeHc5fJcXv7+Q3mJ/TxOdY/DsnJI
oXXaZNzYPpQvHFXZd8uOL/a/9Y/PZ1xX57e/Lvcc4u9Z9vLGU8e28Cq+ytTy
iTIu/sl9Ob/lmYXie2rrXFhfjTIudlbsrSlx02WyNWaH/ydPnX0tiVkX9hzn
/uXa2liMK2bM+j1jSzEu7eQ3YnBZ9/buIDefzgXL2HxZLMcxlNlNfcZV3K6N
xQ3lVqLtai/PXeKEtf9PVp44sf/3L8313nv///Q+uHq7qHnkM24of5P24+dW
LvNNTvFZPrc2XzAutXnZD89Hy9X8Tq5C2xYYl+eOnsOpkj1ajIsd9+jHVfcq
xuX6QfJVzuLbpj+27dSpU3O9baw7ckyGb5VbmWdBFeOW2cCKZ0LEhql8RXZ7
GgeJcX1+s3G1yn8E4/Je9XQQjDsue7P+Vw/u9m7tbfQWttd7/1jZLBgXpdYH
+sXkfVA+5Ox5Mli/Dt9yfOqXKj9ln3FDcblZPtyrbu6AV/+c0maWl2+zxpew
j+zr9hxbxm2il/2xtWVc+BYW/uziv9XiWts3N02tYPkto7q5tpEYl/d2rsXK
Z9yQ9rdvFO9DnCv+bcsfemg8VoNxp6kUxm0rJjfaV4Zvb+w8dfeCGKscB+Mq
jlbLlh0/tXr8+YlBrmLVCM1r1/SvCXwrYN0UG3FdxvXzqjWJcZFS56aUD52c
Veprn3Hlf3zqq7suJ9Sr17vOtzjKfB7jwrdnV7f7z4cBY7L+3JWPe2cuXkhi
XOUXrjoe2+d2W3UZF4770+dfJDMu4wXLebCVONfa/yTLuP5vxJAqpl2cieBj
2LPutQCDll2L6le1X4yL/JzUlnE/Xs1sy3Cuf+3xzMN++ur14DqkP/w8yeMw
LvV1kauT1N+XGJc51MH1fTXIuKiKceWrbHnd+nvDurAtr8+f33Ga3dzNxogL
Od8qr3LHuJ06vTV623hXjJvN6z5x83I2B39oHK/xSQrjhqTat5ZHVAuVsVDI
h1m5lMWuypVMW9jWysFGkcczJedzlb5/udWb2Vh3Y1oxLto+vD9SoyBVYtzt
g1XXZvmA1mFcv0ZtFefanNR+/SY4l+2Jd8W4+IkP8vDsFrV1LeMy34BtFzZO
zRudIhjXj7f65cftUsa90B8L4DPo94ticXm1/VDGuMyPhPJ4WOkapC9uBnJW
q65SbH3Lt5Z5QxIrV8UAx/ykg+Mbz1f5JAsOgRlittPj2H8q4yLiceFc9OL5
5hDvxfO+Dl5D3Po/xoeibcbFXkstYeY8iDnX7/4xxvZj2/KbOU5//TqM6++L
/5nmlWqdu/51HurzF0frzlf5wtxikHGjOYpzvrX5pizjnl9bdhwAVz072uqd
Xdl1nEfMKUxV55lRxbxiTN7Tl3VqCNVlXCR7qd+OEOO69v1e/kzg+mB72H3F
uKE+KOsH+RLH/lfW7i3f5OIa+NewHfn92ZXen//6B+fPTRy2GNduT77BYlzl
m1LN3JR6t3UE4zInYPtYjAvXsj/t8+HR8P+DeCDiv6vuPcPncnQ5ziOcu7k+
3zs9tznINXXjYJCnNI/JnfZYtlOnTu1pEnVqp6Y8HleMi68yLBdjCjs+qcql
FJI4zebWYQyz+3y7iJEM2ePEuHAIzCKJcS+urxZcV7dNIYlxNXer7+uMVZTL
h36CnW49mndyOYcDjFvFVzHbYcyWaW2+PuOK98S4fJZdHMG6YlytA9Mqr/Uk
GDckGNePx5W/sWVccnJbprV9FWL9VwEfgxTGlWKMKzWxE0s+46aoKhZYwoaV
Wh/3JAi+nWR93DKJcSXyYKWMF/lv31y6PMSnIzmAyWMciXVWXitXI+d1Vp/T
jxkO5awKtS1kgxWPjsu4ofaE2oA99fr2F72lRxfc/6IsH/9IXqX8fsR/97sf
a+T0CjCu4ibxYz6zsOYYlxhcxczKp9XnXPyYP4BvGddH/Hl9xlVO4Y2D3d63
GyuOOSx3VIm8tnovO96gjw5GYkXgxBReJe60bu6pGOOOqxDb6hqSvTUUD6va
UaF1YVfYGRss8m25SHbcT3L7uxjXt1/bnNJw5Iv/2nRcy3sxLvbO335/PFTj
vEq2RlBM/Gd8xr27fsnJr6fuXx/E4/7r+b2RPivLyeXbdeFpWBl7sGXc0bmf
jHOnPo7t1KnTRPQms26RF8/Ux+V5Lsadvf13p5nVD4uxOxxU3BdrMm7Ifss9
GpakJi98C0/CvH6NIfG1rbGr+nQIX2LxzDh8EVJT27Ady6mWrV9Tx2dceD3G
WdbnNoVx1U/WdiufZZunWjV0+U58a9vIs1zbEeOq9nBqHacmIv8ysbh+PK4Y
9+ztVaf/WNrvfXnv4tB1YudSeA+Pym/Z2asDYyfOc51rh9pHm0fXg/3f9jXo
K8S5fm5o315MXDR6Vxm3Kk+Rv1+Xl+nngf9wnbhg9fGrn/d6u8/XnU011bda
+5K/dtmytE31jCxn2raGbL5annXJCW2/q9uvVYyr+zT39f9pMC/aiHEjtYXE
uBqjY6+zeX0/Wh71VS5j3M+/3e5de3Cj9/T7HccI2A9hKMu4yDJZCi9u5nWn
4Sn3HMztdsjWNdB95pOVtPxTfz7/T2fLTVkWmyZ26NQ+L6tTG1KMcbWtmP+y
GFd1beUfLa4V53IM5LzinMKzuo+w3eLcLmb+24jc0/b4WU/8KMb9718e5W3Y
d98hOJfvXA7w3MZaVR+ojHPZToxHb64Mb1vXgW9Th3ND8cn2deQ/Y45NjMv/
Bb9srnNEf9G/Be8u7HWM26nTO6I3jXetn4mLs+B9Xx/ObxZ1Xy7O/6VgXPxs
Hz8eMK7zve0zr61/W1aPVjZaxfnq/izGzeqnDFha+ZNVw0R2W3GKOA2+VQ7j
OnmepTKGbcK32PiQjoM+EePefjJX2D7r+Cnb/k2149JflodtHK542zKzz86K
0/VtwEi5vSbJcmJc7RNbLYJnedX359bmHOtaxhXn2vpB8hOQ71pZzswUcR5j
+cFv5jbvSfVNqkKMO+021RH5e6bhq/w2M67PIsTiyqY8bh7tWDxuiHHr5NZq
4z7D/10MZFlGjBuzhTq+zfPrxBjX7kc5gtkXNl0UY9xBvZyHjiWU+8dn3Fgs
p563jRg3Ype2jNvW/ylcq6be8v66YlwUOwYY19pmQ3MYLqdyhPvZNm3Bpsp5
gQOdsHv2XzVvQpvEuPefz5cybsy2q9/YDgr1h8+4lnOLZfvtIg9zld125Lv+
ej/8sOXmvLDfkr8KcXyMZ7YOd11/DjEuMbld/aBOnd4pvSmsG2Lcv9/Y6n33
47q7Z4pxJT7DuEvrXxQ2XgTjKveT9V31eVdcKnblFT6Fb9HFuztFniNrL3bj
MMNZlhnFYsTnxvxmy+zNyp0UHRfldYzqPtM5Vs0ByOZJnC/jPMW1VjGu4l79
71L41tpmq2y9IV9my7jsF5u0auYyz2AZt40Y6JB8xvUle65lXNp30xy7ZXkb
Q/6yhVqrPuNattZ32Hnb7hf6XvM+ZXNKI9fy4V3nAz2JczUJUTsI/+C26uKm
yuZ+gnXh3Lp1X3xbOf+fh9+tRmMYfY3Exnlxu/Z7+7nMVm0ZeBzGjdli6/qz
VvWl8vi2dV5hWMuxyisk+16Qcftj+FPnZ6IMdf7uTjTXrn2tOs/KIZRaU8bl
3M1zGMJ6yXmncv9SauSUMS4c0yTvRPxcR2yHDc4vnGXZNVXZ2GxUKYyL7zic
S85h2Vkt77pcXL9nNs+mjHvj8Xkn8o7HxjJzN/8W3KZlXO49Nj9VVb+/fL7W
+/HFPedLD+NK/P/ww0ZiXHwT3LWW51jW9aT+7dSp07ulk8q7yjdlGZfvZjd2
C8a1PCHG5fXr5Y97lxZPFX7Ml5ZPOfFe85pwENzk27Kecv/sj9ELxj1ccc8R
9qtaQIj3PueyHvdaeNbGmzI+YH/2ubD+5KljZhixjHGrfG1pgx8/ptpKZeuJ
cdk+79WOFMZV/VuOK9R2+qGsvjC6VRIrKlk/Zdl5Y8upD8S4aovmCMpqFDtW
/7X+WKaMcW1MbqgPQoyr64n2WN+DcUQbNedCP/j/GxiX2N8mx192baUwLvu0
/6GOcdOluFXlU4IdaUcqxzHODDHc1tFG8ryEctBqn4Pcp9mrrfGj7y0L27aG
fnP5oX7cdozrtpHoR9wW41afg3qMm7KsONb3kyX2MshGEcaFAee21nsbT1ed
bB/AhuMyLnZcVMa+Yly4qy7v/bHPdNh0Y7/bWNRxNG6+BtlqFZ+LmJdowrhD
x//e/y7keD/PESz7tQTTWcblePBNlq3VMq61v8KpdXJMUSsIVhXjxq4batb6
nMs61s+hinEP928XNlr4VnKxt2tX3KsYV3Hh1DOWD74bQy6a/Mod43bq1OnG
yeNdx7gLg5pBYtzQWN3GABWM22de3iP41gpbrxjX5i6yNlHiTpEYV9+7mnaG
d1lHsbpiXLWP5VSLyObfFOOWPWPZt+oVjYyX8nFcGeMyF6DYVDtuVe0j/KbZ
DsceYtUQ47qcFv3jEOPyXj62WibGuKzj2xHLxLHTBxyD/JhtzK7Ou2VcW7dJ
38X4FsbCXmoZl/gm2k6fp3Af9XVZNuV4bJuVk0zfKQ+V+rgtxtX2LOPaXNS2
rzVmG2dfNicbKvOHdrlASxj31avx63ZOUhtPppNrCr1tjOu+6//f9J+z/735
uc9q9Uvof8s9uw3fCAlW4N5EX1XV05ViNWQlG4eZyriObxe2Rr5X3Rs4Fx6w
/VPH/qk2w08I32TxrWVc2RCze0rGNsR9skxTxi3LPdUm46reUOo6/rL0z7g8
C8dKlm8LX1tvHd9PmzZxTYpxuSZ59WsainHxayb/sl83NyTylV19cNWdY2ym
oT6QUhgX4W+sbexvLzkpZkWMC8tKuw++KhjXHrMYl//i1/fNmNX6Knt86/oz
t/FOe4zbqVOn49eJycu8mOULUI1c7kvkJ0YxxvX5SYwrzuUVvpVW1y8WvCs/
4+LZZXIr2XGBjZNkDC8/aPnEwotwlVhLbKEcnCzz6HlW6yM2rpB9r4xxFUNm
Y27UbsUFsw2OiXbYPlN8sBjXtxfHbLhiXHGy4klDdmMdu2Vc266YrTfEuL7/
sj3n4mz1P30fYv+h/svH04x7Qzxbl3Fv5vxelW8rdN1axuVVjF22X2yvqX7G
zLvQj2zX/j/03vJtFeNmcXnxmHL9H7L8tDsjOTX98aWbX8n72Wdcvh83JrlN
wdt7z57m8aRPS/Pd0PZJ5HoNSe2xuW5Grhfvu407l8e23cO3sTmIlyW8rf0e
5Ll4LNe2wbih739L9MGuEs8B/ks/vXqS+wPNJa9bxriWk7AB+tcd9WJG+KjP
tmV+yuQ1Yl2fcescr2J3y/6H9IPPuHreze3MOs6uy31V+ZV1bHXPXxs+ycSv
w9jMIdTywfbss76tFrk6iXCZVR5PquOO5briPq/8wzCu5l6w5b56NXyMMO7g
mn5YzFlobkJjKZ4ZlnHt9YpCsQc+4955suRkl8E34/qXp509V4yL4FsE0/Ib
XOvnVPbPG7KMO9Tnfh8yHyTGJReVqTfUqVOnd0/TZl0xrmy5H93YLVgnxAo+
49ocRmJcbLziXj921+asSpEd08vfVIwrDvRrnhJTFvJ1Zvy0dbRbtBd7ZWg5
ZHM2+7ZgfuN5J5Zke7I1i6Xc3HW/HUjbsdsIMa5YGhujn1s6xLjyEw75Fotx
ZeeWTZh2ajnZ1OlP7dcyrmoc8Rs8a+22bDPUb20KToAzka4/agXVsedKnBfl
VU6xC8EAnGeOvSrfDf3INkPzHLzKvyBlzFjFuFYhvtW80e+5Xzz71/GeNMal
PxD2WngMpr2ymdnYqmy4x8G4cKRlQc3ZlNkr1SauXa3TZptStkf7GBuHOPin
V/tD7USrS18k7z/W51yLqdetv57ddlPGVV6gQ+c3FPhfGMb1jyFaX7aCcX1W
bir546b0O/6jPuPWqY9bMO7nXzhbbug38jKN898q49mqeHTuf5Zxy47B2mZ9
+ywSz1quLd6XsH2sbWJcHaOOpWDcX8p9/Vme69kybt2+fflyvTc7f3rEFkwu
KvkZIzHu2vaV3v7+jYG2s2e2ta2HGFc1jnWcnIsPbj7Nx6z2P7LnMe7ecO3c
/PeOdTt16jQN3uWe/8HcPScxLs8Zv06t8hL5cZ42Ltb/Hsb99u6l3s72Sm93
a763sTHvGPfZwZ3e90drTlXMC+PyLIAjxLiyl4lPxZC0m1dYLcRfjJ3EuJY9
wmOv3WK7vGc8AdspJli/yTYoDvVttjxLUhkXuVyauY+2nwNZ9Wv9drI/e178
/ErIMm6oNpEYF96VbZtlxb8hm22T+sh1BCfQBsu36EYkbtiXn0dL5yGFcemr
VMZFlnHtPJDyX6X6p8IJdfJIjZyT3FanuQx7vCctHhcGg2WbMG5T1bFNvemM
a9fhOv7d/F/pB5eT9tlmLcb1rzO9b8q4NnYFPuU+hU0K2+aveax76rYcGxsO
scI2Rx1b7NqpjAvfIuqnpjJukxxKyoVVxEhXXKN2HxxPY8aVv27LjJvlaGt2
3VOLN5T7OMSw1j47YptN4FkrxkLEmpa1zcXc5MfFslyjvNcceIhx/flx8aRj
zAom9s+1q3vVZ1x0eeYvjnUlMa7zKXq55XJIKeYWzmV9/qNqj+KH/TYV+/3l
UVFTl/8h/x2pYFv1n/jW+CiPMHDAp7lTp07vro6Dd5V3yvHtjYNi7m31YGWo
zg/8xPjd59uY76jN8yMOEuPCvFncx2zBuIcHa73DJ6u9H56FfYvFuMzvysYp
P2Vrx1WeJ5ahbZbBGP/47YwxbpYDdaHwGbZ5lWiH/IFhH/EtsnZR+1zSZ+uP
XcW4sr3S58rPJcYtcqDm2xXjut8qcmzVkRhX551jLZ6BE+Zb10ce45I7mZpB
5JtCZXHHoTrCukbsWDzGDJwDxezWGbvr2tT+1cZxuLVyHJTzBv6ilm/VDi1H
zVz802LH3DaPVSnEivgqt1UPN6Q6jCtbsY2H5bU0d3Heh2LcSfStixWu4Rvc
JuP+8F/3Wz0foZz1ysnHPbtOzqIyxuXeG7KVwlRl7OPqBkV+++rBwYhvNPtW
fVTFy9rfQr7UZXViq1TFt2W+vh9cvR1k3JCtexIKMZ5/Pt6/NJflPTaMG+JZ
y1FNxPjH/48N52w7KHIuYeu1jFvrmEv8gvV72WfXtle7BePyXGFu6PVP2+57
1S3MjmF/KEY4Y9zs/6E4Fxf3bvIyFLZdc244Jwi+3Xu24/ohGz8axlU/Yq/N
Y3WHXjvG7dSpU0CTjN0V4yrfFHNu8C33NbGVZVy/7qgU8mG2sbO6V7IN/IPF
uNub13vfrF3tXVn4pGDcfz2/V6i4z5ttYF8UR8C88B3fwS6wqfIzyX9Y693a
2xjh2xjjymasvEViXOVEVjynGNfFltq6jxH+E+Om1sXl+WXPgXy2ZYe1+6Fd
MFnbLGXnMXid9LjHSoy78mSlt3x42Lv6cLlg3NA1WMW4Nz1bd9m+3dxEQy6R
n4Fl3EnWEbaMq7bbeDFdSzOrp3uXlk5Fj/+4GdcXtlyEDfckxAnTBpjb2ixT
c4b5jDup886rs5uZNvryGV12V72/d/eK0+LChd6rl+XzOW0zbkhNGZdjitnG
YoxLjt6mjOtinXNmgRXkhyrGFedil26zBpJVjHHhMBi8Kp4VZgzZqdusG1Ql
9gU30d5Q+xCcC+8OxdNWcGthcwwIX2j2R/+x79j9Rs9TMW7TPNHKET6ST+v1
VhGH6+cRDy3P/vE5Jp5W7TvMxyK82uWtHwTHR74qGFd5pLSPV68Gtnf+c7Fr
NWPdnSK3tXjWci19fmZ13algXI03c9/laY+pO3XqdDLVJu8WOQHstvvfXV6/
lc0Fvt4eYgjxlBj3Vh7b6PvsKk+TXzNVeZlgXJhw7WDNMZkY99ziGWfjRXdW
Zhzjvnr5sBDzlPJbtqwtxrXjI9W0FePyio+y5Z2QL7PPjGJc+SHrOIu8wP3l
VfPXt0doPtWyTRPGld+4bJA2h7H8s/XZMi7tUb7fUA7h2DOdY/KZsQnjytd5
nLEPnODmEfp8axnXzy3l51D2edYeh52Tqdp/E+YLxUizT43bJ6Htp5u9O/vr
wfYq3zN86zOu/AIK/4MTwLjyXT5uxo3Zd990xi1jX18v+/fcxeuf9jbX53r3
H6z2nn03uLfIR+A4zwn3y5R6wn6MpD9GL7NJljEuds5TlxdLGTclb24q43KP
SK2fjLAj+gyLTVjsbZeN5Y2mLix+y+Myrt/HoT6P9QH7GrLd9plbObFkv63i
WY6Pc4mwseJHLsYljlTMz+/0kWXcqj7PGPDJSO7JmGy+qeE+2R/pD8u4KRLj
Kp4Wwa6WcdVGcjRrPEB8O8ddVct5iLF/H82HbT/Tl/71R58znvz8222XSwsV
dYa8MWenTp06xTQ27zr/kfvZthYGc3H/vDdTMC5jY3tPF3NZThDz6f5vcxEP
P8ceFjV+FK9q2Qv7Md/Dt9h3sfOi2yvnC8blFba+/+hrtx9q7SK7LzFudo9+
5LYJ3yLFuPp1e2X3tbZdMQnjf7G1jjUUqxziOeWD9p+NqYxrZRkXX2XF/v5k
/GiP8ni2oi/6v4lxfdtyKL7Wr0tjj0+cm1JzhzaMy7eunzzGRSHfeDGurdkT
8mP2GbcsHruJ4ADl+bIx1Zz7STJumSzjwrdiXL7D7lWH+SctGIpxGHG56Ljy
JqPKGEjDuPgqw75V125TJkxdz8+R3Abjcm8hbnt3e7l39fql3oujbLxelge9
avt1fUuoxYlSz38V41YpFP+JTn96djS+MBccRe2YEOMu718q8h/z+vJf9e+F
2bGEfxPPhWy3YtwQ59LmVMZFdeaZUs5V6LzQzmw8M5DYltdQDV8xKlIss76z
24br6CfLuOG2D9hT16qdy6pb702My3a575fdW3TNps5taCyBHTfLobHprsMi
Jvi3UVuz42CPcf2cU6G+QHByjHNZVowbG2PObg7suR3jdurUqYma8G6WCyBj
XPEtNchtzKUv7v+hfMvYZnXvjdWTgY1CuZckMe75tfnerb2b2fJ9vqUGry8Y
19b+WXw4uKfzGQ6mHWJc/1ntM67qr4aYh++s/ZjlxJqW/9hmrA4R27CM2YRx
YXnFIyvnlc+4vvgN3qK9lrHUN/7yVTmcQsfGtn2buPJd076mrHt3JRsnLuyv
OsG3Mb9kZPNQ+XZUmyeaNmmeg9fU9sTG8S5mOfCb5dum/m3j6rfcV4144qu3
z/QuLLw/0m8niXGR/IPltzzt9tj6tNJBRa0Xrgeu36bXVNVvbcmPOXT7bcC4
VeL6//Xn/cK3g3sY72P/izqMG8wJW5Nxv/gmbBuMMS51hrDNwrIhu63PuG2e
M3jJZ1xsZ9gjVU85tq5vL0X/fuZv0RpCk/ZXlh3atwVaxrXfU7MWTg3xbJnq
MGrqfEzh9x+41njWEidiGZf7BbyIn7DN++37Jqfte793d/2S41YxLpLd1bfF
sjz7p7/LcimHJMYdykeVr4fvMudEttsR5Yz74a0sXrfwae44t1OnTg2Vwrsj
fsoLA8aFD2P3O7jIZ1xYAcYVQzF+8WvBIptf2Po285vyI2u8Lcad353tXVi7
35vbnnff+6yLj7MY9+LdHce+ahccxzOaMdtQ7d3cpql4Y3Gp1lM+KdWptTmc
OAbVCIJxxU5iKrZTxbji2zL2K+NWy7iyEac8F307Yig+1NptUxmXfvYZF7bi
Oe76uuG4mLq4Lkf10XV3jNZv/tajy1FW0/nQnITNSaY+q8u4soX5+Zg5TtoX
s9FW1a9tU35+NGT7Psa4Vin5picty7jHve+qa9XWnX0TGbfuNn991f/f3czi
dPk/Wt/luvvlfyI/C/53/A9DebNgW8XUcj1WjcVt7lf8PvVdnfZ9sjIas4qf
smPcAPuJcZFqzFnGhTvctdx/bTsONxSzqny3cG7ZuiHGJca1yE1cwrhtHUdR
byc/ryF/a9em9/7XUJzwcfl0wHR+n8WuO+y1yrVs+0d5xmzuZDEufsXIxvm6
1/5y2t7I/2fE937f1bhVXXbWE+e69vS3VeRuzhnXtdEwsJYJnVfqC5GbECk+
N+SLBONy/bN/rj07xuR65H+ysLXtJM51un5v6uPkTp06vfmKsa7ql7n3fb49
u7zjpJjG2P1fdWlt/KNfK8dnXJ4Rqr8iRhGDKNbVz12leF8+w7diXCsxLq+n
Llzu/WPmSm9+5Wxhj7WxvP5ziueA8gDJziZOUtsUB2vXszG+CL5jXTFuLF41
q/OY9YllXFfrN6+ha5eHcWU/doxt8iiLo2lbk9zGsrP78dL0Bd8pr1WIgXw7
t2oqhWoMj8u4+Hpaxl16PFPkcZIs1+o937Nvnsf0k3IviW/Vf3XaxXGH+K+K
cdWv4467qkQ77LxEiHEZr8hPOSb6sE6+3kkL+wc2GEQO5jr2mDJ7VkwpjGuX
KWsP1y/j4N+PIf94W8dXph9f3O/NL844+26T/ZYxrvK7ZcyzU2uuJcS4rv5M
n5s0DxGLj0TsL8i45y72PiC/kfc9cZ5oZW/D5ZkqY9xJKMS4iO9TcoYH/bL7
4wHHuAtbQ9/bvMFtM676PuYnjn35z3/9g7NX046sltTk/yP2P80xa+zg51hW
3BbXlq3Jk8VkDRg39GzIcj/tFfV7XC7wnHFtP/u5jiXqAYlxWe/h0UKRK1mM
y3LykYetZY+V7FwDr9QdYpvoYHfZce7t5fNuXyyT8flgDglpXEe7M5/wwdhT
8y7EMXPuhhi3s+N26tSpZQ3xbp9r37+ymn3ffz+/ld3nxDEhn13lVrLxj2JR
8ZLu6UhMxzMC/sEX2TKk9f0Vr/jcIsaN2RXFOhyHGPfS4qne8q3PegsLZxzf
fv9sY4h3M+Z9WByHu7/ndXok2MzW/PGl55kYl/ehurP8Jv4T68C4LCu7W8y3
W3WRLOP6asK4shH7jKvjGYzZqhl3klJOZcbBYlT/evFzTandvPqMO6142Ekz
Lv3jM65kj/nZk29KGVfzTCeFcbn+yRtm9f3LrdLatMPXcnttYZ+yL6tmbhUv
2pxTjsMC64xrq2V9tcl+Z+NzsxzKT4r+aLrPVMYNXT+KZ1A+A90Tuc9qntFn
3FTOZfyM76rlMZ9xUYhzWSeWwyjGuIht23lT+Zm0zbjid/udGNuPDU6tY4Nf
9ohvdoRxJ1nDC5XVPRLjYs+Fs0LriwnbjAWxjEuf8pnrSIyrOWDYFKbkvWVc
2UftNjUmsmwpxoWH5dssVc0nwKPI2WcN42Y5k/eKfYTiwMW41LbYuTfn4no3
1+czGc59dnCnYFx/G9k+dI3um7jng97Gwa6T6j3DuPxf/JjcjnM7deo0CYlv
C9tu//n29xvZWJjxR8hXBtttrBauGJfximJuletYfr4rBxsF49r4VfGJPmt7
VXGhlnE5puXdg4KbGTuJccldJSl3FXI1ealV9PJe/158uWBctonftXJoxWrN
8hvtVJ0ivgsxrn0m6rONxRXj+hwkNub4YuekSsH54z7f0sZYTQ7xdqy/6zBu
nVw3IcEI8nnGBmQZ157/GOO6WsF5rdi2xj91xXmbNDPyn/PPE8fvxzsSY1nG
uLJ/T6uvfPmMC9+KccUunN8y25XYcty2sE9yPWtb8GKVTfk4GFdtszYm3sv2
nfFt9r0+j/O/dNfa9XIf7ND1zv5Ua00+FMqzL/8K7lfEWJJzAPk+ozGJB7gO
qGnCccouG4o3tipj3L9+fiH6m8+4fjwuzIHGnd8KMS7HSQ6lpoyLfMbFN9jl
Lj4mxoWLaK9lXOWNwh6NmKfg2GOMy29tMi7745Xzqr7MbMf7bs4C6Tksxr3/
fL63/XzJvVduZJgz9IwV49qcT2JcxPeHkRh1fIz97+BRmJb9Ox/k/n7FuKHj
Exdv3L7sXmFc9Kp/T0Wy24pxWQcGvv7laSdde/Q5TDuwb+8X+ax1XmBc4nSx
0TM+s4zrxqDHXENI++3UqdPbLz/XFHwrxg3e+029WetDLNuP4lptTlv5IDMm
2jhc6d06OhzI1RyaG2Jcazfk9xBLq2aMPy6f3dh1dYj4bP1lYVq9F+N+vfzx
UDyvGHf29t8L26AYV5zk9wfPEMZpLBuKT/XFNlR7KJZrCg6zzybtQ/1p95Py
PIfLm7Ad+xJzh/q6zraajKMZ02GXgg98xrUse9NcI/Z7P69yW/mdx9EkcweJ
4f3/C5/rMi46CfG4kp3P8POWEw8L2zEGhz0nHbvbhHEVj0uupZRroiw3clXb
2mbc0O+v8jz72HGJza3js1zGuPKd4X8vn1Rbv7Ny2x7jMv9hOa1sDiRqR+w/
I0+dn4kyLiLvt7YTqxlE7qmm11wZm3OMHCusKraoIz8nM7mVsZuGjrMOOzcR
1yX/Y5sfWb+tLp1zjLs0n54bMFV+PL0Y19bKVQ4vOM6OBcSjYlyu3yLvU+4z
HJtHDuV80nu2qTrLI7mRDef++mrXMakYVz7TyNpY52Y/Kpi2sP3210XUqchq
VWSMS61GmNafU+H8z1543/0uxi3OXc7y+BVwTTEvpetSjGtjxgvGzWsbT3Sc
689ZnYCxd6dOnSanwk8Zvs3rlfFKrib55o7cj/P6r7ExsVhWnOrnvfUZF34U
49rlxLixnLliXHJi+d9j2xHj8rpOfc0AS9KOpTz3rhgXv2a9t37ScC+v5LBy
/fD60RA36Vhlqy59lho7Wyrjsk3WYwwY4uiQvdjfXlO2szG2nF/1hevfgH8z
wo7elr+YGFef4VtkrzHLuDafspZZOdx2eZjfRsbl3NAfug7FgJYHFStmbfkx
xrXrhnJqheqiilnYB69cK6rH3NZx2nuBHxcvHRfjorqxgFX1cbPx85PW2yGu
ZTzaNH6xjHH1++ryTCHqM/M9scdV9yaJa80yruXcOozrCz6xnBuLaQzlX7KM
W8W5jOllry2rjXt9+7Oh+qch22zl+fCWt4zbpI98+3UZ4x53nWorGPejD//g
BIc12YYfR2v7wC4nthbj8mp/9+e7VYtWbMv1q/utmLXsmahlHCe+3nLsePTj
6hDjxuZIqI8Lc/p1HeFZ5tZ4Xbh2pmBcmFa5rp4/v+M++9sU4yL6zNqyYdwv
byw5f2ZsuIjf8B+QrZb+EuMqf3KRR3npYPg1Z9y2bblBf4wTMPbu1KnT5OX8
Q+Z38ntN7qfsMa7vFyt7oGyzYghrl9UYGX70GZXvVJ9TjCsODuVnLrMxWca9
uDHr3sO3Gs/z/ereXm/r6GCEJRX/tfR41BZseVfMi5+zGBffZjgP32Zera06
VAuJvpTPr+pk2H3Jl1tjQVtvtojpMYzrP4s0d3qcY40Y4zIW4PoZh3H9nDzY
pYj7EzvdzP0GbAy3n5s7xrh89n3F3xTJ91+ML4UYNyR+sza7H47Wooyr7fj9
xD70f5VPqbs+SxjXvo7jp53CuFwrsrGmxukel9IYt34t3JBCLGuXH9dX+jeX
z2m7uD60rXEYV9sp5lFeZ8+aJkwVyn0Lg8KAoRqgWqfMTkte5VOXF0sZV7GP
fs6pMsZtUism5XzXkWVc5VV2fsqerzKa9P+k9Dj7LCbG/eTMvzmVXk+/hOeb
nW/Dz7vuviS7rM+4qims3FY+4/oqfJP75xAmxaZrGbe0nXleY5jTMm6VH4C2
C+MifIvFtLwX4zp/4f77Ijdyf5xEX8b6R/rxxb2CcfUd/fCPlceOcRHzDupT
MS6+yPzXVAeqiL0VZxrWLdSSv3LHtZ06dZJ/smPc/DN5lOETtH2wWowpi5z2
hj0sSzAmtnxr8//YnEAaE4tx4ToYETuuZVzr61w2Xhcbsi0xLnHCSPZcn3F5
XrGO4r6k2D5YFr7dXJt1Il5F8bxi3PXtq73nz9ZdTgbiekOMq5o0HLvNjeQz
rvyYaV+o3lJIIe6dtGw/DR1rzrh1/dnk58mYGPljbeVUtowbkvrWnkMXo9vn
W7R0sDZ2nqxp1baV/4TPuGW+DiHG1fZg3JnV08E+1P/Ct3mLcfVftqypGsix
OP2QXbiOYGcdcyorl9lzj6PerH8NVy0zTcZt0h+hdchFtbk+1x/7ftHb3FoY
K4/0T6/2HWdgy6qzHrzqcy7bsbwMk9icvvS9exbGGPfS9YG9yRN+mNzDQowb
qpkL54ZYu+26Qqniehhi3IAdl5jmrcPjnUsNCZ9cJM4tvT5zhvP71fnu54zL
OeNa4bz593a+l8+y6snqN51rxPWpvGLyMdZn1RIqbadsuK+3irhiZPOWlfm6
s46rH58zrv1N9aqUCznUP0i5lof6qT+Gwp/Zfoc/P6IO0OzmbsG48K1yJ4tt
icN1jHtjlG9H+JfaHvl4tPZ4tuPaTp06ocWcbaXcdqtaQcprZPlUNWN1j8P2
6eeHsnbchf3l4nc71tW4WHzMduSrbGsH6VW21hCD6tlEe+TXpngXxuViXJ5R
8K3PuPxOrd0yPhB7WruqGyuZvFXkbSaul/di3B/6vIufjyTGFVsja8PVfuhj
5VYW45bZQJhzoB98pp607DFYxqWvsd/G6geWycYyhhhSjFvGcLZeruW/uceL
rTLuceSNCqksRiBF9Ie2dXRwt7f+7ZdOofrHMcZVbQjZ8FV3iT7Vf8meBz9W
4bjje4+LcfF/ZXtVtYPKtnHczD3p/bM96uiurK0OXT91tlHFuJbllRsoVlPG
Z9wQL8CqTRjX2viIvWTbYtsQ4zIfiz/rNM+3L40RfF9leEa5lo6rLWV2adrz
j0vnna25inGLa9EwpssdmTMf/GcZV8voOrGMq+2EONeOj/hOjGtjQ1STtqyN
4tyBT87wdePyJka2gb3V99/2Y3zFsLYGrzg9tM0Q4+ocIHwXnM14d2eEcfkv
iXEVe2s5lzxi1MlVnJxj3Bp23I5rO3XqNKKccQv/ZFMLd1DvYBBXa/0Subdh
I7Xj4cU+PyCfcVnmn/eGYwMZB9t14Vs+i3Vt/aFsn3PFuN7WQNX6Q/lzcj9O
Ma5y7GDDtbmmkMv1dLhSybip/qxi3N2t+SH+hW+x7yJsvQj+tYwrnpCtXIwL
91fVtuFYNWdwHOMO57veZ0TFOut8+HMATaR8QbHf4QPF4IbEdQM/2WuC83/r
0eUhxkX4LY/j2/c2MC51g1bXL7pzF2NcXi3jWpux9ddQnuMUxr1p6oodhxir
TjrHl/1cdl359pUyKf6gjVpCx32d2n2LcX99NagV2mRbsTG4+nvv2c7QeD5F
IcYt81Uui8UV4w5qq2dM4nwn+m3i3oTttm3Gbbs+LP6lRU7l+Z2pMq7NOSWm
on1iXBgctiqut4pzr74S4/q/2xzy4ljmrspqAnMOObeFz77H0rYeLtyLYrnq
M9Z+WOSsivm7x8YlofxQsf+E5V7fn8Euo/xTWc7mwbMVPhXj/nV+K1POqvDs
599mtYOw83LOxL6y4eLrLMYd8lUu8VeO/femPqbu1KnTidBfrq05KYeyGJe6
DIynuBf7MW+qjUqNGeUt0u/Kd4y9kfWoB4RgU57hdjwcs8HZXLh+TKUYF+6D
rUN1WsVXvGLXZDn5OtMuy7iq+wPfPv1hy0m1jfz2jTMOt5xLzSJyN+PjDN8i
Ynrh3bkrH7v3lnGR+jkWcyjJVzTFpzlW86iOLOPSvliN3sb9FmFc+HYwdgzz
mz92Ft8id30Zxr2zv95qu49LodzWMfGfUQ6fKsaNzRnw/xXj0p+WfX3GJc/X
jTy23sYq6L/Fbzfz2lpt5qEqveZ/Lc+PU5UHOXUf9vObyLht9EPZ/ufnPhub
cUNjdY3LqZ8L44pz/XUPAzn6uL+HWKGqPm7sNzEY27CMqxowfA+7iG/LWKWO
JsW4suFim2vlf5Iw/8B+6H/qRVm+Rc6H+vJi70+n/+j4+4+5ndkybhvi3PG/
E9dyvSpnmeVVhJ0W/wKW0bXoH6fyTGEvFeNyvcpeK99k/7oJ6TI2gwdXo/7K
ypNcZ65HjFv2O4wLP4txueZczG0ux5nzW0N5pMS4oRhcm2tqKC4XHwnPV7lj
2k6dOqXKzcvaOtvzA/9kMa7NKSPG5Tvffhtk3L3L7vmtXFCWl2P2Usu42pa1
5zrfnJzNxLiM333GlWTXZDuPnj91kp+yOI9j1Xjd5s+ynC2+5PnF/pr4t7Iv
jkmMi53XSoxLXC+1inhVvd4qvkXkseJYUnh8XL4dGY8w/m55mzG/UjFujOeU
N9hfDy67uTu4nmTPfdsZl/8zbFHGuORUhnFVu4VXzZlY/40Q46putP63qdxy
nIzLtXQcjCulsGRKPK6/vTq5lmO8zfdlLDRJxkWLN684n+Ox+zgft1fmkfbG
96ExPOwZWpeaJ00YV8piYeYKm63PuDARcZZVfqvTEvWPrJ8yjDvOuar6zr8O
y/pWjMsr3Ft2HcT2pZhT7nch26XjWPIE98dCL/91z0mcq3PItlnfMm6VvVQ8
S85tGFec68YX/e8YL2nuo4xxq/pd82ip1xbH47fXZ3QYlzhfPv/ww1ZRY9qx
6cJw7qiCWzXGtLG2C4E8U3kMrsttljNux7WdOnVqIme3FeMS839jt2BcxX/K
T5ixKwwlhRhXthxX4yEfH4tx8T1W/loxrvyStb5i+cSVYlyeL5pPdfdZj6Vk
S7Zt1G9iXH53c8Iro88FtidfIOU5tr9bxv3ux/XG8+1iXB0vfcj38C35q8S6
NrZXjOurbD+pNmfbj+P6F4/DuHVr94gNYrmm6ONYnN/Kk5WCb/FRRtuHK2Md
+7SUwrjiW1tbVde4XzeI/JqavxHjWr618yyaV8JH+0YeY6B5KZazedVOgmDc
gzwuU7Vh626jbT/fOoxrFeP0cdo3aa61unr9UinjxmpMKcdy8bkG48oOx31h
5t78yDIhxqVPPrgZt+P+9fMLlYwLEzIvAcfCLnY/tMUybpnvb1v8W1YLOCTm
Yqk/i300NW9gig+zY6ffh+/RXNfYvplXkC/rSJ/22Qfe/vNf/+Diby3jlvWX
PpOn2H6Pn7AYN9ROMS7XI3MjnEPYVL/7TCixzbJzxjZePl/rfX+41js6WHf3
YjEu14SfW8oXYxKbyyC2L8u4KbnM/BxToWWxDYtx8T0+u7Lb+2hpt2Bcx6e5
j3HhZyxbLeNOvs8Z13Esymt6oMy38F72e8e1nTp1aiBbC1f+IDCufIEZr4px
FSermjeqxaNcTVbcm1lOjCv/Yr7jOcLv5DxGYl+tKxux4n3FzPLVtfmWbH0c
xdtqnG3HR2xP43HLuLRH2xXj2lhj5SaWT6wd3zdlXBvnyH7EuL4s41o/ZyTG
Jbb3+6O1IPfS1ti2Y3I1aPrn01fomV+2HX4P1estE+egzjqwAePdENNpniS2
LoxL38tnWTmrp5GLelylMG6K/d+df49xGXMp33loG5Zx+b/FGPek1GQivluc
G1umbT/PKp0kxrV9MGnerWLcOnmoaK/qPKNQTj4xrs5v6JrEd9Svm9I243Jc
vB7nNWb7gNemjFtnP9VxsGGbtRi3tE9zxv3T518MMRB+sCntUw1YWE72Vq6H
qjzdlnFT817b65iaOzyz4Vqk9zCuavqo78S4SDn93HjIxG/T/l/ze29R5yLQ
llg8RFm7/TxUVjNzM04XZ8/meaUyxtW5yDg3rzEFs3o52dzYU0wryV7bfx3E
z92b+hi5U6dOb7bkqyzGPbW45WJTuaf6vrpiXNX6gQutv7FyOolxkXiDsYez
G73edv7L59fme3Pb84U/ju7ncIZYU6yt/UkwNttiLEO7tC/aSjyoGJdt+Tmt
iDO+vjjrtmH9LpFyMet4WZ99tzFOF0Nbvq2Kh1VdUfGaz7r4W8fsvDw/6zKb
jcMU34Z4kf4t204Txq2rMsZNHedv9q9zXddvIt+iNhmX+i5Xb2fLq86p/e/4
+Y99xi3qNuf9L5/+adVVCglmKfNVPk7G5RpOYdxQzdqq5VOO59ef94Pbrcu4
z5/cLcQ8SUjEetvX28sXevvbN9z6fq422pR6zRTXXM4Gr39+MmRDtGP0LE/u
4H8zfMwDG6pl0CreSmFc+Suz72kyblOl1p21fV6XcXmv2rPk3B3l2r3en8//
0/lME3vLK4wrzq3D7fS/8gk7xv3lUVZP/HAueG7sfHl2n9tKsqnDtCHxbMYO
ytwBurt+qWDc5flPewe7y042Jtder/hD01b5WJfFztLPbBdVnrdAXVzFDh8c
bRW6v3vfMe7puc0s5hY7rWyyS6PjyhE7reVa30e549pOnTq1KBuPC99axhXz
+bYuMaDPuLKhyW4qP0jlrULkLea7gnEfXHN2Xi3D9pfyPDW8inGtXVifbewv
r/CtzXmk+iXyteSYVDNIjGvzD8unWdL2aZueMRyb7Nt1xgkcl7ZnuUOxv7H1
ylhRjEsuZvTt3UvO35lXMW5dH+cQI/njTdnqrD+4dMv4Dtf1P7Zi3AtnhX5j
Xlpz06Gaq3UZ18amKrZU10DT9h+HOC+a39F8EhyquSD9d+syrvoixrhiLv33
p5FPuqnEuGWc25Zi1yG5lmA9xrPIMiL1iS0r8plX6jqxDmNf3osXea/fLFPq
e/3mc6i268tu2/+NdSS2o/3XYVy4lmNYWvy0t7o8/v/L3pvEuHpftp6tZSYm
CzFuFbvCuCmc++nt0dq8b5JO/cf/m8ZJ9GVuD/d9XsWwfr0muy71dukrNBQH
nTOuiwkWM/W/J78R+ah8xmVbsVzFPM/Jffz6p+2ivWLc8LUysJHG6ho4n6rD
zDYrjhXTkpvJlxjXboOaskicy/bK+lr1hMoY191v+tc1z8uq6y/EuPqPIZiW
fhfb6hW7LefKna+F0Zo/Q5xrebfzP+7UqdOEZX2V4duzq6tDtlWNk5XXST4z
CF9Y+QhbxlDdHz0PGGPDRfBP6B4qxoWZbB1ebcdu39p0YTj5S8uf2W6XMf+g
nnvmy6ZcU+ICa0dV7KH1kRbj8jvb5xjEuNikdf8ve3ZoboB1FdusdcS4MR6s
sonaXD+WcbHz8h6RQ9q38aper8+8oVo0ha0kjyWWvT7UHsVoKzfZJMZbi0tn
huYimjKuxjuat9C5F+NOuzZpXcUYN9VG7TMux885VJ6qQX3Ih0P9/SYxLsJX
+Tg49zgYV5zZhHHhTXzTEe+rJPsS0ufQMv6y/vJ1GTdsa953LKr8DozzqdWj
eNE2Yler8h1Jrn6QGbOXMe5x+8K3JRgXNqu7HscM03JuLOOKTxFxtPyOr7EY
t8gpNbvi4m2Ju3W5k/sS59r8zv4z2I+9tcwrxuW9/MeV31g867Os5kHkD29r
3UtiXMuxkr7T9mhL6Bp1+Zhf7fbmZj+qZNwy/2RbB4hXMa78FXxbOywe2g4+
yGcX153EuMX40eRAHsmHbOr92HkKMe60x72dOr1LUlzqtNsxzWPPctc9cfeo
vy3ecxxm/YwZR4hxubeKX2KMa3MOy++5qr6rGMrWFxF7+PG+qq2D8Fmushla
xi3LmyE7tXiHfSk+UYwru3YsXtUXvOfngNIzuUl+5pSaqLfymqPwrYStF7uv
8lqJcZnPFv+W2XFlo4+dQ7GUZdy28ywjy7jj+CpLPuPySqyu/BHeNNaVGEdx
zab6fb56ud2bWT3t+tD6o9t5Lc25WL590xgXwRplcbmTFH66Vy+dKsa9IR4M
MSOvLL+7nS23uTmQv6yWiXGn3UdTxh2nD7jWrl0564T/Y9myVf+/bNw+7CPb
BuOyzWDOowDjuvjBiuWwNyr/bNvXVMrxNt0v227CuDBoVZ+ozkxMYlyXV+rS
3FA9Ysu4ikv12yDGresjbp9xsssqftZ+3t9eKuaJfFtt+nU2uH/qGLS90LmQ
tGzmz7PppM+6Hsi/jm8DjEtMeCivGcuKcS+sPhiSGNflk/LGjmdWBznBLONy
zoqY2s5W26nTiVDBeu8Y7yqvsrPlUiM3Z9xz33zlxrniW9kiXQzp60cF43I/
Ve1ZP5crv4tzUlhHMauyG4f41jKu6tem2FIl1cWNSfHAlrX9mF4xQCrjskzM
lsYxMydQZ+xg6yRVMa6OgTbIvufnbkb4TfHKutQskpbWvyh8wFMZl2NSji7a
qlrKTcZXIcG4Zcdel0lZXjb8m8bWrnP/pjIuSmVcbLhIjCve57cqxp32MTaR
GHcanMt/6etLHxR93nQ7ar9/fY5zvabWJGpDOv5LV790zNv8XA4Yt+gDw7op
OX6D5yn3na1k3MuLSYyLqDU7LVtuaL9lbKyatMSKwrh19rX37CCJcYd4tt+P
LsYWu+37/8fZbmW/tYzLduWDoXMrdrPPJj4rb3Uq49qYWT+O1rLswP8hY1z1
5bhzK2oj27RxtPZ6DuVGE+dy/PjdkBcLW7UYV7G//jnHZnxjdaH3j9lrQ2zr
22Yt42pewjKu748M5057bNupU6dR+az7rvCuyznl/EyyY8ZvmZhZ7pmKf4Vd
eM8YzT5LfL6t4x9p5fv0inGzGnFxpmmLb5F83+STbFna8q3alrLfMsaVP3ad
2FWfcWVjtt9ZG6dqQMX2YRkX32Zs3fg7X71yyn1vGZd++aX/XETYf7UNm9Pa
b2sTxmWOOhZPlfldPQzWx20yvpctUjmSLOOqL8cZt7wJ+uH5esG3lnHVF/pe
Me5tMm7dnEptiRg+cSI5l49rv9NiXL/uzkmQz7i2vpWVq0v268AOmmnffQ8X
+L6fIcYNMZ7ya2U1h73+SmTcD67edpybynLT6Oe67EW/WMbFdzZlPfqyLtvK
j9UyLsInGa619VMt4yL8bxVnKj/i4ePYL37jOrGcK1tsiGtli4U15WtsGXco
DtwwZ5v1jdkPjPvs4E6R+wl+jTGujt/PDci5pIate5b/NjzHAuMiv0at2Pbj
PseSdw3xX2CsCOMO1QqyjKu8Ugt7Ux3PdurUqVrvEusWNckWMs6Fb5HG/I5t
c8Z1vjCebVb+szZOsq6fKrGcYksXk/t4sXfr6LCScWljSmydGBeGjfGecllZ
X1gY1HK8uDdpbJHzYawv3NxB//e6Psuq2cSrGJf+47Ps6mJzy9ep+Ycs4yqu
V/zLqxhXfs6y/xLna7eTUhMoNEdRxbjK1xu6FuqOJSzfSorL1XZDfnBvkxzj
zv6ld2X+dJLaYtxsPqlZ/Zw2dZyMS3zszPn3e7/8uO3U9vZjdsKTxriMx6lL
PT/3WZErsIpxg8dlbVy/ZT7BNr+O4g9DfsL2c4hPGONX89lW74NL10804/r9
ZecKQstgh/3w1o5jTWy4k2LcIk/ye/+riLd1OZMN48r+Tcyucg3ybEDi3Njz
X4wby2+MQn7GlnFtvxGzK7twqF/bZFzY8+a1MwXjLs6fHfJV9penTdhurV8b
59flGu9vi3xWOvcwL1pcz2Jti9q1JqZWY0P+A+STIl6aOC/Or2XcolZQzrjT
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
95VlXPlEv/5pu3d55i8jjIuUJy0756P/O3Euczmh64GY3MIvuRiTHhTjwCH/
ZBj3BIyZO3Xq9GZq2rw7xLf5Z3hRbAlvinNtrib5GIcYJZVx4VuEH6A+29o+
yrdjGTdUwxPb7uzGrovbZW5SfCubX/EczRlX34Xiet9l1WVc+tpew9j/LePC
d/5cAuNazqFqz474AfTZEtnxtM+4qeNprpcyv3m25fKXmX2xbeUUmUSeWcaL
bTCujVuP/d+qfB5DNtwm+ZLbFucNzjlJtXUanes+75IvTbxETPm1mQ/HqgvL
uDXmpz9JHVetI+YTrl6/VLlcKqumCnbhfsZ/ZuAXup/sq1zFuIrFTYm3bXyO
Gm7XMi7+1OJQtf3T20+dL+sQ216aK+oCIRg3llcKnqKGLvWbVMPJl/Ikxdro
ct+Zmj/6fjDPXs645GtCbAObK+MX5U0W4/IqvpW/sWXcELvKLqvP/ryqzYWm
5cW4qkEk3rWMy3KqleTnCbfyv+canpmb6a1srheMy3fMryByhYlxg7muzXfT
Hht36tTp7dI0eNcyrvgWERvr7vmPLhZ8q/sxfCLG1XI2X1RTX14YV/ma2a+t
iSv2DTG19i/GzcZA1bwG35yUvMmtjXNyW3sT+9e4jCvOXd7Nnudi3Dv76y4P
knxRVU8nxLguD6Y3lq4bszfUxprnV4yLn67amvmjtXOdwLh7z9PrB/nyfXlj
9YH9+hshheoGnQTGfRulOp5cy3BY0+20zbgncR6BmGXinukrSXHRTiWsmtq3
fg7mcRi3Kq8y90jrl1ulprmV/ZjNFME9tB8brPhGnFt2TDCu5dyyZZXPqLQd
OeMqtx3nw/KbZVzrF8z3yhUVko3rF+Nyb1eMrXyQZcfl+aPcVWJb+TMrXpZ8
VcpfJjZVe2KMG7v+dFyhPOAwLv+Dfz0fvb8XeQG9OROu4bNXs3lL5hXwU0Z8
/9HSrlPBscaHb8h22zFup06dJqzjYN1i+3ksLvc24l9lRxXjKscNDKo8yLbe
T5GXsP++6biGez28jFS/VozLe/kxxxgXW67dns9roZxIHMvbxrjKCdxk3bqM
y7gN+7muJfhWjMtv5I766NZO79zaXG9h90rBuIwdYClUxbga1zbtD85vG7mR
2rpOsGMQJxWzZ5RJtjTGWspDFWNcXyG/7Vht3E7tq2PcdMG4Ra6vCbYPVnGv
EfunbF+lfHttrTT+tC7jltU1qzyeCEuVrcPxYYf+Y59VEfbYv/SPKXYsfz7/
zyLuFi4mz9R/LGwFl8X2i8ry/6l9C8sXnb5e+6pg3LJYE8u58KFyRx26OcAB
4/K9OFX2UMu4NgZXuZ/EuPzOeuLQgklzxoWNy/ySrV129Dzvu22Lu908y+ut
oWcV9W3LGNfnZ+oEYcMV45JH+e83Hvc+Wtwq+LZgXHGtZduOazt16jQFTZJ3
lU9ZOZVhFDGutdFyz4RxeeXeLD9iSfmVm443fgrwjrXbwrgxO65dhm0pdxJ1
h4pnYiTv7yQZdxqxhJpzrrtek3xTjNuIx/WvUbgXMT7lNzHu/Paymy8pO4d+
n43Dt9JJG8fD/k0ZV3EDv+W1M/hPxK5ha8cNjReJDYW92jy2Nut7vm2ir/FX
Ji6X+kSo7X2ctGu9iah5PA3G9X1KHdO8elJaKyeFcatyTbXluxzi47Jt47d6
6vJippxzFVcr32OWCXGuY9uEXNLy5RWP+fch2+eba1d6GztzQ4yYdtyZDRRG
hRl5lcS4snty7+Q738cZXsWnWTWE2I4YV/ZSXuFjPWNDjGv7m32yzdBxWLut
eB7GtZwL35IfOfXauX7ti97t3R0nWFaMO3JerP2W+QnOY2e77dSp0wlQ27w7
8E0ZMC6syP1fNlrfDibGvfLwXBHPIl/l2uOZ/PkXYlxfsinznn2XMa6/H46L
Y3xao3boODrKfZjGrXNRR8rflZrX2qpJvikxrs07pWtSfIuubGb1CTYPV1y/
hHIpD/KHDY8Z3lbGbWM7im2OzaVU+Sr/cLQWzTfVaXJiboFcVOi4933S/gtl
7Trav927/W07fgYxG6e9P/t+n+IyfD2jjHvpeu/03KZT6HdyCKe04zj7Grvg
/d37Rf6s9y8vurZiv/UZ973cvvue1b//P5WMy7wAfGwZ1z9Wvx4wjGttlo77
InFPzE/4z1Zxrey1rAtjqraPGFd1Z2FUbLYwrWVccinb2rW6DlTvVssoN3Ls
XLJfbccu49tfY3WRYVy9l/9G7J5OXVwYF3EtUstKr8V5wV5rlTPutMe0nTp1
6hRSG7zr+NbUxqVOj+IQZc/VGJp8QuSHQjYnFe+x+YZqgVaJ+/3TH7ac2IbN
M1XGuCyjHFL6He6lvSFeI1b3OBlXebSOS3Ct5pyPi3GtsNv6jAvXbhjbuWVc
1cA5DsY9SWrTzlnFuFV6Wxn3pHKcJMbt+qa8XdxDsXuTe3nc+2kVR/I79x7V
JhWbVTHuXz+/4BT73WfcWFt0X5ikHwRciP8rHCnOvbD6wOXDGmp3n39snmRx
LvVuseFW5dcinle5B2WvtPZxtUf1Y8Vt3ItCfrmKfbX+yWJcXlULiM8sYxmX
ZfnNsjbzwGJce+75rGcoDKuaQKwvm61l3LL5Cl6V5wrZZX76OTtG2lLk8/QY
l30uXBvYDMizXHV+Obdnrq8UbGtr3br6P2Lbzl7bqVOnN0xNeLfgWxOPS/0d
xsyq24PETHpuHeX3ebGmbL5N8xRT72f78H6RN1n+lz7r6jfaA0uLcZUvAsUY
V/0S8lduU9hSFb98HGJ/yv+lfF1NtjMO48o3eSj31MqOy1vCdeUvz3Vy5eH5
/jlfGTrHYl9bt+dtY9w2Na6PwHHH455UvjpuUX+IukKhvqmTr69pfzo2mNC5
aDMXuc+46NmTb1pvs+OLPivJLif20G+8LmyVc27oexgjxKw+G/mfqzgXn/cQ
C8akfFzYSZXj+2afn+YWZ8KMu5TlgXZxnH1xfPCtz7gf3MzyLSsPM7bbT1ae
DDGuPT5//lKMq3lnGPfoYDQfn9Zn7mHEN5jY2Dw+NtSXyMbEsj7PyJD9Hj9k
xDXw2++PhxhX/xvVzIWRy3JJSaF4XDGu/S30v9e5QpZx/TxXIeEfz/VnOVcx
tx3jdurU6U1WKu/6OZXFuPZ5AE8i8vXqezGutbmKce2zrUwshxSLIsaFbcWr
2rbyN6smr+zFtEv3elfbrs+Wq0vnnPz9yae27fHRtKTzYhmXc5Q6zzAS9zom
4/rXnGVc8jtqWc2ThxhXYpxRtKsFxj1Of/FJipjygxb9ELDjdow7HTFuxRf3
qKReypuoSdTbOthd7s3PfebUNuMWPJKzks+4sA6v/PeCjNt/ZoYYF7ao8hkS
y1pWUm4yic8hWcZNrZcE46JQH5AHz+d47NdfPSjx084ZN6WPeeVZL66131vG
3X+05vTjfx2MLBdiXHsO7bKyo/r2Uda3sbC+zzDPHvu88OO0rJ+y/5u1J+t9
LOcU64d+++WX4W2+/vnJSF0lzcXE6gll62VSPK4Yd9pj006dOnVqU6W8u7g3
ZMOd2Vh3ss+DMt9j5ZlSPuS6NkT4TP5D+CrDXWJcsa2twSvGFd9ZxpXKWA1/
5TbHR8ctm1uIY1d+a/qkKndW9twdzBVbxm2Sb8oK23jVvMres2wcY+u7im+x
26omrWXccXMq22PnVfsoq5l70tWmL2MZ47YVM9wprLeVcSepF882e4s328/T
JYXsclWMS84pcjalMC6s8nD9Wm/3wVfuVTyr1/37i06Wc3lPjVSYFhvny+dr
bpnF+bNOsvNZlh3n+GFdBNuGGJd5S+qrarmYD3hoXtFnXF/id59x65wv+5tf
k8fWhNJ3es9YR3Prftv13MB2axmX51RRz/b3PScxbjF30v/uux/XCpswy4b4
OHYMYlzOq/qHdX1WDwnGdWM8zh1xuR3jdurU6S1WqP6uGFf5puo8E2+Z3EGX
719IisW13GyZC4lxYZBbJXmJlF8KuyXLI9blcxXjptqZT6KsjVZ9lJJDmfXo
a/U3/VSVo6uOLONyDdlrTrZcMS7n39VQNnVYLeMijRva8lNmLLK6P+/0ptt0
22Jc/JS72kHTE7bJtuZw3hXh4331enndJcVi1q0XJv7x7WhW1HgNMS71Zck9
JX15Y6m3uT4/xKl67zMuzBoTbCtZxtV3zw7utNq/A5/ijHG3Dncdx8K6n95+
OsS4VfHNus/anExl/sSS+qRs2zYP1FD7f3k00oYQB9r19Hs2T7wZzP2sfSpn
Fb9jIx5i3JxpmRNBttaQ7Lmso7xVfJ8al0CcreYv6B+unZTzKMZ1Yz/VCVrY
m/o4tFOnTp0mLXjk/SurLpdiVg/vSTLjwoqqhbpxuOJ4K5VxU/JS8RxQndyY
eCYduVp42We4Dd1ZaRaP2paqbN9NBadaxpWNO5Vx/eVs/uVxGRdhs8DPXbWE
kOK05rbW3OeLa1mtROy3lnFjasuGy3XyJjAufp7H5c8rvn2TGPcoIQ7tTdLt
5QtOb2Per7bEf0L+zymMK9XNVRxiXN/PlZgLBMdiu3U5lT89G2Rcn0/te+rB
6Dufa1PbG2PcNnI0i3FD32uOuGo/yifs5x1mjs7Wd/b7mP9CVT/YPFbUdiq2
lfub170+eG8ZVzZXageRd5lnp2XcUB5ky7QcNzmqJHEudYFsG0KMW9WvlnGr
7NjktVa+KTfmK8k31cXpdurU6W2Ts725PAT95/b8ltPfb2yV1myXGGvCuvAt
wocnlmvJzqlXjVHhVPk+qz6vZVtyJ6tukI3ldL7SK+fHfr6XydpC/TYrD/Wk
GFdSPKsYN6W+L8s/+9dg3OCv25Rx/dpIPuMiauLq/VcPnhaMa2NuYxqHccWK
YtzLm7PR2KgqqRZtm+eRbWregvPA63Ez7pvGVh3jHp9SrkOWafN6rdrWi2dr
vc31tHrOTRjX928N1XOBLb+8+mXv7OK6Ywbmh7Hlkpvp640HvYOjrSG+tYzb
Vj/BiWwTX4Bxj3uS4h6vnMIDP+FBrKhY1/qmxBiXMYS25Z8fPYdkP61zffBs
VG0hPsvmynfKtWzr9Q4xboCnxbiqrcvytJu2iXHr5JULaX97yfmn+3HI7Mfm
SvvHymOnodpBSxr7RfKnnYBxaadOnTq1oYJxc85lvg8GqcO42O8UxxJiXPmf
Jo81cnuse97l/Byy4yrflTS/O9tbWDgzso26io2heXYofjjUZjHupHMqu7oG
jy851YkrFePKT9mekyaM+/qXLXesoX6GZf1rje/EuPC12l42rpUvp8+6jBEQ
cwl+jpDinPS3K4akz86tzTXmIzFum2N6Ma587XmvWl2TyNvj601kXN0L6l77
J1XYJRF1MLHPTLs9VtPID1a2T3IrLy5ccP01sp7j0pbrcvX5BWYgltJ+H2Jc
noFinzb7o+x4YFxYZ9rXSZnsPGboWKw9V8vEGPfQxTEN1+Cx8xJ1uJHzamve
2u2yH77jfm8ZV3G2eobA2WJcy7yyX4txY22gvVX5tWOy+ZZtG65unR3KiUJu
5YJxF/YKxu2YtlOnTu+Ciphcw7inFrcKn6yqe61smvAtdlQ4ytoLxxXjWDGs
b8/VWNdn3JCdtY5cfYDHo/5wiiOVrdb/jXVC9V3bFizEfpqytPI6KedU03xT
ZYxL7l97nfH559fZGFY25LqMe+vW573FpTNOF67+qVCMcREMLF/HpozL2Mbm
xqqzrupM0w7/OGmTzac2FGtecz9NNIlYXM7xJNtsc66n+AG8KSJXsOZxJn3/
mIbEn6kMGronVDHuZNq9X8yniVdgXHxFmasjTpXnpGXcsra0eW7fBMb1rwH/
s+ri2u9UI9fmjcZ/PMS4krOR1mBc+R2rBhCSbVj5jmUX1fWlOkA8Q2zOCPu7
mNmvhyv5tXLrXLd2WXzd4VsdC+3P8nSedeIzx0Ge7I+WdocZd2Fr6uPOTp06
dTouOb5VjVyXgy+Nb4fuv68fuXu7eLPu8w8G+CkQnwkHwQgxW67qF6mOL6xm
Y1ab2HJ5hsHpfo5osSXtsWMVG198HIyrWsRtMm6T7bB/xfPqM6/wrGXcDa8e
sdqPeC7HGFd8KP8Ae94t44p7YQSXX9RwsRgXvtVYVdvn+7J5druc6i43YVxd
H6HjhNOmybht23E7xm2maTEuuez972I+N+PYdesyrtVvLofUtquTe9znRfmr
LOM+f37H5Ywa6Z8Kvk2Rz3xl54M8RIdvaU5ucW7ot1Afc12l5LOSLONip7Ux
uJm/1s6IHzR2Wc6Fz7iKAcYPme9DjGt94O1vLG/34bfR3wbzKzzjmGPh/Gs5
sS26vv3ZEOMO5VVGHeN26tTpHVM2x5dxruy5GwfVOYGGnkvG5lr72f5zOM4V
pTAump0/VfimjhvvIsZlHzyzaAPfWTZU23S8YqimPtJV0hhLjFi3TpN/rsZl
XJjPcrZ9L84NrceYFYYL2colmDB2zqv81i3joqsLf+99cuGTgoPFEk0Yt24f
+TWwfE4IMS796M9fTMJv9E30VX6bRVwudYRScrG1pTqMOy3x/1Nu4mm2Q8wR
Y9w2pBhVy2lvOuM2YX/ONbbK1OVjcyex/Sr3Mfd/Ma6NtWUZxeVaBoVPQ+fD
X9cX24Fv/VzQdlt+naNQ/4lx9RtMDtMiy7no/vP5rKaBzTmVc+60x5udOnXq
dNySHVfCZ9new8ueMX7cbF3OK2PcKtaxjBuqbddUcAYMzTbFuHwv+6LyOrPv
44gNVF1Z39d3XNVlXJ7L1CzyWYx+SM21pbhT+51iUJmjCPmlp1wDilO+2W/f
jbxeM/m+rzw8P2Trtfbem1+dicb9Ske5/1pqH3ENav5FczG0K+SvbPOmKU5a
fft9PlffMe7br/nZj5wfblv3r5TYccbl/nzg7xOaoxtHJ4FxXZ/2WQP74qTa
UocFxbjHwblVdVjbPC6d71TGrdp2bL4b/2c4UP7PllOxpyNisbnvKyYXxsU+
Kmn/qYwbbsde0rEQo3x7+Xzv9U+DObAY36Ld5+tO1Gm2jKv3nTp16vQuSbZc
8e3iwz0n/z4ck41JbcOWKR9P+SGXsQ2xuJ9c+Lh35cG1oG2irjgOjkeMqxw3
qlUkzlRMcEpu46rnbxUfZv5S1wv7a4xx6+Z0bsq49pjl/2z3bWt++BLXcQz0
M+dM560J4/o5tm19KTGu49z+dtknvvWam7f23RSl9JHY1Wdc+sf3S9N8iY5Z
jAvfinF9adlxrvGOcU+W8MWdRp6nk6ofX9zvrS7POPs2THlcffPz6ydO8XZl
jNtmfitk/W1TBOOOa8tN3d+4jFtXYly/Ro/L8zRU27besdp1xbg8f8Snev/0
+x3HuM6O+3tme1UuKp9x25R/PqydF8YV96udZYwrznVjO5NX2dp1O3Xq1Old
ko3JhXk/urGbPw/2KuPExLht2BdV60Zjf2ujs/zD+w9vbfdOXbjsJMZVDb+m
EuPClEjxr5ZxWUY5o+syLjZry7fMCdg44pgs48YkP184rmp7Tf2U/bbqfKQc
A2NVLX8ztweLb2W/rMu3ZdIcieK2dR2Lb1FZbGeMdde//TLKv9Y+y3WiORHE
MUss6zOuah6rjhD6Lfdz0/Y7xn37dJIZt6121dmOGPe4jhEfYcUMkxeX/yFx
jaPtGmXcMgacZC2f42Lc4xR5tMgzfnSw7tVzGl12+BwMjil0XPCsfeZimw0x
7g8/ZDG1yqUsxlXNPq4J31/ZMvg48wF2/c21K+46u7G60Jtb7D87VmYc44pz
aUeMbRHHt7K3kY3rXM6prULTHmd26tSp03HJxd/e8GJyyUOVMy78EasL69/r
t452XRxvSpxjSHCtnjmWcX1eUd1c7Ili3PNr88HcDeMKZhR7waJiMNrXNHaN
voSBLIem8GGK6Hv6J2XZpozri/OkMYA/9rCSbRc/Ysu4GnvQ123yrW/ntYz7
66u93vX5j4faXVdl9l7yQGODmlv8pHdh4X2XH8syrvz71R/qE8Xk+n3m235v
JJ7jkODbjnFPlh6uXetdvXQqmDf4OCVfA/vdJNhbPtEcr+y1SO/5D/EfHWcf
dRhOjKv3seXkq2z9lcu4xnJL2Xab6E2Jya2jq7OnXU4lxLHZurpl61nGdX3z
eqsYDzCHaRk3m7/OckgpZ5RlXNbROVONICTGtedb64ZzYe3XnkfgnHJtWcYN
LVfFuLObB70Pbh4M2Wwd43b1gjp16vQOqagflOeaev/KalFLCM49uxyOQ+R5
4DMeY/OmjMtzJbPBZgwi9gjxypWH55ws42LDHefZSq3f0PeM+WQ7lf+0GDeF
p0O+w/DspGJ44WcxrstxUeI33hbj+mON0HiEcfLLnw4dm8l3eOnxTG/v+Xqx
DPbwUB6ptjjX9jnzC3Bok1xSqfIZd2b2L8X7K/OnB+P6pS+K333GnYRePFtz
fNsx7snSwe6ys2FNsw0//Nd99z/cPFzv7Rxtu//sJPfHOJ75lmkcayiPMSpj
Uey4suWm7idYv7sm+4SWJzZzWow7ifzf9CuMK87l2GJ1eCrPbZ9xxbnwrM2n
YBlXfYvtXnmVLeNqLKOcyrzXb8rxrr4InaMQ/5bNiWzcvuz6gbmUf1w633tw
/5aTvZZg9mzuf5RtGRdtPF0dYly/Pu60x5ydOnXqNBWJcbHlck+sYFw9D/jM
uBxORHV9hVcONgrGLZ4Nxmbqsy3iM7Zb9OHlud5/Xjs18ee6GFf+wCm5jYva
MYY1tX7b7ZO9XecEli4bi8C4x1WrRIzL/uDbhd0rTtuHK8UylnHl9+7nM/Nt
s7ZPlcfYl/JtD9U0NIzb1I6bIvm3yw9Zfve0ld/hW8u4Yl9rE+az/KrRuG06
TsblnO89e+pqSPF6Uv1xT4JOAuNKnCfiwbknt33O7PbEuG1zbtNaRVq37Pc2
GLd2nwX4adp2XGJSm+RNrrJnw3nkVypj3NR9inH1me3xGdl6Q+Jb+NM+J/Rs
sPG3LCe+FeOm9IPyU1nGfXZwp/BB3r+/OMS4X1790n32j+fQPVPC9luO4/zd
nd4nK0+cCsZVLO60x5idOnXqNE0t7hWM+9HC3d7F/v0SpT6/mzATjGvzDrnn
Qc641lfZ8q0+8yrGHbdmUKqw4RIbW8W4zP3KDinGVS3gUD3gtpXKuPTxpNvC
uJZaBrAO55l+gW/FuLTV2mw1D2DFeCN0PJpH0JiD96r9oPl3Py/yrz/vu5ha
9tlWPVrapzxlykkmn2zxt8+4iHl5xPpaVttz2/IY1+aFXlr81H3nc3FZfqxp
+SnDux3jxsU1SX7l/5+9M+2O4kjT9v//PnPmnO5jT3vBbYNNv2bzIAE2WkES
tJEQi4QEWo2wsQFjj+dTvXVF5Z16KhS5VmZlScSH+1RVrpGRWZlx5bO9zqgN
Ok61ybh2H7MzF0vlgK6q/Z/3ndpoN/wxCT4Qk8C4dXMv5b1HWFm4lNpxq+Sz
D4n7qt1GFjNbxsWvWctxfGzDP07u7za3soTtOKst8Cwi1hjBtWJc4pBvz3zh
fJ+1fIhxbb9nMS76evlFyreDMd2AcbHtOvtu1+PMqKioqC40vz2Ue8rWECqj
PKaqY7uET7J8T8W4Uyuf9+4tX3b65eVa5X1UlRg3bxnfpthW3dy8fsuzH8C3
2E3ROBiXd/cXlp8NMW6eT3LV/NAhWcbVGFrjac4PtlP21RTjsi+2q/cyHJPi
b3U9KPd41n8hxLghm7SWF/uHGDdLxCFjL8aPWhrHNfmhM26ZY7819Xl/vLvY
eVvHIZ4VKw++d+L6LZMnr3RfZ+QpakLY2T40xnW5l/46+TxpI7+wGPddRl75
Kirjo+PbYC3jZuVrgHH1Tt1/zsK5vAeh/bLJIjEu4vqBa61gXOJw4Vzez3w9
fcvFB2e128bk6r0q+vH57hDjOr6d3XCKjBsVFfUhK807NXfMuHObK408u+r4
bLEOz5hQXKbYyOWD6o+PxsG3alMeg8HAtj6OzzPjqKcLg5ex4SqvV939qG5w
nuBbMe7V1b3eq1/3h86nf25dPq6GWMjWL9J+xJFiXJjRH8fIF7/q/nzGVR1l
+SyLcdmff4x6LyE7r5a18mN1xbjaFseL3UEsjJSjOe2HAONKVVi56Wu27djP
rhUZd1inmXHbrNdbtt1N18hVnQDf51Z8G2LcNoSfMv2r+khl1vHHFtS25R5a
lnGtrRc7qGrahhhXvsqWceVvjMS0Ylw7j3gEJMZ15zGpxYss4164GX6PouuD
3MniW2luYy/1UXbjuYRxXW3cCRhfRkVFRXUll2cKG+7icS4qGBd76ebeaJw7
Ss5jxulZtlzu62Lc9dXp3tbG7Fiew5Zx4RfyX91N6sGIcWVvE6NrecXyWn/V
JiXbd1nG9W3MVWzOOlYJvvNzkfFeeXl7EI8rjrGxt9LFB4vps7qNfrGMC9+K
cf13Jiw7apyy9b/U+VbNKZ9xrY/9u/ebTpaH8xjXl9+vyss8xLg5ebz87Vep
HWz14+IlJ2rAlO2zs864ZYQfOvHZXbdjnIInXr1cd7mlm9tme+0ty7hV4lQt
17Ke3gvmrdNEjVxfIcZtWnn1gDgW7Lhi96Oj+0Pjhqy2+WML4m2LfKldbaCk
LZZx+c721Bf+PrHDrm7ecO2TXdbFDic+x5q2tbGUflfNnyz98Hi3t/1yL7Vf
v/99N2XcKytPhuLLLeOqRu7mYZ+bXz5LGTfNM6VcU5Fxo6KiPnCpfpC+f728
3vvi7voJxrV1hKgzvnlQfhxbVXn1ZCwLiRPEuHCnfHHbfF4r7lLvem09Vj13
LeOq5i7rtOUjLMbNs7HCuLQrZFOGcZle5I8tcR7gRvGtz7jYbRlz2nFIiHGv
r0/n8i3neD/Hd6tIss2iRw9upBzqMy7vJrh+6vhLh2x1Ylz2oTpB9rrEV9r2
jc275fcRfex8k3k3EYhjDPWrZXeUxbiqkdXENSi+rcK4vtqyw02y6C+uzSa3
+XMNn0/ei7gx/ph8y/94s9kY42IXG7VGev45ap9xSx+rYVyYGE5q89ibUlaO
JjEucvnIjlZPrFdm+8orpd9Zdf7wSSansuoI8WkZd2dnMbXBilXFuL6vsSSu
5XmFQnmU7XGcW9ofYlzLw+dvL6eMu3m4n14nnGMkxuVY13b3eufuJnwrJXUg
ux5bRkVFRXWpofq4iQ1XjHv14bST7JIw7tTDNVe3Z/rh1hDjuhyDDcaeqnaP
7GAhzrV+Qzxb7i9POV+hNp/R4mfLuIqdFKeJW2AVy7iWV5pulxizyOYH43Ie
/XMlv1rZpMtIjOuzWtpXHuPyqfNpeQvGXT9Ydu1XO+x2qjJu1vicupuWcX2N
0v+h9RkzyYbLpzhby/r9xnlT/1ixvrhXjBvav+rnjsq4ozBmE/lyI+M2oyLG
5Zqx76b866rof/FXA/f7s8i4VVQ3D3RVxi3Kw2XZq83/Xxbjim//fLcVZNw8
8QwmTkM+Y8Srhvb5+tdHTth4xbgPn80M/If7TGtts2Jc+RgjsSw8qu+Z5ycZ
l4TyYdIWfJz+ubLn+JVptEFMPbB17/QuzK/1zs1vDDEuPPtwb6u3tHPN+SuL
cU/wbWTcqKioqKE8U7ZerqSargguItcy68G4MIxEraGm8yuRg9ivI+QzLsvp
2cYYvyzj0uYqbaEd9IXsZYrXEVdaH2RbT9dnXMscjfSRxqfvn6f5J7IYV3wb
Yly1t41xjZiW86M8yqFYXOUm9v2Fq/An18H/ZtQhhHGJPeW80Q4Ys278bVnJ
XizGtUzNuMzPiWWZNsS4quvLmCfEIDZPtX+t5TGuXa7IVzJPg/Fp9/mBu1bV
PuTaHHf9oFEYtwm+5Z6Fj/arg9HzF8EFcF6b/QVXthmPW7UtYlyX1zej5m+V
/vN/V7ErZy1Lu/y2Zf03uBb4hCd5n5BXT9ZKz2LYFm6V/7GtEYSsrZW+g28t
4/L/u/3dZ707twY57LeefD/EuNpfyDZscyzbdvv2XPqC61SMa/vNcXO/HdoG
z0NixjQWu/JgL2Vc7LY869iW8kkN/JQ3Bor1cKOioqJ6H99aTRnXsq6b3//9
rweLvZnN2dTWI8ad3djr/fRmrbdxuOX4Ft3dfujeF1flxyyJcbEthnw3Gf/D
juInGA7tbeXndlrbDbcxZIsUr4px+e5yIyU1jizjah3VdRXLsaytl1q1D1g3
i1v17sEyrr+MfMzpm6z9iHGbrm309t1O2hdiXNpocyNxbMrZJMZVPKmvwv31
z0ce48qOq2lt1wm2PtGWJZDyPtMG5duyTCvOtXW0+C77XB7j6p2BnSdfel9N
Mi7jxdPOuF3lgMbPG7tml8fkYmR/e5jWQM/KpdAE48IRTdXH5Z1PU8+dLMGV
k5BXWW1pO7cyPFbN7zp83y3L32Jc2TSzlrPsCtMi3hdaxoUV8Su2OY0t48Ks
9x5O9eaWLjjNz14YYlxsyjPT51LZ/efV7nVtOjrOgal3qOobfJOppTe9Pszf
fFcbNV2Mi5xNNsknBc+Kcfd/fpbmUmbeKIw7ZAuOjBwVFXXKhT+LY1x+zz5z
99JPyDW/eJx7SvkLxLfYbxG+o2Jc7rWy54pxq/qMZY2lrI+vxvg29lWMK39q
+NYyLs8X/70rjMsx+vtHvh0R9hNvaNxHO8S4fBcHax0xrvI/aXsp65TgyLdJ
/iFUhnHVVwsvrpxYBsZle3mMq2OtMxbKYkr4Vozr+3XLFm8ZF55jGT8e1TJu
0Vg9L5YwxLhNqKiWo46Dc0Ufi1l9xpVtGX/jua0b6XrWVz/EuFWOJ8S4Teb7
PguM25XaZFyXZ6d/nZT5H/Ef4hpDez8Tb7DbSpvGzbij5lQS404C57bJuMoL
1RTjlhF9Sm5hfZff7lDeqT+eD2QYF5a9ef+r1Ba783ywnhhX5ws5rk1yN4tx
0bUrf+/N9bmW6e7af7WaMi7bYr6132cxrjsvv28NMa69PonbEePavmYdPi3j
2j5147GEccWebAOJcdNcU+SZKsmoPtNGto2KijpLSuM2TC5lGDe14y4e5+gj
Rvfy/U03Db5VDiXyG4lxH+5tOn5EsO7WUf54TTFCyqPgzw/F4aoui19fVfZL
+BaWe/920wnms7ZN9iNOH3qu9znR2os1HfZSjCqsKMZVjRfm+fmt1CY/d5PY
Bs4pyjVtGdePqwyJtqn9ofmyczc5FmKbefZVa7u2eZdDucMQtiH6Mi/fmK0R
W0XwrRi3ynpl+BF+oA/cWMVb/pffHqf2WJ9xdW51LbEMfDvzYr63dHDg5Mej
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
+273xHXONeZzrd0feats3qmPrs8f+y7HOkJRUVFRQbl3gfPDghnFt2JDxtij
5uFNxw5mPG/tujCu4kblzxni28X9Dce3iO+2Linr6plEm39Y+mdvevZTdwyh
97RVRR9YxpVtTfZWMS6spfjKvPy7bCuLcdmOz7iqzyubrxg3y08ZufXeP0/X
ZRrvkptkXOy0aNHUT7KMW2Vbyi+tGkeh/lPs4In37klt3HExrt8m+TSHGFf/
KY7rTuI7rlzTRfWClIt5nMeTJ7gWe4jYzAr/Zcn/XYZxJVufNW8e3+eX51Pe
9pnb/tZ3u1zXfYnOEuO+OngwETmnmlDXjGtZqE3GtexmGdfl29u51vvpzaqT
XcdnXHyByefE/yovp1PTevXbupNlXMemif1YtX/wU7aM657Z/fYjjlHrlemn
725+11uYveSUzksY19p7sd0yzhLjurwh/XGL7MJiZ3uNsR1k9/f53Wep7RaJ
cbseP0ZFRUVNspRzyuVU9hgXLlQ+2DzGZYxOraE6zycxLnG0Tn1mgQFCjCv7
LVx793BQMwf5+YyxlYnNxbhVa71kPuP+ep4yNZ96ViLFkcrWKr4Vs1sbrPpU
jOvXjrUs69vvsnI1ZzFuqN4ujEudqDbGHPZc3H1+8j1+EfMqDtcyrm+/1nRb
hxa+FeO2cVxFEt+KcV3fJ4xLW22dT5hVtuoQ4066smJxixg3xMRa5sS0n9ZP
KGt9y7i+7biIcUPzQnbpEI/707P2W1az0+fcWHyS842V0fzcFfdf7Gr/WfGT
VTUJjIvgHN4pwbhlfa7r5pyi77Bx8l2MK87NW88yblf9ZY9djMv/KZR3Wc/t
vLyGvniPi28yjItYz7/WxK+qk0tc7lfLu87WDOMieHz75cBG7PIvmHPFNPmI
83vjYMsxLhqM2TZiPG5UVFRUSbkcBom/MjVy5zZXnGAMMS7PAt8OKrbMqumq
Z0iVZ5Psoln+yUv7zxzfYsP1+ZZnFb/FuNrm4+c/OM5tIt+ybHHi0tAylnFl
q/P7QnV9Za9Etm+Vwzm0fdYJvW8oy7i8V7B5L5qUbOi0kf36599yvWyt6gMd
m9hVn9g8+c62WB5ZxlV/M6bWO3s/B1Semson6/tq6xpkvMIx6/wqnxTHoTxU
nGuxMf0nm/Ckss448k1VYVwxcR5DZynI1jk8bvn7l8NVp/R3f/yqT/fd31+y
7RPTjHY2F509l/q5XNOHew8m9jrIEv9B+qXrdowqGLdrZnM5psfIuHWFf+2o
7wPK2FGz5okteU7cnvnC6dvr/5XJuEjxI2UZF3vx1MyU0/zaWpBxj9tzzLiM
s8izjGBby7jEVx3XZNwYYlzyf55fWXNKfZVh3Oif3Kk+uTOsrtsTFRWVLcu4
suda7mKsDjP4uX+UqzfLPsqzpmotIfccS2yYll/JMwXbWsZlOpyLXdfloUoY
F2Yg1zDMwH7hWzGubUcd30+xlW9bDOWYVP4rjsVnPfpV9VBDcZZ5bcvyt85i
XMXrNj2mKSP/uJVPWDV/OE7LuHrmI8b19DfrcG7FuFrft43DAzPzXwXzHNt9
+W0U47Jt5fmq+m5G29G7FraXxbj2HY78Fdg3y+idUh7jTgLvYHOEx7puR9OK
jNuM2mbcccXtwpST4s8OpxHj2mb/5eVuyhM+wMSnjlrHoCnGvXn/q96VG39z
eaB/fpV9HWrMUKWNcO6Fm3MuVxT7++Hhk2AbyZu2ebjvauOmY60+m2LTvf9i
z4n3zXrekWMZwb/KEw3joi+WHx3H395+FBm3A/lcG9k2Kup0KI3zMD7LXy+v
u7q46OqDZycYF14Q47o6OX2O4z6tnEaDZ8HDSjVjrFhPdXGUp0eMa+vl8FuM
q/XExmJcvotzp1Y+HzqGpsYfWXUUrM1V9k1kGVdxvXa9phiXZUO5qroQzMbx
2hzLqv8bGmf4jCufb9aBG/1372Jcy9FDeaiTfFZ+mzgvYgg+4Vxsx6FjyMsx
5TOu9i27rfbv++H7jMt1wW9qRqD0+CYoHw9+ueNi3Ek67nGJXMv43MsvoY16
WG2K+H/a3db1MK48Y2UYd1zXJ3yL/22dHNGhNofaXSf3ND7KTTFuHfE80HtJ
aYhxM3JRIe7VZXP+SxyvGPe7xYXe19O3nO5tPXPcauOaxa1wrvJDiXEv3h9o
ZmOtt//zs3RZ1qfNA1vvM2cHFuN+fGs1Vdfjxg9BkWujos6GYNuhumtJbC58
S30fW+NHzxWbq1f2N8u4SExSpl68latJ0OcbW0NIOZxga8u4is19eLDs8ivb
fFBwA23kN3wrxuU5CFuMmkfL5XJK8kvRXv/4/eepGEecI39mG1daR3k1gyaF
b33G1TTlNDvRtwkXsgy1dDSNz5BvGef7ys2/pb7hcKLPuPCrtmWny+ZqGVec
yna1DtvWdeUfn3z5FYctv2q2t5i8q/EZV9c089mn/BBUR9fuY1JYjz6KjDs+
wYo3r33aeTuqCnv0w/vXnZqs41WVce31U/VaKhOPG9pmU/HAVpZxR+2/rH6o
sm36hWtzZeGS+w7jjtKuon1jYw7ZmcW4xBAj7rMXr/xHb2r580zG5Rnk7rWb
F3MZ177XV/v4/PraZce3Eoz7xQ8rqS8yTCu7MtyKPfefK8fjLXJQIRgXboKP
3bb/2k7fYdDu87eX3XY/6TMtfCy+jXbc9hS5Nirq7MkxLnXXEqV5lpP5fl1b
KzHu908euDheTScPlXJR5bFflsS4fp5eMS7xufAt4rtlXPG3i/k0jLt092Lv
l9ePnJpgXMWWKr6U41T+KZ8tefbKJhmqBVw1/7BVHuN2LbEs/WHHurAf/eEz
bp5fZtY85Q7B9mUZF24M2WRhVlfzKeFo2sDyNoZasVrWny2LcWV/Vf6o9f61
6PKO9o/RMi5iel4tYV3nVX3oxiX6C9sW+XO7bosVsW+j+vROok9wl4w7Sn/A
uOLccdSqzrsuVHe36rqOcR/PV16vDcbFV1n1jLrqy+Hze8y45JpS3rS6DF7G
Pm0Z9/XRam9184arayS+FeNeW/jM8W1WHBXrsJzl5tA5s22yn5yDX37ZcGLa
ncWbKeN+NrPe+we2gr7OzW+4vBc+4yLYCRutGPfVq0dp3SD69d7yVMq4jmmT
MVn0VW5WIaaNXBsVdfYkznW/KzCulWVcqzqMC38umFo0sm/Z3FLL29fTfFTy
/YUflJNXccXiyul7Xzq+Vd7lJuohOZudYWpxks+4sLn8u7PE+mX2aWOcyUfd
FuOWGeMWLaMay77/tRi3Ca6wjOtPt/ZgTRfjhs6BbKyWb5GtGaU8URyT4n/l
I20ZV3Zd2XZtG6wdP0tdskGeHOO+nIyxdpVrdRzbaFJixC7eJxBPWMSFf/Xv
n38l91CWDy2Dvf/HxUsujrnN9mbZJmFccW6pa8BwVlXGbbO+l3KBK4cS7cS2
C+uN+9pA2G1pA/cCGFec29b+iIPF7ipuFePeWb7oBLcy7+rcR6UZV/5TeWyN
z5DOqzhY7xq45hkbsT55qOBRGFeci32XcRT+yaojJJ1bGORLPrd0nANSnMs+
fni82/vXj5suDyhSLG6sGTS6ItNGRX14coxrYnLdZzJv47A8ozb5nFc8rbVt
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
wm9drMs465M7++nYS37KKePe3XW1hdy4zPkpb3Q+PmxSkWmjoqLGqdRPOfFV
hm9lP9WYveu4QI33aYtlXMsU+o5fMuwEr6IyjIs9VzG6HGubjOvbS2GmtwX5
hkNaunuxVq0/K3GY7Kewoc0dZRkXRhPvWTu6ZVzWlf2TMYbyhYpx0/GKqZdL
nyyaPNniSkn2WSvLuOQPyzq+UM3ZrDzhPuPKPousLVnL813sK8a1fcM6NiZX
scBFPulcu2qLjeOdBEXGPb5+fSZlbD2OWk+jxueW9c1sm3Hxu15ZmnL5sbtg
3DIiJrdu/aA/a/Qf/QBLDvqne8bFTxm1wbioyvaw4X639JmTz7gu7qXPwMqv
xTVOPSHLuG33JecbllVcT2gZfJeRZdwrDwY2XthWcoxr/JRPu69yZNqoqKiu
5GJwDePKR+bK6uMhxm3TvllGPnf5dlw7HY6Bb60PbJHgXPmbhnxsqyrTLvPX
86GxsHL1Vt2+GNf3Z60SVyy/X7Glxgc+b+JT6/NiWj8xyZXEuqp/wfKWcWFA
30bN/BDj2vcVmh5qO+0kJw+xinBjKDcWfWOvEbYXYmYJvhTTco7ubN12uY9R
iHGV48pKfQMHhRi36JyoDyeNb1Fk3PZU1gYMB+p7GVtknX1Ye1ibIsYYZsee
i6ijyye1harYT8lZi5puH7Gwbef8ssJHeFx247KCtfFRdtdPA5yoOuVV14Nx
kV+vl3hcvYuEcbmHKw80n8qdHGp7VVtybj8ljKvfsKzPutPrey7m9pt7w4yL
yK3s2A++pTauGPcU+ipHW21UVNQkyfEtNXKRq8O2mzKucugwdi+VX7elukPy
+7S5bvMYF3/bUE7mPMbFpouduAk/0bKMq2PL7U9j19D4c3r2U9dunu1iZPV9
mf5XLSNqD4tVtX31Cdt2vtR9WcZVHiebB5j5lnHT9vfH1X6eJ41zWF55qny/
Ysu4bDM05nYcaRg3dJw213IR4/oS45IbCoUYlePIYlx3HfTPteoclWXcUe3z
bSkybnuaJMYdWsezqSouv4ljhnFDbXr3erPPVd8G54WYpG3GHSUetoomlXHr
1gnOkmollVkWOzL1cBE2XMu4isG1fmaWcfXsqtvOUfl3bmPAudS8RWJcN+Za
OBbTUsZV3aCEb09DTuXItFFRUROvJPeUs+v29en8Ru/7Jw/SmFzG7jb/bBeC
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
yHu3t7Oz2Lt25e+9qeXP0/xSYly7jTr1iKrWL67bZ4oX/2p5N2VcviuP8hBf
+jmVG6qLG5k2KirqrGhU5rWMK86dRMa1tsWQ36t8f8W4sF0V+yqMSw1aVPZY
bb6pMrK2TWvXFPeyjM+4xOJaThLjso71W+Z4LeNK1n4pJoMFlUPJ+nerjWLc
PGXx6vX1acfJlnERx8W4WoyZlVPZ5rjxx0M+49JOMTli/C6+VVys+FX7EMe7
msoe41qOVRyx9dcW91vGzbKVcS7Ex/481btgXug4a+XDDaxD7l50crxXvL3I
uM2I81LVp9mqbl7lUDu6Ytw8HumKceFQ7JR3bp13amKbeYzbhf12VMG2HMvM
9DmnRvoo594jxl0/mHGSj7J9Joo9qzLryXbstFoTWrmn/rmylzIucr7bh/tu
ns2pXLduUBbPRqaNioo6a6rLu65Gbp915S/z5eLw+CfLxjgOiSFlK8zyd9Xy
z4/203zMZVjNinq51KGtwrhVti8Ol91PbGYZ16/xNzX130N2QNXbhaFc3Zl+
W/180D4z+u1mzCnOVe6lKseRJzHud0+Oc03pONl3HuMqZxXLhd73W8ZV+33G
ZZq4NRRbLL5FYlX7zkAMbP2Ys47Vr0dklce4qhXM/FC8cBWeUa3QEEeF+Nbf
T9a+xLeniXG3XzaXhwjl2V31jqjMNkbh06x4XK4bez8uqsWc8m3CuPgq553/
MipT/zlPXGPjjk2VYLe5htgWUfMGjt1+OhesvVPEuL79vgmRS2vUZzb9ZDmX
4xtlezpG1Wdi28T9ztz5onfxyn+4fFNInEv7QzbVURhXuZHbHNMoVheb7vL2
QPgyi3E3DrbSWDE3BsPWUIJxI9NGRUVFhXk3i3lTxu1/Vz57y7nYXaU2ngdZ
km+vGDfPlsjyYhfZSOsy7rvXT52K2leVceVzJTbya80y36/PC+OS+xl/5Rcv
FpwOdleGGNd/TstuKZ9bZJeBmcW3VX2I84TdFl1anUmPh+3b/Fq0Qz7SeYwb
EjYf8T7tt9cBfWG3b/tcjCs7re0nplv/ZZuHy/cd8N9XZI3xmU47uXbZts9C
yrOdxbhVJL4dxVYY0mlk3KZ1mhiXMbWNNeY374lg2j//2HRt1f8dqSYYsu/Q
dE3T5iKGHZVxicOlNm5T56qKn78YtynOhXF/PRr0I7mJEX7Q+CjDvNTebes6
zVITjCstzX4zxLh1Y4vFlz7jXlv4LH0eEnOLn7Jl3KZqGQ21oUVbLm1VPqpQ
HnAYV5zr7Llz2+kYTIo8GxUVFVVOWbyb/sZfGdbtf4dv0Y/Pd9N78rj5Folv
LcssGDugOFYMBaNoDMf4jrFblVy+EjVzQ+/ifVVlXLG4OIvnq7icNmKL9Rl3
ae5ib2/rrosVFt9mSevI75b20Yd+bVb6ZVSu9fNSpXbcx1ecLOO6sfbvW6X8
oP3YVSsxLttjDK42yN9b+aj9NlnbP8vYWr6WcbNstaG6xFmMa5eXLTnEuGpP
0zVzR/Vplc5avqk6ghPz3h3k9TXX4agMyPbLxuOWYVzLuZZxkWLamcdv1mm7
f8W4IX9l3t1U2VZVxpWPMuxWtd1bG0tOMKymra/NBhkX9hXPdSFbz3VUcU/A
v1t8W9f/Gu6Hl2Hb6dnPejfvf+UYFz09nHPXH/+fV7+tD63XJOO23e+6HvHZ
GcSjHI+fxOvUF0rr4/YZ96PpZSfGZZFpo6KiourpBO8qv3LCuPJZfrjXTS4Q
ST65lmWUM9nKMi61d6wPUhOM63MnEjfaOj5ltg3fvPXyAevY/Pq85FNGYtyF
tW8d5/LbynLu1sasE8uurF1100IcpfcHft9U7Svx4XePrqaMa+sg+nV485hZ
43C/ra5uz+w/nRiDy9caBoAjZe8vyjOmWF/LuJLq3PrrhxhXdt4Qj4trLePa
ZcUY6jdr425CedxVtX7Ih864TUg1Nevmci5TOyjN8f1y30m2fXwinx8N7oXk
KUDrB8tO+q8xrU3GzYv7fd1nQvi2CcalZmmVdeR76/PnzmZxnVWWQXAtbcdG
C7eFGKwpxm3Dl7mOFMeMpq98lHts2JFD0+mr1c0b7r0nvPnz23UnV7fNMK7b
RsKD4tJJ6IPM4w2cf+XN8v8HvAO5svKkd2F+bahuEIxbJy43KioqKios9w7x
xkoqxea2ybhlc574Nkdro1N9WMRyPBdVK1dSzRdq31ZhN3yD4VzWPfGMPhjk
KIJ9LeMW8aH1FRx63mXY8mzNILav+qvI51wrn3HhY76T19Opzy55jFumVpBk
GRe+ZRrngPcTaOHFVCnGRXm+nzdmj33ZfMYte05Vy7doGf9Y7XzF/4byJbtr
w2uPzaPFfJsTtA3GdWOtBmy5p5Vxf369MfQ/6VrjYFxf7ItYbPbrx2T/+fuO
41rYd/tozX0+3N3v/fLbY6emc1Epbj7rmsSOK1vuKLG5dfrXMu6rV4/c/R7b
IgyGsMMiLXOwc8/xLPIZdxzX0iTwneJz4Vds4HnnjGXSZ05f9NXtmS+c7dYy
LlyLf3LWtef7Kes/NQn9USQx7tHRfSds/cgy7j9mnw20WD4uNyoqKiqqoua3
U8blPvvJzKPe9MMtl8epq2eEz7j2O2yr/LYsG2JcxPwyjAvPyiYI44lxfbsr
y4px/bbCr6Ftsz3stCHGzRKMyzHJllg0dreMu7l+28myr/gWMTZ5+ORGb275
697UymfuE1nG9XNYI1jWMq6OjxxTzo5Lzqmt2ynfIrEp/FdUjyjLv9MyLpyJ
zYnpjNcZqyvPVBG/FtnbZdNVXjCbq4r+t4ybdb3614DPuFpW11nd/wb2DsaF
ip3Utau+GUWRcZvTKLmV22RcPrUcarpuleL+8xjX9hEx4HAQLFnVL7UK48p2
jC0Sn2NiTC3jinPFt08e3x3E1vaZFtlt0VZ/2lmTzoWY39msPcaln/QugHzM
9C/zLePikwzvwX3UypXyGFf7ttcDbLvfv26JdcV2P2ms+6Z/LSFYlmOeW//W
CcblWqMPF1fmeudvL/e+W1xw+ofzoUtyoyS8GxUVFRXVoFw98sfHvssLu50y
rvzpfF7AH1lSXdO8bcjmBhMs5MReOv/Sg9sp3/FcppbQL6+HecYu79gtseWW
YdyyOS4c2y5fHvLHRnXsLNan+bA/JvNlGRfuRYxdGHN+t/xp79L8hZRvJXJL
Ybe99eRmWv/GMu7KzqzjDb8teYzL8WX1z5W5j07E32pZMW4ZW67PuMqdjMTs
4lq7rBjX+Zr3z0FerGWIcbOu0T/fVct5oly41h5N39v/SROMq2ujSpu6uEeE
5Nc9O82qw7jwtMb9IbbmnkkfNcG4fm5arj3lALD33jqMi0J1eJoQ+8HXFhss
NjXu9XxXrK2WK2LcUdRUfGnbUjuvT308VOMXhsMWrncGYlyxL+w6t3TB6bul
z4YYd2nnmtNB4sNU1BfHNYOGGbfrvoHn8UfnU7WWxLjwLLV+EXmjeTcgxtX6
F+/v9c7d3XVxuSnjNlwvNyoqKioqkTjX1Ms9t7jl7KDjfn4wdvd9RS0jiXHz
bGHYYO2YtwzjWvuss9kZxtWYTuwixhVzw0ehfYR8nn2xrbsJu1jG9WOKm/An
9DkXlr228Kn7lCzjovMzN1Ktb8y5cYwYV/F+ITu6FeNd+XXbMTDKY1zsuHAs
82Wv9JelHTYXd+g9g82xLLb1a1KFGNdXEUepPq9if1XbyF+uKuPiG+7nyLKM
q+Nv6voY938+alh1GLeMqB2ETdfawOrkmM1iXP//Uvrd3pvN3u3vPktthuNi
3KzlxFbyMX0XeG9nVcWmeBoYlzZStxb5jOuON7Hfwm7k8JL9Voy7ebTgatzC
tjAtuZIfH806iXF5v3Ia+koca5lWv5U7WxxrBeNmtR/GRV8uvhjYcqXIuFFR
UVHNK2Fc5Z1CXy+vp4xbtnZsEwoxrs+jsrv6+Zqs5CeqXEhF9WBlKxajUE/I
PtthYC0nnrWc5DOuzf2cpfkX870bTy+ljHvlxt+d/Lb59XPrirGomM8yk2Vc
dPPeece+86uD2o+MXSzjioX4blW0f9lBLePmLW8Z1/mkJ7U+sf/Ad5xj+oXt
5J1XyXKurYUrvtX8rGulrK1QzJnFuFWVlQNatu2m/ns6t+P6r0eF1RbjVhX/
V/0n/NrVNoc0MQqh67MKP8O1uo+Qu/fe8pRjBHgoVDe7jmARtnvQ8DU+aX6z
o7QP++u31//LSTmP85a3fsWwrSTG5VPit2y4WYxrudCPyW2CefO2IY7l02da
eFbvYBSfbRnX3xb5oUP74j+xefAwZdxzS/uDMddijMuNioqKaku6v2LHhW9R
mudwjIyLNK6yvpiyA6q2rGXc0FjK1kTNy6fkM65l1R+W/nn8bOwzrriVbd1N
aqqynjhaXMNnHg/BZfCtGFf7C/Gt2tZUv4rNs7gJf1jEuNUyrrX/Kr5XMb5W
rw4e9I52B2I+v7X/qnVVQjVUxLs+4yrfFWIetn7mufzMHuPKrmsZWP0h/g31
jXhS21feMJjbvoMQ4zaVy0ft8XN/NZ27KjLuSTVdg7iMmmBcW1Oormw96rzY
ENXm9u9ZVf7vymuk37AErPv6aDX9z//fX4P7PPGYZeyAVnCt9RdtUqP2c9sq
y7jYZn3GLVpHHGf9V+Diu9tXh/gWvf71Uamat1nzQ9NtroOQ8MWXX77dxt5h
/7nxy0Act7XVqr6x5Vr7vUxb80RbqNGIhhiX8Vf0WY6KiopqVGksbsK45+af
9la2t53cfbzPuDBbWftbXcGRspeKccWP2G6JeRTj2lo1IYlHQrVTi1iXfcC3
yNYTwidXbKtPPy9UFuPSfn2HfS6vzvb+59GUUxbjirfzxpd5fck+bc4my7hB
G/nh7ZRvEdvBv9Efq1rGPdx7MMS/+Dojy7ghsV5efiPG+aGxvvUb5zjoZz/u
z2dcptnjtLZavltfYHFwyGfZvmuwebF9xg0JW5Rs0aP+TyLj1ri31IwdZjw6
7rjjURmXNr99t+NUZT0/T5T1P67KuNxHiuyv8nEOzQsybp8nVHcbrqzCF20y
7mkX/QjbXrnxN5f7GFXpW9UBEuMq/lY5pRD36SLGtTZhZN8dqJZQ1Tq3ssnC
sRsHW73HW4+dYFzE8132fUk5tu2zv0nx//z233u975/s9b5a7o+3FrbSerlO
2BtiDqqoqKioRjR4f/g49VeGc+HbfS8/J2ML+FZ5oZrOZcpzUGMkxk2re6u9
raM19125idmnGDfzGdLns1EZl3WmVj53Ikb2D971Gsa1MZ55zM+YTP7VajPr
fnF3/cS+xbh+DuOqjAvf0le0T3zr189RbVnLcjDuKOdPfCvJtutPs4ybpTvf
n8+9TkJsOzTu8mLo/PpTlnHtGF3+AgO7/vVBrm1TcymvTWn/B9plGVc24Kp2
bSvOb1b9qbqKjHtSHwrjYg+TfwdimvWjyboHZcWBhBjXfw/ENZx3z4FN5m6d
d2wkPqrLuGzL5khq9VqbgDjSqu0V42J/LbMOMbZwrOSehzvXTjCuux5/Wy98
B+jP5zxXtY8rTtiXGFfsOjM/5SSOFeO21b/8H8mVxSc1nZEY958re70rD4yd
YWHvmHHno99yVFRUVBMS54pxdc+9/ejYD5ixBeN02fisGAMpF1PdZ4EYVwzA
9sS4lvt4jhYxrv3NWKqojq1lHHJWif1cDqiEcdkWvKP6vGUZVyypPERsN49x
xVP2u62VVNSPLuYnYdys4xTjitdZfhTmylOIe7NkGTfEvrIXV83rq3G4jpcx
OON6sad9pyDOtYyrGkJl9hlahutV/c01gA2riVzITeosM+72y/0hn8W21EQt
ni7icX3G1X+C/0Men+TlaGN93RtDOQWKGPd//3rhaquin1+t9n56M7Dp8r/h
u5bL88WFbVTXdmH2Um6uqaZUhXF/fbvvNO7zbdtKfqSLV/7DqS7jMg2mHYwB
hu3lYty8Z1eVuA5qGHFe9elLcbKKmRXHWo2rz8W2+vTHXWJc9PndZ4N43P4Y
7ONbq8f5USZgfBgVFRV1mpXacnmH2JebPj/MuHmSzbAu48Kl4kDxrXiQsRCM
IF8o+TGX3XYZxmV8J3sr62jsRu0dcS45NplnGRdlMS77Xd6+7urtXJo/P3RM
F1ZWTvBtVjyuxDYZJ9AXsmvTbtnVNV+2a/lSZ/klszxca32Tx60s1p2dPjfk
Ay3+DdVBCil0fcn+a/3cGS/L/92+59B5KnqfUuUaVB0oMW7VbdTJgVv1PJxV
xm1TcG2TdWarMC58B7+Puk/ZbHUvGZVx2YbeHym+Re+L7D7zfBEs41bNEyV/
16qMK3/YurZYzgf8VDYGFl8p1FXeKt4diG+p88O9iftdyM8cprTva/33dGJc
PXtgXZhZdYOy7l9ZfS37qy/LuDZ2Vmxrv2ftb1yMO7cx4FhqBSE75uL3J3f2
nIjLFeM6W+7cRqqux4ZRUVFRVaQaPa5OzwS0J22XbLma1mfc2Y3iZ71YT/mT
6sYJ6tkpO6QdL4lxGW+pNmtVX808u6bv/yyeZt/4J5NnWYyLL7ByKast/r7E
jf96sJgy7jfTH/e+/O5bp0+vXM+04Zbxp1a+K8u4ysPk26V9lhf7crys0xXf
5olxflb+ZivV9i3LvuI4n3HVr7oGxaJMw3476vFYxq27jSqMy3m1/v1Fy0fG
ra+zxLjWn0H38jzfBT8GIotxbWyvexd6eHso9j20bXJMoQdr10ozruUl5Wdm
XXhpHNcC9xMdU1E+pEmQz7j4GUt+zgvLuKFtwbFaV4wbvmaH/YVsjSbLtfa7
5VjfJqvpk5TfWvcDGFfjKXIpT69v9S4/GMTawri3niz27jxbcIyL//LAj27v
WDH/VFRU1CmVZd2JYN75Y8aFd58f7TsV3s9/3xoa3zSVC8faFTRNOXVtXtsy
YtkyjAuDiE/J22wZd2tj1ontMV2Ma/cjO6v4Fn32zReOcdnPl7dv9y4t/ytl
XPZ7benT3tXZj4NjTNs+K79+bhEP67d8ES3jdj0eCKlonO8z7pMn32f6QzPN
Z1wrckevrF1126E+EvIZV3zqMyrj9yKbrGzrbeVqs3ZoXZs+4/ry32vk2cCj
xqsqjEveZ/lhj5LfV4yre4XiQ7h+/GXFvMr9FpK9N/v1q8sybrq/PrfeW7pc
6jgs42K7Hfe5s4zb1DbbyNtM/i36lPq36Lulz4YYFfnruHfPRwsn8kbBsoPr
ZrCe+N5nWe69B+adJbX5lE9bjFvEsaE8UOyHtsG44+LcPDs/fsfYZs+v7PW+
Xn7hxJgKxmX+8vZe78LylpNlXGfrXdg6zkEVGTcqKuqMqHPeTWI/LONeWCp+
D824Hbumz4+Mj5g+ynMExvS3IcatantkzGX9rEI+drAs26bt7BvB7/gvc3xw
kJ6xYghxC8spXlnvvhnXYbtF2ocYF+5F0/e+7F248lGQZfMYV/PFsH7el9D6
Ylwdv+87OEkqM85nrM11IJbjfQPTOAd+viu+3/txtje3/LWr/Ss21jKWccV6
TKNWsOoGU0tJccG/HK6m1/+442q5zuxv39e6jHzbdGTcyVFVxm2CgVytMHMf
KcO4xDnY2tTcU9gO03yfA94NsU29V7MxA0X/H+yxZepvW/HeqgvGRdyHiurK
VlEWu1FDqe42xbiDmgWD2Fr4lHtJlXrE8KXPuDAp2+ccqPacJMa1rMsytkaP
GLdsG4jNxq8djescl2Hc1F++30f4o+s/AeNiz51eX+spPxe8K39m1v3H7LNj
n2W+xzzLUVFRZ0Rd8a5yKyvnVB7jiisY24QYV9ObfrbY/MRWyr1cZhuWc2k3
9li2axnXMqNyKItxqaXk1wyGOxRvq3YwVsBGq+3Y2ruw7f+79ekQ4/psm/Vd
thC2b226SP0QYl4ty7Eo1/Ik2nGz6gbZa49PxtiymctnXIxLP/Cp/LL4jvEp
e5L4VoyrsZYv7MOwLWzsM25WXSSU1k162Tz/+n4Tee86qjCujq3r8/+hqwvG
RX6sOv+vUB46+TNUYdxRlMe4xNjij+zuy4Y7qDnEvKq1Zrr2Lw75vYtxm7BR
4vfLfW1p9hsnn3HLbmd+9oKLk56580Xv0qX/TOOmZXcV48oPGVut5Vr73W7X
3cNL1NC1EuN2ed6s8KlQLjGOw+W6+23d2cD1Ltwy7kH/WfWvHzed4Nphxj2u
J9T1uDQqKiqqDY2LecW3sulefZD/vGdck9ZxSXhW9W017maa4mtHfXaofq7P
uDYPc9Vt0jYxrrZv6+oc58+47X6/eLHQe3jvf4LxXbRB29DzGsZF8tdzz/D+
fMu4SHysfg3ZbWFTxXXa9+0hH9gi1hHfnjbGtWM9y7j+cuobluW8+Ixb5Oce
Ytyplc+cXVfCHmzF8iHG1TS4OGXjw3X3SR1hTa/SR7rmkX/+y/iv+zY6Ma7d
ziT7sp9WlcnL3UVe5TriuhPnoir2vyqCl0J2PXJJZTEuTMX0V6+K4wMsU2Ux
7ig5qKqu02Y+JPoRrlTdWE0f1DUbjsNQbmLEOdB37L+WceXvzPsEtonPMVzL
ewYkxi3ThzoXWnYUrleMCLV7x1nPSbm46E/lchfjMoagPbeeLPXmNjZdu2Bc
5NhW4zHlVJ4vZlwbv9v1WDUqKipqFLXJu6odhMj7W8S4suNqzOyeUQmDKkcx
TCHGZbxMXR5U59lhOdq3EYv79Fyr8hzEJ5lnj9osnvU5V99DjAtnsS3bLsZ9
Yly2mdoakz5SDkt7DHz6ftQ+45Y9tiLOzav32qXyxvj+mCcrh5PPuHb5Mozr
XyPED9r3A/ruM65fI9jK2odDjGuleSkrG2m6+LYq41ppnci4zcpn2Spj9SYZ
t+3avjChrkEXt9LS/uAqWEk5iFwsvsmbS75ky2RZjLu8/bAWQ46DcWX7y2of
DFnVzkxfkbPrzvJF14diXHGu7bM8wbiuH/7advGjqhGk561lXNtnYjjyVeX1
Idznr8f3JnK57f/8rJWY5pDgWgTjwrX01cO91d7ii8tOYlxXK3e3P29/xWlp
6/oQ4w7F5RrGHcpHtRD5Nioq6uwqxLujMG+aUzlh3KL7uRv799nNxq/a+bJd
MlaWjyyfozxD8vhY+6tjz7VcLj9s2it7l+Xdtc2bvaW7F3s/wyMJX4hx02dd
4pM0tfJ5yrhZ+w1Nt/G2ti5w1eMqYpxJjMdt047FGFw+3VXWY/kQ40pcK/46
ihUOMa4U4mA/d1YW4/rSdMUPW2GDdnboHMbFF59js+9U2sqTddY1KYzbtmAu
y7khxuXYbdw8qvouMsS4WX7I8JTYbBAPecyPdRm3jojBbHJ7dRgXP2JsrvRf
EceW2Z4Y1z63eI/wYPmaa5vPsS5epEQu+azrwTKuzmX18zBg3LL5z0e1+apv
LONy7vgO/3J9inGRagv54zExLrVyUeTZqKioD1mj8K6tGcR7wyurj13MaZ7/
mRjX8pLPTBr7cN8X4zbhtxx+/j4f8vmt+lyy/K1nrhjXHiesSd+IccUEtq/E
t1LVusF+LK7iLaseFzmm8vIRnTXGzbMjMa+IcbPGQZZxsemG4p05/2Jd5eau
eq2HGNcycF4dJS2Tx7i+YObXP633nq7e6t2c+7K3ebAc9q0+qPZO4DSoLZsj
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
+zPDuG6sFGBUZ6edO7bbOr6V7SCJwY1sG9WkxLTwrRjXzuu6fVFRTcvZZU28
B1z7xfyj3vnF2ULG9WUZ98SzI8B5YlzV12naNqSxnWVc2duszQHGteO/upwL
0yLLuDr2LjmXPhC/F439246pytMojBuKey6SagCJcfmN7YnxOtN8xpVNTGN5
8a1vvwoxblt+ypKr3dznWsRv2COLcfNEfd2s6dIk8q2uXTHuqNvy60hlyb6j
8aW4yDL9ZRm37P+gLOOqLpb8FfivWL+Epvq+DOPa6+jHxf496fY3Tn5ueqQ8
xteu/L1389onyfUcZtwybVTOxOXt4WMelWuKGPf399V9hZvW5uF+Kmvzxf4K
31rGZfobj2tDfQTjWvvtcX3cwW+fcTUvr6+ZLx9fy6hi3DZ8jdt85tHfg3HW
Xu+be/sDu20yXjqX5PR0cvFij9yn77Pc9Rgx6mwpj2Uj50adNaX5pkyuejHu
ucUtJ+63TCvcjslPVeaZrnENPnqwgxgXHlTenzrsIjH2VA5f2MXlzu3vS354
1o9UsbUhxvWXz2PcpbsXnbY2Znt7W8e5Rbsc39jaSP74n3Eo8+GyKv5/bagK
46qt8g+uGiOp9ys6t1wjPuPa+j92vC42sPWxbNxtF/mqxbj6Df9wLLRRvtOI
49A5zmKvIsa1Cs3LWkfTD1vO1TNO5dk7H+7uOxWtT05W2YzLMq5s6lxz+Gd/
9+iq05WH072bT5dSjpHtsA7jZp0/+y4ka16Za6KIcf/vj+dON6Yv9O+nS6Xz
JeUJuxq1XJrYFmI7XfNrkWBsn3G5b5JP6vDNihM+yTDuzs6iWwfGFeeyrKt1
fziodY/e/v7IPdeq+CiLcYv8quFbXbtiWuf7NYacUU2LY714f89piHHnvfhb
y7gTMC6MOpuKDBv1IUqca3+rftDFxWsp4/Kbz8t3Fp0ytxlgXGvrkC2V8RXT
xbjWpsbYbRS+tVKsphiXaZZNlf/qbpIDyebDsgxcJJYjx9TMjX86WcZtO6eW
eEy8punqU7XRzwtiGRcG7mosMKofbVVx/Ylxs865lX03IL4VP9rraBQ/XuXQ
om1VbJEwK+d+Zv6rIZaFgWgjnywjm6O2nddOHYdV1eOpwriT4sdZRXl9wrGI
KcLnbKDnR9tDvqPzt847Fb1nuHv3X70bfSYJaX7hfG9laWpo+fk7AzEdsT1N
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
yjKM7w/MMnCl9iHWVk1SxpjwbV3GDdUW8vM6+zmrxFk2DxK/bd1cy/pVctZU
4Qm4TXVOyrwvzxrPK++xZdw8RrC2XjjVnkN/LFO2fo5/DrDFhRjXvo+owrdn
mXGVIwm52kVnJB63rpzPaclY2lHOJfc7e11x3b9L3pnxH9K1yrSu6kgVSYxb
dT3Z/IoYtyk/97Zk71VlWFyMK86FT5kG/4lj9Qy0jItk/8V32b233bnmZPtP
jEuea2tv9yXGffd6o/dy774TbEv+MMu4iOV2NuvVW8vqq7LimFXTtgzjcvy6
l+mciHGRn0tKfJtqbuNkPpMclo1MGxUVFTU+pXxq8k2JeYfjTo5jcAfvMhO2
lT9zUo/IMi5jv1AOEHHJYRJ3k/fM0rhNeanENz7jEhsrX1S7vnxVxax2fWun
le1WvCjetXmkxLgzs1ddnVxbK7esVJ/Vn24ZNxTjq/pCYlz55souabfp6iy2
UCdEdXrF1kVjkLKMq/Mhm7S/vOKudX54t69j95ctM7YP2QxgXMXi2nq2HKff
lrxtc2yh67Cu6MPIuJOtcTFu3v9tUpkWiUvhI1jo3nL5vPM67re/P0r/93ma
ZMZ1/5fEBzav1pB8c+FZWxMIG65lXN0XVduH/uF5yHfkM65q0h4d3e/dnvmi
d/u7z9z7BvjWMq5tV2pnfbflzp8E49o2E1+NsOvWYVz5O8suzPbrMC62XPoG
FY0t1B/iXI71x+e7vQvLW07p2AcundsYziUle66bvjGI9crg267HeFFRUVEf
moZibeeOcyWnvsnKocx9O3lPmd7zLeN6NXeVgwp/ZeoL5eW4tIwbqqkhvrQ5
hsWosm36NYf03PftdGJc3yfZ+i7DNrLbym7q50rmNzWEiCvb2pitMc4J2z9D
caDW15BjE+PRVvv8F1O1nWeKMRR9JL6ty7jIz2mdxbgcl/JE6dyk56Imw2fV
+ZAPqN6fsO+qjNt0/GOTjKvYt+2jtUbb+KEzLr4QeyXr1az9+F39fj6ljMu9
Ujrcq37tWcY9fLPS+fGMcv7Et29+I052N6Mm74BxxbaI3FIra1dc7VbVrEWW
cVlHuYjlZ8M82XuRGBemhUV/od6V936mCV9vfNXfv910stOVX9z5O28unIjp
lX0Yf2dsx1XjtQ+Sd4vU/S26F+sZJt8pMe4/Zp8N228Ny9p43JR5+/PFuF2P
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
r7ryGdfyqWTzL5Ez2Wdc8i8pJnXn+Wr6HZFrSowrzuUZtbOz6LiWHFVI70BH
ZVyub7iW3MzUM0KjMK5qrFfN0adrgT6zObOC+8i5J9hr6vzKWvJefsC4XY/L
oqKioqKa0RDT2hpCtlauat9qPeuvnNiC09hcU0PXbV/8bOy+MO7sxl5qs5Q/
aB7jypcY/iHXsZjVj83VszNks5V+erOW8q3yOuOvDHuSLwqJcflcWbvaW5q7
6GRrHPm1b0KMGxr7FjGuzXskKWdSiHERTIsvX1dxo778cXweM8C4nEf/3UXT
jCt/x677ZpR+nER1zbjjYDbsz5uHg5y4cOIotmj8Lf32y8adtU5T75/Gybji
3DqMe5okXhW7YnfFLxtbI8zp5PGt5VUEz968/1Xv4bMZJ02zjHt8vew41oQ5
5R90kNTNE+MS14sG9V8H1+4otnCeY2Jbq6zt4ZuSt71hn+7q7dG7AfqI3Fah
dviMi/1Zz+OUlV/uHdcJsnUSJ2BsFhUVFRU1uhzbWqb1/JEt36b5p0wcbzpv
4bi2XDpNHGz8msXV+DXLr1ZsC//hK2zrkMKOyo2MFK8Kp8K7yOZr8mvfyjYI
y4px4R72JRst08W48pOFUV2u49Vp558M31rGpc1aP8S47jnbb3fVXLa+v7Vq
2VjGVf4t7Rvxzn5SGTdP9Ltilu2xNcW4yuPTdZ+03Y9dCL7tmnFDsuPbJpiu
ScbVOZVvRpkYWfbH/lEXMbVV9ebVYyf8lN+9Pj35oa38WjdZsjZZMS7vMVQH
B4l1fbaVYK6DwD0q5Nssxk3jX44WnJ+yey8780Vqw7WMy/bzfKWLxPZDjJtV
L1yMm2c/buK9h2XcUD1eK/t+U8/tIcbFTznacaOioqLOtIK2W83z3nVqmTS2
1+alEjPbWrpi6YRxQ89cMa64DtbRs1TTYSDZavm0jCsmRDCrZVwEQ7JNsbX1
ZfZz71rGDT03Fadr2deqKuOqbTCZavTqeCy3syzLwIfiWzQpLFeHzcS4oRzI
jE9GidE9bT7Ko/TjOPWhMK5EPKtYk99ZcbdlzumojHsa6usuzX7TW1+baW37
5KOSX3CZ5ZXLSX6uElxKHdcinqXujWrf+J+qhWMZV5xb1C4xrjiX+xXsyndN
F89ij4RfLeO6nIP9Z41yTxHLS7vs9sW5df4Pg2dteca1Obba9hsgZ7PyUcG4
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
erTt3V49jHRczVlWFEVR+gFcj057b2nSEDiuH9ut4hos5waH7vfPmVPz3fPL
kvLT6x3v5txGaY7LGlmj6risp4XctJfPapWvZ1pk/1zkL1e9PoOGOm6YQXRc
uiueC3+Fg3IO5ePDuSC3lznIcetmb8/nX/bNPFxcw+J1rDjHLdNzpePCLQ/f
rDh9D46L3uRl9Cd3OS7imNJP02BvX/BZ+I6O39Ui1vvi/V7iWs1YL/Yw4ueO
/6drV43j0nPhuDjGsP1AXufknF467neNZcN/z7WvkX8xvRrumauOqyiKopQI
47TISabj3lpaNtBzTTy1Qsc11A46sWTfcbPWdaLjgjJqLNNx95trpY39+kFU
rx7bcTEmrnpdswC/VcdVmJedpI5xESBX2Hj1m2WDdETOMYU/jq/eiewhVJTj
du2Li6N2P9yVKQPvR21jzsHF+iKWV3Z+MmKIsm9NnOPSy96/zj6XxeWjc/M3
vPnHN4zr1VduGxZqbsfN8p5wXHt7Fmv3vVfn8TnQh88fBTFfzIUF6K/79mzT
nN/gt9JxXTFk+z46Ltjcn/EmZv7Le1D/wptcvGrAPvhu6suQ4+I95HphWz5+
OvEOX2+FHJc9cnmNuupxj6IoijL6mDitcNyxpZp3f2HMIB23qvVjjpPtuOBK
bc+bXqhnct2F5dkgZ7nwdW75Leo/56kBPQjEjfkxFgasNVL1umYBfotYLjg/
XjdUvU5Fk9ZxhhHGRrNsZ5n7Jm7Z9b3TYJ45nofvGlxVzp+d2J72ro1PeI3G
igGvi4ut00H5evgh3BQkXecox+038Hw7dkp2z+sG+fy0jgsXezh5pWcsFo4r
a1hjTq6c+1zIceJwXGCvS2NzJnBQ23Hht4d7K+Y2Y7CkVyy589kfBm4sHZf7
fW7/nvmtZ7wWudW24+Ja0cbLprfdPDQgnhvEbf06GOq4iqIoSj+g48rcZOm3
A+O4jOmaXgTt2GsexwXw21uPlg1FxnOxLNS2GlbHZe5i0v6cVTtunjpU6CVE
zyVV7/9hp99eLfN/s6xrmfsh6rG0jjs7c9v4Jx0X9b4B4riy5rC9DLD8InmM
8ej1lre+MmH66759n7+ekn0smNu+IzE31zWHNs5xXXWc6XuIYyZZL/gZHLfX
81BfqWzHtTlvbnU5LvcX87HhlscvNs1zge24edcB+dlwWrnf6bhkfvq643Ud
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
4HzfMPfsuOt3EfOW6Xfr21OGhdptcxt+m9ZxQ9T2AuezH7MdNzJGy3OIqf9r
eTDPM3GxR7nserfjAsSN4bn2/sM84/WTqa778dvVFbulZ1vbIR2XzO9tBXOX
c3/GLcdFTLbX81w5zuzHZNZxSTiuf75WFEVRFMVNqJcQ47m+484tTCc/j6//
j/Fb6bjsJfSvh//qPR+39ZrJh9+aWOAoOi7qomIu7ijNx3WhPYSq4/ffXxjP
RVwQlFnntxd0VfbCRS1f6bdwXtRITrNMziO2cz3htZgDUPX+z0ISx4WXwdcY
z4Tnz81+4937fsG7Ot8wBLG9pG5r/fb2jP3CXx2OW+i5qC7ycc25qLNutuPC
B7t6FPuxVNSvctW+CrbBX3bwfiL2bDsuv0uJjvnPL0zOMtYBxzvYf71ogONK
z50/mDa1wAD6H+E+5pO7ls0ay8H6quMqiqIolwV73LLk+6t/Xo97rfRcLoe5
xiv1e8nGasJxpecG86tiHPeKH0ug4z6ozRowj3dU5uWiTgzm44Kq16VM1HHL
I8+8zqLyatOuKx0XoPcpSbKMNz9vm/xdxnFxH/zWVaunNn3dEPX9KqrGVtE8
eXFicpMfbDYN7t/naMeVz8Nzgnxj8dvr9Fr73EEPTBCnDeKsBZ/D5LJDLuq7
J7YLMW3gclzUYzZeK7YrcFm/n71crty/5tznX9vl+8Er4xzXPg6l4+I2HBfH
+unbA2+7uWnA7U8fT0KOu3L4nYnTMyaP2l5meSKua/rl+usW7B/NV1YURVFG
nVAu2bMw8rwuHFYSuLCZI+XXWW6dP+G3SR33j99fmLgvXBdcmd8JrRvn6brW
n3WXkW+IZdEFb05+F4xLB3WMmgTMv70Mjku/VccdHKpyXBdVOS5rcxW9T4sm
ynHvbTRNvSLUfQLw3CDmKJ7X5bj2+cH43l7YW22PjXDcfp7PQo4r4rnYLvbS
NcfHT+0cbrq/03Ht7aXDut5P7gsR07XnAcchcwyk48reQex5BL7bmQg5Lv7i
e4rnyfpUqLkVclxRf0prUCmKoiijiPFReGlwDfwk7LicvyMcNnJZol8uXnPt
u3nDfO2B98enF4nO8dJxg9htr1hCa722N74zYBn0W8DaKsjpA1WO0bMCx42L
MfV7LF0Wz58/MrBXbtXroww/cFs5Txe3XfNxkasMzo/Xux4r2nFt8tSzltiO
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
Sh6XBde+xH2j7Lj4C88FcFy4LTwX3Lj2Z+/NeXW1tpI6rtZNVpR8cG6PmScK
j/TPXXBPzg1gDSWc5+QcGem4c/v33L+twlfhuBsvO3154IP2823HBTeXXvZ0
3GB7eszJRW4x47ZZPJfQl4P3XWzHcQH7DcXud+m4WmtZURRFyUngm3XZZ+TE
eG4eP8JyON9VOu4//HMx599kGYtLx+V9mKdblIOwfvDkxN9M3aHvJ68Y8D/u
r9rLqgKf6/rKhKHqdSkC1s+W84sbW/OGtcVvTO0xxnHpulev/KnyObr1vVPT
H2ju2bGBc9SDPMsU/agVRXHTmcvuxypxjvEdl55b39sPfTfR62fleNLgclzG
emXus3Rcu0culoceQqytzPuRPx30yo05l+bpH5QWbkPovRd712G2n6/9hBRF
UZTCWDgK8n9xm4571tw0ZBmHYzl03Ae1WTNn9h/iWnOva89JkLFgML64VpjL
Afgs/Ad9ctVx2/2DhnkuLsan0k+Pduvem1ebBvk823Hpt4PiuOwbxHGu+S7k
zI1QFCVMe07PTide2vKvO6svg1pRiE3ajmt+Z35uGA7ftOc+SJ+l47q+18jV
sB0Xy3m4d9tbP5kycDlpHTeqv1Ch+yviPZI6brAc/1pd1Z+/oiiKMhrIWlSc
n3tlfsebXqgbso7HOb918uG3oZrIhTiuNc8Xjov34nsfvTo19XnSrjO81nbc
h5NfGVCPqmpXqwo47uNHw7v9SR3XPLd1H3KykbP8x6cXBvjul3//t8pj2eq4
ilI+oZpNvuPSdxmzRM/Yrt8O33HxP+ohIxZLUv9m+Y5L3n7o5Cp9laC2MjC9
f/vguNxn+Mv9gxi17DuUaBkiH0XnXCiKoihFEKpdjPO4cNyL97vebynqRkqc
jpui5lTs+orrvVjejYXdoHduHsdFHA/wPtTdBXC8UZqPmgY6LrwPVL0+aYDX
Yu7c9smpAfehF5IrJsvtw+P4rLHdAI+N3fyPyupQcV2RJ4l+WaE6bgV8nxRF
CRPULfZzlm3HZR1ifD/hcuxf+8fnF+Y+9v356cOuyV/u9R0/e/80lJeM21GO
+49au5Y6HBZE5ffS0/vhuMxVlo7LGgKJ97nwdvp51ceBoiiKMvyYnCffcc1t
0VcI3ri6mT4fuLYwZbjin5ODa7R547iOHqB03Gu1XQPe81mKWtFwGcRvMbdX
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
NfHkmOehd+7d9dOez0vyfgD9heKeF3JcUxtlJzSesGtjVX3MKIqiDBO2445K
jXvbO+m3aRyXubfoT4sayzIfGX4bjNszzq2R433puG9+Oi3cN+i4UbnEuJ81
oJIu8/GjMQPmt1btilmA+1W97lGOWySIV8taYP1y3PreaXBMo96M7Fmtc3IV
pXoCx2LO08JRyHHxF156b30xcFzEc+m3LsdFfWZ8/5GvDJI6brA+9aNwD9+c
2zjxFDHVU0Max8U1uqzvScfFshJ9BovNjuPKPhfis+n4sNY0UBRFSULw+0nf
krHdAVi/zNtl1YIaq2/lGq/bjitrIXO/ZVpHEdNibBfn1plGs9C6UPvn8d5M
x02zTPpt1Z6YlSodlz1v+9G313ZczMdFvjJqj4Gsy8UxE3fdCI776HmbB5tN
MSd3tHpxK8qwErgsrz3RLXlbOC7+wnG/bUzG5ipffOz0vcP/cFwSctyI3wDp
uHbubhYePW+K3yT3c+ik9b39/7+9c+uK4lrX8D/fN2uMfbEu1s0aOxcrQ3cw
aiIeo0BGQDQKDUKDCh1UQFrToPEQk3hKdq5q886qd/Y3Z1d117ka+C6eId10
11m6n/pOQbu7bz6D8zqunJc7ynH9vlTW8UVPMJ4Lzlvq1zm5/tv0taQoijLu
HJf+B/5MnqKOu7Y6O9hvSuZe5nFcL9aM5SHeJR2X60/ql1wWWNePMxOm15M/
pycO5NGiPpa1pE14YlHguHXM0YmDjltHTTA8GvFi3jPBOr/8z3/ZmblfT/x3
cOPKF5m358OH8F91XEU5wkjHlfnCnufmcVz0m5KOmzZXzP6+oONi2+G49FzM
MEp6bdaa3VFeiTzlYcvE7+G4cf2X5bnp15C59WXWcfmzOH+NX1OKoihK6fAz
gHWu/Gwu6rhwIcRynXXhO7uMg2esMbSfT7bHRui4gPFcAuet2oXgP4j3pXHc
cahlLXIuQV11xHHU6bjoJ4Zzij5bAOeZvafKcNwkfur1Yxj42c99aPpvhaIo
LrKXsY0d8j7s4WcS4rnD/Ba8fb9lwN8A6bisL01br1DW/EJ6JLZnmONWwSiH
vXI/JI1fD7irrC+TMd2ScrwVRVGU8SJpZlB7t1hOapLj2p9z1ORKxx2Yu3v4
GNu9urVVu+MCzFZNis+yt3FTflgU5lc36bikjnzpJMed/PZfBswTgucitgtm
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
+24bF+OVr4sc9/StzeDUXNv82+9NpC5bBDhupdeKPMcxtbV0XEDXHpYLPeC4
Op9IURSlVIyHSi8Vc2dHOS6QjivjuU3MEmRMmY4LuC/X7v1kyON68DV4Wtkz
arKCfF3kHZddR1s2PF7sE4Xn5OzhcXfc7utOcGVj2XCmFdbiyu+4Tf+fVRSl
GI5LSseNc1p6r3BcZznSTz3HPfVDy7gs4HLhtY7jSnc6Rm5b577ExU/LxtTS
RteJu589ZzvouPTbUfW+AzN49TNGURSlVKTj8rmzd7eC/b3VVF4Ad7x0d62/
vOh7QWP7I+7Dm8eHnvv4aSeX4yIvuCnHRf0p48jwvHF1XPRPRj9nzlryj3NR
x0U8OO88X3VcRVHI0NzijJ5BR5Y1txbhuE5/Iv4dMW4d5VD5MeBj5ruVn9OK
83xx3ui4fI6xWn+9fCz9lts3cg4vrw/tSaUoilIaTt8oUX94Y2l0LJdsde6G
yxK1sY3uU4zjgjyOS88s6k9ZHdt33KZdNq/jomY47zGE1+btzZyXH7bmDNZx
xezDpv+vKoqSzECe8ZDc4rTLvLrxwMxjhXd+u/zcQI+N6zVlt2VJ3B+TPXj9
bRmW+6y+OxR4Y+WOG5OjzP5Waep/U29bq5uq77KZURTze/ViRVGUZPpzEfI5
rpOv3PCcFf+ePOYjgay9luC4r3sbhrodF9AN89QT1wVi3MPyiLHtrM3NGg8f
C8dlz3CdG6QoY4UTS02qpWWOacutffWXA86uPDWcbz8KJtc6xm+l4159uGvA
787/uGaeBxfbbozO7/tr85qF4zrbndC/ysaCbb1m88f8pEHnlA5ZVQ9nsz72
XBaP3Zru3f48I943EdvXr/FW51UURSF+vRGcMK0XIFbn9K1q2nFFbFo+zuq4
iJ+W1YM4j+Oip3CdfYXzkKaXFOYN53Fc9quqc39utOcMvGejjqso40ncHJ+B
ulrZ10m4Yhx0XCwbnkqHhdfyX+m43A78bmqzY8DP0nHPrQ72Q3Lqgb1ZANiX
ifl1g+O4vgNrXkn115eYjZsm33gYQ3tQCR+VTm3rdaN7Ik7duJ9n78/rja4R
vU4URTnp+E4I8B0/jROgPxWws3bHxAn82UjsPZUlJlum4+Zh3P0WrK9OjXwN
HBf5zCDr8lEXXuecYnVcRRkfrIOy/1NSbi/dVda8+h6bEA/lzFU6rXwOTju3
tRfc3ekYvl9eCr5a2HHej/dcub9vwOsn7h0Y4LfScePmujr76vtIqxu/v/Kx
nY3Q/Lk6bsgYOx4XcdzU66Tj8hw7NdwivovXSOflY5kPL38vfFdjvIqinETo
hOxTnMbvpOPaut6G63HNvjg9+ft1xvDcV70Hqf0KucLIWQZ1+yPnFo3D7KIi
jot+U6zXrcNxd18eGPI6rpx9pY6rKM0hHVf2IjY/J82SPXSC9lYnuP1k34C8
0qsPe8HknbYBHirX8fdf+0H3VQg8FPHYW09+MkjHbS1cDO4e/k1ud3+yTgu/
ZU9dOu7Oiz3DN2uo2ez7snTcVE6K+2zwmyjW63i6cFz2a+7HHDOuR4m/9mL6
aVe6Pj8vOUPdOB3XuXbkPRJvRpHO5FUU5aTh950aNUMIMVH0YAbm/eI+e+P7
wv0wvSsfj3TcTx9D5HPIL8YMnNatydod9/Mfu8Zxsa1pnbwucFw4AzeNtyIe
ztfnWR/9OM269t/24yYfPoTbSoo4btPXs6Icd+iunK9jcnVJNG+HLicd90K7
Z1y20wtBrNV33DdvHhlmpr4Mer+uWy+Fr0rH/fPzz8Fv77eDF+82DHgt/oXf
Ssfdfbka7L5eMq99+KxnwH21Pz+/cBx3cWffxnPhuHgOJNUE+7ON6LlxMWDG
cAccV+axquPmvx6FF9a9PtaQy9rc3MuVMVxZ/80aXnVdRVGOOXH9YzH7dsAh
9laDq3eWDNZt6ZMFHVf6tU/u5XmOS88dFR+lF9Fx0ecYVO2OeR03T71vVnjM
EFNF/nHa9xV1XMSBES9OEzOG105v7hvUcRVlfEiMuzIX2XPcuP5QdlmifxQc
F/9352cmDPDYjc6MAf76+XPXcdy377eCj5+eGt78vmUe//V/zw10XHoufvf6
900D3ovnjd8Kx8XywfuPO/Zn8zf5r9Bx6blhnDjMY4Z3yzxmWROM2DD6N9tY
3OG+SsdFjyvEmicPXRmY5/laxP78PlZak5nvepUxc+mJFRxPP4Zb2T4xJ8D2
GD258dz/B6XcyAQ=
          "], {{0, 505.}, {953., 0}}, {0, 255}, 
          ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
          Association[
           "Exif" -> Association[
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"], 
            "GeoMetaInformation" -> {
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> 
              "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
              "Projection" -> {
               "LambertAzimuthal", "Centering" -> 
                GeoPosition[{37.2545683407227, -95.8414785}], 
                "LongitudeDetermination" -> -95.8414785}, 
              "PlotRange" -> {{-0.4987351801454361, 
               0.4987351801454361}, {-0.23235190949714024`, 
               0.2960969433641501}}, 
              "LonLatBox" -> {{-140.0585123974681, -51.62444460253189}, {
               19.62872708851597, 54.2822674075557}}, "GeoModel" -> 
              "ITRF00"}]], Selectable -> False], DefaultBaseStyle -> 
        "ImageGraphics", ImageSizeRaw -> {953., 505.}, 
        PlotRange -> {{0, 953.}, {0, 505.}}]], 
      PolygonBox[{{-0.4987351801454361, -0.23235190949714024`}, \
{-0.4987351801454361, 0.2960969433641501}, {0.4987351801454361, 
       0.2960969433641501}, {
       0.4987351801454361, -0.23235190949714024`}, {-0.4987351801454361, \
-0.23235190949714024`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.29924110808726173`, -0.12666213892488218`}, {
         0.4987351801454361, -0.12666213892488218`}, {
         0.4987351801454361, -0.23235190949714024`}, {
         0.29924110808726173`, -0.23235190949714024`}, {
         0.29924110808726173`, -0.12666213892488218`}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     NamespaceBox[{
       {Hue[0, 1, 0.8], AbsoluteThickness[1.6], Opacity[0.7], Arrowheads[
        0.025], {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
            "VertexID$2", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], 
         InsetBox["1100", DynamicLocation[
          "EdgeLabelID$1", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$4", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], 
         InsetBox["1400", DynamicLocation[
          "EdgeLabelID$2", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$5", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$3"], 
         InsetBox["2000", DynamicLocation[
          "EdgeLabelID$3", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$6", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$4"], 
         InsetBox["2600", DynamicLocation[
          "EdgeLabelID$4", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
            "VertexID$3", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$5"], 
         InsetBox["1300", DynamicLocation[
          "EdgeLabelID$5", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
             "VertexID$5", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$6"], 
         InsetBox["2000", DynamicLocation[
          "EdgeLabelID$6", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
            "VertexID$4", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$7"], 
         InsetBox["780", DynamicLocation[
          "EdgeLabelID$7", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
             "VertexID$5", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$8"], 
         InsetBox["1000", DynamicLocation[
          "EdgeLabelID$8", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
            "VertexID$5", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$9"], 
         InsetBox["900", DynamicLocation[
          "EdgeLabelID$9", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {GrayLevel[0.75], 
           LineBox[{
            DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
             "VertexID$6", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$10"], 
         InsetBox["1300", DynamicLocation[
          "EdgeLabelID$10", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
            "VertexID$7", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$11"], 
         InsetBox["800", DynamicLocation[
          "EdgeLabelID$11", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
            "VertexID$7", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$12"], 
         InsetBox["200", DynamicLocation[
          "EdgeLabelID$12", Automatic, Scaled[0.5]], ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{Hue[0, 1, 0.8], Opacity[1], AbsoluteThickness[
        1.6]}], 
        TagBox[{
          
          TagBox[DiskBox[{-0.32234075554259, -0.018247642042027872}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$1"], InsetBox[
           TemplateBox[{"\"Los Angeles\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"LosAngeles\"", ",", "\"California\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$1"], 
        TagBox[{
          
          TagBox[DiskBox[{-0.3064773039763161, 0.22700006000715162}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$2"], InsetBox[
           TemplateBox[{"\"Seattle\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Seattle\"", ",", "\"Washington\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Seattle\\\", \\\"Washington\\\", \\\
\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$2"], 
        TagBox[{
          
          TagBox[DiskBox[{-0.12103054562991405, 0.04963160801882573}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$3"], InsetBox[
           TemplateBox[{"\"Denver\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Denver\"", ",", "\"Colorado\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Denver\\\", \\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$3"], 
        TagBox[{
          
          TagBox[DiskBox[{-0.013566920829581513, -0.07776434456239355}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$4"], InsetBox[
           TemplateBox[{"\"Dallas\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
                    "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$4"], 
        TagBox[{
          
          TagBox[DiskBox[{0.10598864412395083, 0.08466370123400384}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$5"], InsetBox[
           TemplateBox[{"\"Chicago\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Chicago\"", ",", "\"Illinois\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$5"], 
        TagBox[{
          
          TagBox[DiskBox[{0.2532325903134739, 0.05444266519350439}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$6"], InsetBox[
           TemplateBox[{"\"Washington\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"Washington\"", ",", "\"DistrictOfColumbia\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             "\"Entity[\\\"City\\\", {\\\"Washington\\\", \
\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$6", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$6"], 
        TagBox[{
          
          TagBox[DiskBox[{0.28622686395315666, 0.09368945608495083}, 
            0.0051046076049744895],
           "DynamicName",
           BoxID -> "VertexID$7"], InsetBox[
           TemplateBox[{"\"New York City\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"City\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "\"NewYork\"", ",", "\"NewYork\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
             
             "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\""},
            "EntityTraditionalFramed"], 
           Offset[{2, 2}, DynamicLocation[
            "VertexID$7", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]},
         "DynamicName",
         BoxID -> "VertexLabelID$7"]}}], 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.2545683407227, -95.8414785}], 
       "LongitudeDetermination" -> -95.8414785}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.2545683407227, -95.8414785}], 
       "LongitudeDetermination" -> -95.8414785}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->{828.8786010742188, Automatic},
  Method->{"VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        DynamicNamespace[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           Directive[
            Arrowheads[0.025], 
            Hue[0, 1, 0.8, 0.7], 
            AbsoluteThickness[1.6]], {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$2", Automatic, Center]}], 
             "EdgeLabelID$1"], 
            Text[1100, 
             DynamicLocation["EdgeLabelID$1", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$1", Automatic, Center], 
                DynamicLocation["VertexID$4", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$2"], 
            Text[1400, 
             DynamicLocation["EdgeLabelID$2", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$1", Automatic, Center], 
                DynamicLocation["VertexID$5", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$3"], 
            Text[2000, 
             DynamicLocation["EdgeLabelID$3", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$1", Automatic, Center], 
                DynamicLocation["VertexID$6", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$4"], 
            Text[2600, 
             DynamicLocation["EdgeLabelID$4", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}], 
             "EdgeLabelID$5"], 
            Text[1300, 
             DynamicLocation["EdgeLabelID$5", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$2", Automatic, Center], 
                DynamicLocation["VertexID$5", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$6"], 
            Text[2000, 
             DynamicLocation["EdgeLabelID$6", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}], 
             "EdgeLabelID$7"], 
            Text[780, 
             DynamicLocation["EdgeLabelID$7", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$3", Automatic, Center], 
                DynamicLocation["VertexID$5", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$8"], 
            Text[1000, 
             DynamicLocation["EdgeLabelID$8", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}], 
             "EdgeLabelID$9"], 
            Text[900, 
             DynamicLocation["EdgeLabelID$9", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Style[
              Line[{
                DynamicLocation["VertexID$4", Automatic, Center], 
                DynamicLocation["VertexID$6", Automatic, Center]}], 
              Directive[
               GrayLevel[0.75]]], "EdgeLabelID$10"], 
            Text[1300, 
             DynamicLocation["EdgeLabelID$10", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}], 
             "EdgeLabelID$11"], 
            Text[800, 
             DynamicLocation["EdgeLabelID$11", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
            DynamicName[
             Line[{
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}], 
             "EdgeLabelID$12"], 
            Text[200, 
             DynamicLocation["EdgeLabelID$12", Automatic, 
              Scaled[0.5]], 
             ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           Directive[
            EdgeForm[{
              Hue[0, 1, 0.8, 1], 
              AbsoluteThickness[1.6]}], 
            GrayLevel[1]], 
           DynamicName[{
             DynamicName[
              
              Disk[{-0.32234075554259, -0.018247642042027872`}, 
               0.0051046076049744895`], "VertexID$1"], 
             Text[
              Entity["City", {"LosAngeles", "California", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$1"], 
           DynamicName[{
             DynamicName[
              
              Disk[{-0.3064773039763161, 0.22700006000715162`}, 
               0.0051046076049744895`], "VertexID$2"], 
             Text[
              Entity["City", {"Seattle", "Washington", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$2"], 
           DynamicName[{
             DynamicName[
              
              Disk[{-0.12103054562991405`, 0.04963160801882573}, 
               0.0051046076049744895`], "VertexID$3"], 
             Text[
              Entity["City", {"Denver", "Colorado", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$3"], 
           DynamicName[{
             DynamicName[
              
              Disk[{-0.013566920829581513`, -0.07776434456239355}, 
               0.0051046076049744895`], "VertexID$4"], 
             Text[
              Entity["City", {"Dallas", "Texas", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$4"], 
           DynamicName[{
             DynamicName[
              
              Disk[{0.10598864412395083`, 0.08466370123400384}, 
               0.0051046076049744895`], "VertexID$5"], 
             Text[
              Entity["City", {"Chicago", "Illinois", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$5"], 
           DynamicName[{
             DynamicName[
              
              Disk[{0.2532325903134739, 0.05444266519350439}, 
               0.0051046076049744895`], "VertexID$6"], 
             Text[
              Entity[
              "City", {"Washington", "DistrictOfColumbia", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$6"], 
           DynamicName[{
             DynamicName[
              
              Disk[{0.28622686395315666`, 0.09368945608495083}, 
               0.0051046076049744895`], "VertexID$7"], 
             Text[
              Entity["City", {"NewYork", "NewYork", "UnitedStates"}], 
              Offset[{2, 2}, 
               DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
            "VertexLabelID$7"]}}]}, {
       GeoRange -> Entity["Country", "UnitedStates"], 
        Method -> {"VectorMapRemoveLabels" -> True}, GeoBackground -> 
        GeoStyling["GeoPlotMap"]}]], 
    "BasicGeoRange" -> {{25.1246466, 
     49.3844900814454}, {-124.73315100000002`, -66.94980599999997}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{37.2545683407227, -95.8414785}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-0.4987351801454361, 
       0.4987351801454361}, {-0.23235190949714024`, 0.2960969433641501}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{37.2545683407227, -95.8414785}]}, 
      GeoRange -> {{23.91165442592773, 
       50.59748225551767}, {-127.62231825000002`, -64.06063874999997}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 4, 
      MetaInformation -> {
       "GeoModel" -> "ITRF00", 
        "LonLatBox" -> {{-140.0585123974681, -51.62444460253189}, {
         19.62872708851597, 54.2822674075557}}, 
        "PlotRange" -> {{-0.4987351801454361, 
         0.4987351801454361}, {-0.23235190949714024`, 0.2960969433641501}}, 
        "Projection" -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{37.2545683407227, -95.8414785}], 
          "LongitudeDetermination" -> -95.8414785}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-0.4987351801454361, 
   0.4987351801454361}, {-0.23235190949714024`, 0.2960969433641501}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.845439183807899*^9, 3.84543921204021*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"ea7fbb36-c35b-4420-b103-519f05dba8af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Combinatorica`\>\"", 
  "]"}], "\[IndentingNewLine]", "$ContextPath"}], "Input",
 CellChangeTimes->{{3.84543931328627*^9, 3.845439313557129*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"5646a571-affd-4c84-8a7b-9f898eda56ab"],

Cell[BoxData[
 TemplateBox[{
  "General", "compat", 
   "\"Combinatorica Graph and Permutations functionality has been superseded \
by preloaded functionality. The package now being loaded may conflict with \
this. Please see the Compatibility Guide for details.\"", 2, 152, 7, 
   17084256963229688215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845439315130908*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"c381ee14-5ad0-4a9a-a6db-4a81c6bba64e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Combinatorica`\"\>", ",", "\<\"SVTools`\"\>", 
   ",", "\<\"Utilities`URLTools`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"XMPTools`Wrappers`\"\>", ",", "\<\"XMPTools`Helpers`\"\>", 
   ",", "\<\"DocumentationSearch`\"\>", ",", "\<\"ResourceLocator`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.845439315331624*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"ea0e50f9-49b7-4a3d-891e-7cd47a4717c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"\[Infinity]", "52", "29", "35", "29"},
      {"46", "\[Infinity]", "62", "21", "44"},
      {"29", "62", "\[Infinity]", "50", "27"},
      {"37", "23", "50", "\[Infinity]", "\[Infinity]"},
      {"24", "44", "27", "\[Infinity]", "\[Infinity]"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", " ", 
   RowBox[{"FromAdjacencyMatrix", "[", 
    RowBox[{"g", ",", "EdgeWeight", "  ", ",", 
     RowBox[{"Type", "\[Rule]", "Directed"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", " ", "=", " ", 
   RowBox[{"SetVertexLabels", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\:0417\:0435\:043c\:043b\:044f\>\"", ",", 
       "\"\<\:0427.\:0421\:043f\:0443\:0442\>\"", ",", 
       "\"\<\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\>\"", ",", 
       "\"\<\:0437\:0430\:043c\:043e\:043a\>\"", ",", 
       "\"\<\:0430\:0441\:0442\:0435\:0440\:043e\:0438\:0434\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowGraph", "[", 
  RowBox[{
   RowBox[{"SetEdgeLabels", "[", 
    RowBox[{"G", ",", 
     RowBox[{"GetEdgeWeights", "[", "G", "]"}]}], "]"}], ",", 
   RowBox[{"EdgeLabelPosition", "->", "Center"}]}], "]"}]}], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"b8f2eed2-f63e-4e75-a024-66858b86875a"],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0], 
      InsetBox["52", {0.35932148066442715, 0.8818183308477237}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0], 
      InsetBox["29", {0.35932148066442715, 0.5805532227469015}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.6458416248560779, 
      0.}}], 
     {GrayLevel[0], 
      InsetBox["35", {0.6458416248560779, 0.4874571845315417}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0], 
      InsetBox["29", {0.8229208124280389, 0.7311857767973126}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0], 
      InsetBox["46", {0.35932148066442715, 0.8818183308477237}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.07280133647277627,
       0.18619207643071953`}}], 
     {GrayLevel[0], 
      InsetBox["62", {0.0728013364727763, 0.4874571845315418}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.6458416248560779, 
      0.}}], 
     {GrayLevel[0], InsetBox["21", {0.3593214806644271, 0.394361146316182}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0], 
      InsetBox["44", {0.5364006682363882, 0.6380897385819528}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.645841624856078, 0.9749143690630834}}], 
     {GrayLevel[0], 
      InsetBox["29", {0.35932148066442715, 0.5805532227469015}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.07280133647277633, 0.788722292632364}}], 
     {GrayLevel[0], 
      InsetBox["62", {0.0728013364727763, 0.4874571845315418}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.6458416248560779, 0.}}], 
     {GrayLevel[0], 
      InsetBox["50", {0.3593214806644271, 0.09309603821535976}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0], 
      InsetBox["27", {0.5364006682363881, 0.3368246304811306}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0], 
      InsetBox["37", {0.6458416248560779, 0.4874571845315417}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0], InsetBox["23", {0.3593214806644271, 0.394361146316182}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0], 
      InsetBox["50", {0.3593214806644271, 0.09309603821535976}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0], 
      InsetBox["24", {0.8229208124280389, 0.7311857767973126}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0], 
      InsetBox["44", {0.5364006682363882, 0.6380897385819528}]}}, 
    {GrayLevel[0], Thickness[0.005], 
     ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0], 
      InsetBox["27", {0.5364006682363881, 0.3368246304811306}]}}}, {
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.645841624856078, 0.9749143690630834}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
       Scaled[{0.02, 0.02}, {0.645841624856078, 0.9749143690630834}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.07280133647277633, 0.788722292632364}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
       Scaled[{0.02, 0.02}, {0.07280133647277633, 0.788722292632364}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], 
      PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\"\>", 
       Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
       Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\:0434\"\>", 
       Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
       ImageScaled[{0, Rational[1, 2]}]]}}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 1.0249143690630833`}},
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.845439372940839*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"859b503c-7a16-4886-b3fd-d96fc137acb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"trail", " ", "=", " ", 
  RowBox[{"TravelingSalesman", "[", "G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CostOfPath", "[", 
   RowBox[{"G", ",", "trail"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GetEdgeWeights", "[", 
  RowBox[{"G", ",", 
   RowBox[{"Partition", "[", 
    RowBox[{"trail", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.845439446606474*^9},ExpressionUUID->"643fd2c8-5d33-4128-b252-\
0016e2a0d775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "2", ",", "4", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.845439420293812*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"b96cff4a-08de-44a3-8e94-9dd3941b0363"],

Cell[BoxData["158"], "Output",
 CellChangeTimes->{3.845439420296686*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"8494f434-7ca3-42ed-8dd9-9ce586ff5184"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"29", ",", "21", ",", "27", ",", "37", ",", "44"}], "}"}]], "Output",\

 CellChangeTimes->{3.845439420299263*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"5a806558-7619-4ef9-871f-ae4c25daef7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowGraph", "[", 
  RowBox[{
   RowBox[{"Highlight", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{"Partition", "[", 
       RowBox[{"trail", ",", "2", ",", "1"}], "]"}], "}"}], ",", 
     RowBox[{"HighlightedEdgeColors", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"HighlightedEdgeStyle", "->", 
      RowBox[{"Thickness", "[", "0.01", "]"}]}]}], "]"}], ",", 
   RowBox[{"EdgeColor", "->", "LightGray"}]}], "]"}]], "Input",
 CellLabel->
  "In[167]:=",ExpressionUUID->"73140e15-e2f7-41b7-a058-4696bfe8c2b2"],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {0.6458416248560779, 
      0.}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.07280133647277627,
       0.18619207643071953`}}], 
     {GrayLevel[0]}}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {0.6458416248560779, 
      0.}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.645841624856078, 0.9749143690630834}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.07280133647277633, 0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.6458416248560779, 0.}}], 
     {GrayLevel[0]}}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
      0.9749143690630834}}], 
     {GrayLevel[0]}}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0.85], Thickness[0.005], 
     ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0]}}}, {
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.645841624856078, 0.9749143690630834}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
       Scaled[{0.02, 0.02}, {0.645841624856078, 0.9749143690630834}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.07280133647277633, 0.788722292632364}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
       Scaled[{0.02, 0.02}, {0.07280133647277633, 0.788722292632364}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], 
      PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\"\>", 
       Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
       Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
       ImageScaled[{0, Rational[1, 2]}]]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0], 
      InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\:0434\"\>", 
       Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
       ImageScaled[{0, Rational[1, 2]}]]}}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 1.0249143690630833`}},
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.845439550287684*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"5f751279-16a4-4d30-a099-b395ac7d706e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnimateGraph", "[", 
  RowBox[{"G", ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"trail", ",", "2", ",", "1"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"HighlightedEdgeColors", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", 
   RowBox[{"HighlightedEdgeStyle", "->", 
    RowBox[{"Thickness", "[", "0.01", "]"}]}], ",", 
   RowBox[{"HighlightedVertexStyle", "->", 
    RowBox[{"Disk", "[", "0.05", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"8e8ca677-be1a-464e-b9df-e01f1bb37fad"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i11$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = Automatic, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i11$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                TagBox[
                 PaneBox[
                  
                  DynamicModuleBox[{Typeset`open$$ = False, Typeset`paused$$ =
                    Automatic, Typeset`running$$ = True, Typeset`index$$ = 
                   Automatic, Typeset`rate$$ = Automatic, Typeset`dir$$ = 
                   Forward}, 
                   StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEExpressions", "Manipulator06"][
                    Dynamic[$CellContext`i11$$], 
                    Dynamic[$CellContext`i11$$], {1, 6, 1}, Medium, Small, 
                    Automatic, True, Automatic, False, True, False, {
                    "DirectionButton", "FasterSlowerButtons", 
                    "PlayPauseButton"}, False, {}, 
                    Dynamic[Typeset`open$$], 
                    Dynamic[Typeset`running$$], 
                    Dynamic[Typeset`index$$], 
                    Dynamic[Typeset`rate$$], 
                    Dynamic[Typeset`dir$$]],
                    ImageSizeCache->{211., {9., 15.}}],
                    DynamicUpdating->True],
                   DynamicModuleValues:>{}],
                  BaselinePosition->Baseline,
                  ImageMargins->0],
                 Manipulate`InterpretManipulator[
                  Dynamic[$CellContext`i11$$], {1, 6, 1}, {
                  AutoAction -> False, AnimationRate -> Automatic, 
                   AnimationDirection -> Forward, AnimationRate -> Automatic, 
                   AnimationRunning -> True, AnimationTimeIndex -> Automatic, 
                   PausedTime -> Automatic, 
                   AppearanceElements -> {
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"}}]]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}], 2->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}], 3->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}], 4->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}], 5->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}], 6->
               GraphicsBox[{{
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.645841624856078, 0.9749143690630834}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.07280133647277627, 0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277633, 0.788722292632364}, {1., 
                    0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.645841624856078, 0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.07280133647277633, 0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {
                    0.6458416248560779, 0.}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.07280133647277627, 0.18619207643071953`}, {1.,
                     0.4874571845315417}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{0.6458416248560779, 0.}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.645841624856078, 
                    0.9749143690630834}}], 
                   {GrayLevel[0]}}, 
                  {RGBColor[1, 0, 0], Thickness[0.01], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277633, 
                    0.788722292632364}}], 
                   {GrayLevel[0]}}, 
                  {GrayLevel[0], Thickness[0.005], 
                   ArrowBox[{{1., 0.4874571845315417}, {0.07280133647277627, 
                    0.18619207643071953`}}], 
                   {GrayLevel[0]}}}, {
                  {GrayLevel[0], 
                   {PointSize[0.05], 
                    PointBox[{0.645841624856078, 0.9749143690630834}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0417\:0435\:043c\:043b\:044f\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.645841624856078, 0.9749143690630834}], ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277633, 0.788722292632364}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0427.\:0421\:043f\:0443\:0442\"\>", 
                    Scaled[{0.02, 0.02}, \
{0.07280133647277633, 0.788722292632364}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], 
                    PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0444.\:0441\:0443\:0434\:044c\:0431\:044b\
\"\>", Scaled[{0.02, 0.02}, {0.07280133647277627, 0.18619207643071953}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0437\:0430\:043c\:043e\:043a\"\>", 
                    Scaled[{0.02, 0.02}, {0.6458416248560779, 0.}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}, 
                  {GrayLevel[0], 
                   {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
                   {GrayLevel[0]}, 
                   {GrayLevel[0], 
                    InsetBox["\<\"\:0430\:0441\:0442\:0435\:0440\:043e\:0438\
\:0434\"\>", Scaled[{0.02, 0.02}, {1., 0.4874571845315417}], 
                    ImageScaled[{0, Rational[1, 2]}]]}}}},
                AlignmentPoint->Center,
                AspectRatio->Automatic,
                Axes->False,
                AxesLabel->None,
                AxesOrigin->Automatic,
                AxesStyle->{},
                Background->None,
                BaseStyle->{},
                BaselinePosition->Automatic,
                ColorOutput->Automatic,
                ContentSelectable->Automatic,
                CoordinatesToolOptions:>Automatic,
                DisplayFunction:>$DisplayFunction,
                Epilog->{},
                FormatType:>TraditionalForm,
                Frame->False,
                FrameLabel->None,
                FrameStyle->{},
                FrameTicks->Automatic,
                FrameTicksStyle->{},
                GridLines->None,
                GridLinesStyle->{},
                ImageMargins->0.,
                ImagePadding->All,
                ImageSize->Automatic,
                ImageSizeRaw->Automatic,
                LabelStyle->{},
                Method->Automatic,
                PlotLabel->None,
                
                PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 
                 1.0249143690630833`}},
                PlotRangeClipping->False,
                PlotRangePadding->Automatic,
                PlotRegion->Automatic,
                PreserveImageOptions->Automatic,
                Prolog->{},
                RotateLabel->True,
                Ticks->Automatic,
                TicksStyle->{}]}, Dynamic[$CellContext`i11$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.845439577115068*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"554223e8-b9a1-4947-83f6-6c10e0b1279b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$ContextPath", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"$ContextPath", ",", "\"\<Combinatorica`\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "$ContextPath"}], "Input",
 CellLabel->
  "In[169]:=",ExpressionUUID->"4acc26eb-3cef-45c1-b2f0-0036ebc55db1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SVTools`\"\>", ",", "\<\"Utilities`URLTools`\"\>", 
   ",", "\<\"JLink`\"\>", ",", "\<\"XMPTools`Wrappers`\"\>", 
   ",", "\<\"XMPTools`Helpers`\"\>", ",", "\<\"DocumentationSearch`\"\>", 
   ",", "\<\"ResourceLocator`\"\>", ",", "\<\"System`\"\>", 
   ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8454396231302853`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"ca01b1dc-f04e-4a3a-89be-78debcce4fc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"gr", "\[IndentingNewLine]", 
 RowBox[{"AnnotationValue", "[", 
  RowBox[{"gr", ",", "EdgeWeight"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", "2", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"#1", "->", "#2"}], "&"}], "@@@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", "2", ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AnnotationValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gr", ",", 
        RowBox[{"#1", "->", "#2"}]}], "}"}], ",", "EdgeWeight"}], "]"}], 
    "&"}], "@@@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", "2", ",", "1"}], "]"}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.845439686345254*^9, 3.845439833389957*^9}, {
  3.8454398758130913`*^9, 3.845439885263386*^9}, {3.845439918799108*^9, 
  3.845439932501671*^9}, {3.845439966443276*^9, 3.8454400086097517`*^9}, {
  3.84544014788162*^9, 3.845440171326707*^9}, {3.845440210252521*^9, 
  3.8454402678623743`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"26da290c-59b6-4f00-bb4b-085c70b29c66"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
       SparseArray[
       Automatic, {7, 7}, 0, {
        1, {{0, 4, 7, 10, 14, 19, 22, 24}, {{2}, {4}, {5}, {6}, {1}, {3}, {
          5}, {2}, {4}, {5}, {1}, {3}, {5}, {6}, {1}, {2}, {3}, {4}, {7}, {
          1}, {4}, {7}, {5}, {6}}}, Pattern}]}, {
      EdgeLabels -> {"EdgeWeight"}, 
       VertexLabels -> {
        6 -> "DC", 3 -> "DE", 5 -> "CH", 7 -> "NY", 4 -> "DA", 2 -> "SE", 1 -> 
         "LA"}, EdgeWeight -> {1100, 1400, 2000, 2600, 1300, 2000, 780, 1000, 
        900, 1300, 800, 200}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           2.0489463018297083`, 1.2416522616361885`}}, 
           0.023802741961610058`]}, 
         InsetBox["1100", {1.5156295644317241, 0.9333050170647192}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.1831554652987484`, 0.}}, 0.023802741961610058`]}, 
         InsetBox["1400", {1.0827341461662443, 0.31247888624662495}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.1223507266805313, 0.8629120570977575}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.98231282703374, 0.6249577724932499}, {
           0.09855656536281132, 0.2759548016052554}}, 0.023802741961610058`]},
          InsetBox["2600", {0.5404346961982757, 0.45045628704925267}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
           2.14820487455907, 0.420375226069281}}, 0.023802741961610058`]}, 
         InsetBox["1300", {2.098575588194389, 0.8310137438527347}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0489463018297083`, 1.2416522616361885`}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["2000", {1.6556674640785154, 1.1712593016692268}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.14820487455907, 0.420375226069281}, {
           1.1831554652987484`, 0.}}, 0.023802741961610058`]}, 
         InsetBox["780", {1.6656801699289092, 0.2101876130346405}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.14820487455907, 0.420375226069281}, {
           1.2623886263273227`, 1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["1000", {1.7052967504431962, 0.760620783885773}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1831554652987484`, 0.}, {1.2623886263273227`, 
           1.100866341702265}}, 0.023802741961610058`]}, 
         InsetBox["900", {1.2227720458130356, 0.5504331708511325}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1831554652987484`, 0.}, {0.09855656536281132, 
           0.2759548016052554}}, 0.023802741961610058`]}, 
         InsetBox["1300", {0.6408560153307798, 0.1379774008026277}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.2623886263273227`, 1.100866341702265}, {0., 
           1.3009572153741233`}}, 0.023802741961610058`]}, 
         InsetBox["800", {0.6311943131636614, 1.2009117785381942}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.09855656536281132, 0.2759548016052554}, {0., 
           1.3009572153741233`}}, 0.023802741961610058`]}, 
         InsetBox["200", {0.04927828268140566, 0.7884560084896893}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.98231282703374, 0.6249577724932499}, 
          0.023802741961610058], 
         InsetBox["\<\"LA\"\>", 
          Offset[{2, 2}, {1.00611556899535, 0.6487605144548599}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0489463018297083, 1.2416522616361885}, 
          0.023802741961610058], 
         InsetBox["\<\"SE\"\>", 
          Offset[{2, 2}, {2.0727490437913185, 1.2654550035977985}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.14820487455907, 0.420375226069281}, 0.023802741961610058],
          InsetBox["\<\"DE\"\>", 
          Offset[{2, 2}, {2.17200761652068, 0.44417796803089105}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1831554652987484, 0.}, 0.023802741961610058], 
         InsetBox["\<\"DA\"\>", 
          Offset[{2, 2}, {1.2069582072603584, 0.023802741961610058}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2623886263273227, 1.100866341702265}, 
          0.023802741961610058], 
         InsetBox["\<\"CH\"\>", 
          Offset[{2, 2}, {1.2861913682889328, 1.124669083663875}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.09855656536281132, 0.2759548016052554}, 
          0.023802741961610058], 
         InsetBox["\<\"DC\"\>", 
          Offset[{2, 2}, {0.12235930732442138, 0.29975754356686546}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.3009572153741233}, 0.023802741961610058], 
         InsetBox["\<\"NY\"\>", 
          Offset[{2, 2}, {0.023802741961610058, 1.3247599573357334}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.845439688598741*^9, 3.845439768801653*^9, 3.845439811978072*^9, 
   3.845439933507766*^9, {3.845439985583559*^9, 3.845440009080277*^9}, {
   3.845440166537963*^9, 3.8454401723100367`*^9}, {3.845440212866744*^9, 
   3.845440268438405*^9}},
 CellLabel->
  "Out[221]=",ExpressionUUID->"7693899e-9f9a-4f63-9c6f-697fe2bf04e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1100", ",", "1400", ",", "2000", ",", "2600", ",", "1300", ",", "2000", 
   ",", "780", ",", "1000", ",", "900", ",", "1300", ",", "800", ",", "200"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.845439688598741*^9, 3.845439768801653*^9, 3.845439811978072*^9, 
   3.845439933507766*^9, {3.845439985583559*^9, 3.845440009080277*^9}, {
   3.845440166537963*^9, 3.8454401723100367`*^9}, {3.845440212866744*^9, 
   3.845440268449852*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"78e63aeb-ff0a-4fd9-ab2e-0168777312aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845439688598741*^9, 3.845439768801653*^9, 3.845439811978072*^9, 
   3.845439933507766*^9, {3.845439985583559*^9, 3.845440009080277*^9}, {
   3.845440166537963*^9, 3.8454401723100367`*^9}, {3.845440212866744*^9, 
   3.845440268454348*^9}},
 CellLabel->
  "Out[223]=",ExpressionUUID->"f7b8c868-6d17-4d40-8d6e-aec55f3f7b3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"7", "\[Rule]", "6"}], ",", 
   RowBox[{"6", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845439688598741*^9, 3.845439768801653*^9, 3.845439811978072*^9, 
   3.845439933507766*^9, {3.845439985583559*^9, 3.845440009080277*^9}, {
   3.845440166537963*^9, 3.8454401723100367`*^9}, {3.845440212866744*^9, 
   3.845440268459549*^9}},
 CellLabel->
  "Out[224]=",ExpressionUUID->"eb220df5-5285-4777-8b57-fe47e2f8667d"],

Cell[BoxData["2800"], "Output",
 CellChangeTimes->{
  3.845439688598741*^9, 3.845439768801653*^9, 3.845439811978072*^9, 
   3.845439933507766*^9, {3.845439985583559*^9, 3.845440009080277*^9}, {
   3.845440166537963*^9, 3.8454401723100367`*^9}, {3.845440212866744*^9, 
   3.845440268463915*^9}},
 CellLabel->
  "Out[225]=",ExpressionUUID->"1e8b868b-8207-4f74-9c62-772f8696a1bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostPath", "[", 
   RowBox[{"G_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AnnotationValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"G", ",", 
           RowBox[{"#1", "->", "#2"}]}], "}"}], ",", "EdgeWeight"}], "]"}], 
       "&"}], "@@@", 
      RowBox[{"Partition", "[", " ", 
       RowBox[{"#", ",", "2", ",", "1"}], "]"}]}], "]"}], "&"}], "/@", 
   "l"}]}]], "Input",
 CellChangeTimes->{{3.845440299644232*^9, 3.845440300442298*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"c88402d8-f3d3-4758-a81e-5f215b1aa388"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CostPath", "[", 
  RowBox[{"gr", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "7"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845440304037524*^9, 3.845440321850957*^9}, {
  3.8454403613954067`*^9, 3.845440418510347*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"175fc691-e2f7-4d51-ac95-d9da992b40a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3180", ",", "1700"}], "}"}]], "Output",
 CellChangeTimes->{
  3.845440322824547*^9, {3.845440363744021*^9, 3.845440419894042*^9}},
 CellLabel->
  "Out[232]=",ExpressionUUID->"162838a7-f64c-488b-8c88-e2cb28ebe391"]
}, Open  ]]
},
WindowSize->{1173, 1047},
WindowMargins->{{127, Automatic}, {Automatic, 35}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fa2dc43c-63bd-41c0-9642-636e971f0fac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3098, 84, 283, "Input",ExpressionUUID->"5a9eb0fc-1727-4b7d-86f8-aa969deec0a9"],
Cell[3681, 108, 7604, 159, 246, "Output",ExpressionUUID->"026f677f-8f0a-4649-9631-fa5e01acfe02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11322, 272, 671, 14, 30, "Input",ExpressionUUID->"5863a114-0972-4e93-a695-e0e57e5f1242"],
Cell[11996, 288, 2941, 77, 44, "Output",ExpressionUUID->"35789d0f-6ca5-470c-b7a6-d612c8cc76a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14974, 370, 881, 22, 73, "Input",ExpressionUUID->"e3b5ddc1-f59b-4cb8-ae69-ba8893671d27"],
Cell[15858, 394, 13491, 274, 236, "Output",ExpressionUUID->"e6a11375-8943-4fec-b8e5-c7e836dc551a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29386, 673, 469, 11, 73, "Input",ExpressionUUID->"86f1404d-62fd-4fd3-83f5-74ba2a70f094"],
Cell[29858, 686, 252513, 4323, 456, "Output",ExpressionUUID->"ea7fbb36-c35b-4420-b103-519f05dba8af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282408, 5014, 271, 5, 52, "Input",ExpressionUUID->"5646a571-affd-4c84-8a7b-9f898eda56ab"],
Cell[282682, 5021, 502, 11, 46, "Message",ExpressionUUID->"c381ee14-5ad0-4a9a-a6db-4a81c6bba64e"],
Cell[283187, 5034, 496, 9, 56, "Output",ExpressionUUID->"ea0e50f9-49b7-4a3d-891e-7cd47a4717c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283720, 5048, 1417, 35, 168, "Input",ExpressionUUID->"b8f2eed2-f63e-4e75-a024-66858b86875a"],
Cell[285140, 5085, 6705, 166, 394, "Output",ExpressionUUID->"859b503c-7a16-4886-b3fd-d96fc137acb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291882, 5256, 509, 13, 94, "Input",ExpressionUUID->"643fd2c8-5d33-4128-b252-0016e2a0d775"],
Cell[292394, 5271, 241, 6, 34, "Output",ExpressionUUID->"b96cff4a-08de-44a3-8e94-9dd3941b0363"],
Cell[292638, 5279, 155, 3, 34, "Output",ExpressionUUID->"8494f434-7ca3-42ed-8dd9-9ce586ff5184"],
Cell[292796, 5284, 235, 6, 34, "Output",ExpressionUUID->"5a806558-7619-4ef9-871f-ae4c25daef7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293068, 5295, 564, 14, 52, "Input",ExpressionUUID->"73140e15-e2f7-41b7-a058-4696bfe8c2b2"],
Cell[293635, 5311, 5604, 150, 394, "Output",ExpressionUUID->"5f751279-16a4-4d30-a099-b395ac7d706e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299276, 5466, 580, 14, 52, "Input",ExpressionUUID->"8e8ca677-be1a-464e-b9df-e01f1bb37fad"],
Cell[299859, 5482, 49952, 1039, 469, "Output",ExpressionUUID->"554223e8-b9a1-4947-83f6-6c10e0b1279b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349848, 6526, 301, 7, 52, "Input",ExpressionUUID->"4acc26eb-3cef-45c1-b2f0-0036ebc55db1"],
Cell[350152, 6535, 467, 9, 34, "Output",ExpressionUUID->"ca01b1dc-f04e-4a3a-89be-78debcce4fc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350656, 6549, 1331, 36, 115, "Input",ExpressionUUID->"26da290c-59b6-4f00-bb4b-085c70b29c66"],
Cell[351990, 6587, 6833, 143, 246, "Output",ExpressionUUID->"7693899e-9f9a-4f63-9c6f-697fe2bf04e4"],
Cell[358826, 6732, 561, 12, 34, "Output",ExpressionUUID->"78e63aeb-ff0a-4fd9-ab2e-0168777312aa"],
Cell[359390, 6746, 517, 13, 34, "Output",ExpressionUUID->"f7b8c868-6d17-4d40-8d6e-aec55f3f7b3e"],
Cell[359910, 6761, 479, 11, 34, "Output",ExpressionUUID->"eb220df5-5285-4777-8b57-fe47e2f8667d"],
Cell[360392, 6774, 377, 7, 34, "Output",ExpressionUUID->"1e8b868b-8207-4f74-9c62-772f8696a1bd"]
}, Open  ]],
Cell[360784, 6784, 663, 20, 30, "Input",ExpressionUUID->"c88402d8-f3d3-4758-a81e-5f215b1aa388"],
Cell[CellGroupData[{
Cell[361472, 6808, 470, 12, 30, "Input",ExpressionUUID->"175fc691-e2f7-4d51-ac95-d9da992b40a2"],
Cell[361945, 6822, 253, 6, 57, "Output",ExpressionUUID->"162838a7-f64c-488b-8c88-e2cb28ebe391"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

